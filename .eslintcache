[{"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\index.js":"1","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\reportWebVitals.js":"2","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\App.js":"3","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\redux\\index.js":"4","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\routes.js":"5","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\asset\\css\\GlobalStyles.js":"6","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\contexts\\DataContext.js":"7","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\main\\contexts\\WeatherContext.js":"8","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\main\\contexts\\WSContext.js":"9","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\main\\contexts\\AuthenContext.js":"10","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\theme\\index.js":"11","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\redux\\reducers\\tuyen.js":"12","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\redux\\reducers\\currentVideo.js":"13","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\redux\\reducers\\imginfo.js":"14","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\redux\\reducers\\wsToaDo.js":"15","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\redux\\reducers\\dbauto.js":"16","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\redux\\reducers\\cot.js":"17","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\redux\\reducers\\dbtc.js":"18","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\redux\\reducers\\showinfoerror.js":"19","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\redux\\reducers\\wsToaDo2.js":"20","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\redux\\reducers\\modeshowvideo.js":"21","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\redux\\reducers\\listuyen.js":"22","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\redux\\reducers\\tuyengs.js":"23","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\redux\\reducers\\idvideo.js":"24","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\redux\\reducers\\pageSize.js":"25","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\redux\\reducers\\slideindex.js":"26","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\redux\\reducers\\dialogimage.js":"27","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\redux\\reducers\\typewsdata.js":"28","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\redux\\reducers\\currentVideoNormal.js":"29","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\redux\\reducers\\SlideVideoShow.js":"30","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\redux\\reducers\\AllSlideShowData.js":"31","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\redux\\reducers\\idtuyen.js":"32","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\redux\\reducers\\currentVideoImage.js":"33","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\redux\\reducers\\SlideImgShow.js":"34","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\redux\\reducers\\anhthietbiloi.js":"35","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\redux\\reducers\\idanh.js":"36","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\redux\\reducers\\detectVideo.js":"37","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\redux\\reducers\\sizeResize.js":"38","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\redux\\reducers\\idthietbi.js":"39","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\Page404.js":"40","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\main\\Main.js":"41","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\thietbi.js":"42","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\protectedRouter.js":"43","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\Main3D.js":"44","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\login.js":"45","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\TestPage.js":"46","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\account\\Account.js":"47","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\home\\Home.js":"48","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\dotbay\\HomeDB.js":"49","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\camera\\camera.js":"50","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\test\\DataFetching.js":"51","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\test\\bieudothongke.js":"52","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\nhapdulieu\\HomeDL.js":"53","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\dashboard\\dashboard.js":"54","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\RedirectPage\\Redirect404.js":"55","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\photoms\\photoms.js":"56","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\reducers\\dataReducer.js":"57","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\main\\reducers\\authReducer.js":"58","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\theme\\typography.js":"59","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\theme\\shadows.js":"60","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\redux\\types.js":"61","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\test\\datathietbiloi_T1.js":"62","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\util\\ChangeUrl.js":"63","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\util\\formatDate.js":"64","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\util\\GetTenTuyen.js":"65","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\photoms\\const\\itemDataError.js":"66","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\generalObject\\Loading.js":"67","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\photoms\\const\\itemDataNone.js":"68","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\generalObject\\Waiting.js":"69","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\photoms\\detail2.js":"70","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\dashboard\\Sua.js":"71","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\dashboard\\SoLoiTrenSoThietBi.js":"72","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\photoms\\imgshow.js":"73","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\dashboard\\NgungHoatDong.js":"74","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\photoms\\detail.js":"75","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\dashboard\\ThietBiLoiSoThietBi.js":"76","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\dashboard\\ThietBiDaSua.js":"77","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\dashboard\\Sales.js":"78","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\dashboard\\Loi.js":"79","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\dashboard\\ThongKeLoi.js":"80","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\dashboard\\ThietBi.js":"81","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\nhapdulieu\\Children.js":"82","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\mixins\\chartjs.js":"83","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\test\\List.js":"84","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\test\\Loading.js":"85","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\util\\optiontuyen.js":"86","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\home\\Video.js":"87","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\dotbay\\dotbay.js":"88","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\main\\Map.js":"89","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\generalObject\\Map_Item.js":"90","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\FullViewMap.js":"91","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\nhapdulieu\\nhapdulieu.js":"92","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\generalObject\\DialogBC.js":"93","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\generalObject\\BtnPrint.js":"94","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\util\\toado\\T8.js":"95","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\util\\toado\\T7.js":"96","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\util\\toado\\T6.js":"97","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\util\\toado\\T2.js":"98","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\generalObject\\slideshow-gallery\\SlideshowGallery.js":"99","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\util\\toado\\T4.js":"100","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\util\\toado\\T5.js":"101","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\util\\toado\\T3.js":"102","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\generalObject\\VideoDialog\\Dialog_Popup_Normal.js":"103","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\util\\toado\\T1.js":"104","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\generalObject\\ListImg.js":"105","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\generalObject\\xacthucbc.js":"106","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\generalObject\\BC.js":"107","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\generalObject\\slideshow-gallery\\DialogImageShow3.js":"108","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\generalObject\\slideshow-gallery\\DialogVideoShow.js":"109","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\generalObject\\slideshow-gallery\\DialogImageShow2.js":"110","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\generalObject\\Dialog_Save_Popup 2.js":"111","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\generalObject\\VideoDialog\\Dialog_Popup_Image.js":"112","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\generalObject\\VideoDialog\\Dialog_Popup.js":"113","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\generalObject\\BCNgay.js":"114","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\photoms\\itemData.js":"115","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\generalObject\\Log.js":"116","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\generalObject\\slideshow-gallery\\DialogImageShow.js":"117","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\generalObject\\VideoSaveDialog\\Dialog_Save_Popup.js":"118","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\nhapdulieu\\VideoWS.js":"119","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\account\\AccountProfileDetails.js":"120","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\account\\AccountProfile.js":"121","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\home\\dotbayhome.js":"122","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\util\\optionloaitb.js":"123","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\main\\MainAppBar.js":"124","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\generalObject\\slideshow-gallery\\SlideshowGallery2.js":"125"},{"size":908,"mtime":1639550007000,"results":"126","hashOfConfig":"127"},{"size":375,"mtime":1619616529000,"results":"128","hashOfConfig":"127"},{"size":1236,"mtime":1651747998000,"results":"129","hashOfConfig":"127"},{"size":1880,"mtime":1661416449675,"results":"130","hashOfConfig":"127"},{"size":2467,"mtime":1660725541483,"results":"131","hashOfConfig":"127"},{"size":709,"mtime":1619616529000,"results":"132","hashOfConfig":"127"},{"size":692,"mtime":1651585719000,"results":"133","hashOfConfig":"127"},{"size":1446,"mtime":1643257702000,"results":"134","hashOfConfig":"127"},{"size":1581,"mtime":1644223336000,"results":"135","hashOfConfig":"127"},{"size":4456,"mtime":1646023557000,"results":"136","hashOfConfig":"127"},{"size":610,"mtime":1646722643000,"results":"137","hashOfConfig":"127"},{"size":286,"mtime":1639632533000,"results":"138","hashOfConfig":"127"},{"size":276,"mtime":1645701745000,"results":"139","hashOfConfig":"127"},{"size":273,"mtime":1639550546000,"results":"140","hashOfConfig":"127"},{"size":272,"mtime":1646719043000,"results":"141","hashOfConfig":"127"},{"size":270,"mtime":1639629003000,"results":"142","hashOfConfig":"127"},{"size":289,"mtime":1646718966000,"results":"143","hashOfConfig":"127"},{"size":268,"mtime":1639629054000,"results":"144","hashOfConfig":"127"},{"size":278,"mtime":1643277915000,"results":"145","hashOfConfig":"127"},{"size":273,"mtime":1646719034000,"results":"146","hashOfConfig":"127"},{"size":315,"mtime":1637672951000,"results":"147","hashOfConfig":"127"},{"size":273,"mtime":1639632542000,"results":"148","hashOfConfig":"127"},{"size":271,"mtime":1643441761000,"results":"149","hashOfConfig":"127"},{"size":305,"mtime":1636810358000,"results":"150","hashOfConfig":"127"},{"size":273,"mtime":1647248323000,"results":"151","hashOfConfig":"127"},{"size":273,"mtime":1644315021000,"results":"152","hashOfConfig":"127"},{"size":275,"mtime":1644253715000,"results":"153","hashOfConfig":"127"},{"size":275,"mtime":1644244151000,"results":"154","hashOfConfig":"127"},{"size":283,"mtime":1645701759000,"results":"155","hashOfConfig":"127"},{"size":277,"mtime":1646739112000,"results":"156","hashOfConfig":"127"},{"size":279,"mtime":1645534236000,"results":"157","hashOfConfig":"127"},{"size":270,"mtime":1660809164237,"results":"158","hashOfConfig":"127"},{"size":282,"mtime":1645701754000,"results":"159","hashOfConfig":"127"},{"size":275,"mtime":1646739095000,"results":"160","hashOfConfig":"127"},{"size":276,"mtime":1660808650800,"results":"161","hashOfConfig":"127"},{"size":268,"mtime":1661416405533,"results":"162","hashOfConfig":"127"},{"size":278,"mtime":1639551392000,"results":"163","hashOfConfig":"127"},{"size":351,"mtime":1647247727000,"results":"164","hashOfConfig":"127"},{"size":272,"mtime":1661226602116,"results":"165","hashOfConfig":"127"},{"size":752,"mtime":1630651919000,"results":"166","hashOfConfig":"127"},{"size":10155,"mtime":1658921088871,"results":"167","hashOfConfig":"127"},{"size":16406,"mtime":1663317272831,"results":"168","hashOfConfig":"127"},{"size":1090,"mtime":1646722500000,"results":"169","hashOfConfig":"127"},{"size":851,"mtime":1651800517000,"results":"170","hashOfConfig":"127"},{"size":3471,"mtime":1643258331000,"results":"171","hashOfConfig":"127"},{"size":25342,"mtime":1635389135000,"results":"172","hashOfConfig":"127"},{"size":1208,"mtime":1628670547000,"results":"173","hashOfConfig":"127"},{"size":1734,"mtime":1647248116000,"results":"174","hashOfConfig":"127"},{"size":1738,"mtime":1647247949000,"results":"175","hashOfConfig":"127"},{"size":23500,"mtime":1639641458000,"results":"176","hashOfConfig":"127"},{"size":14808,"mtime":1663732360005,"results":"177","hashOfConfig":"127"},{"size":4526,"mtime":1663232023381,"results":"178","hashOfConfig":"127"},{"size":767,"mtime":1647247414000,"results":"179","hashOfConfig":"127"},{"size":4352,"mtime":1619658459000,"results":"180","hashOfConfig":"127"},{"size":294,"mtime":1630652546000,"results":"181","hashOfConfig":"127"},{"size":23953,"mtime":1662626089167,"results":"182","hashOfConfig":"127"},{"size":283,"mtime":1661160133086,"results":"183","hashOfConfig":"127"},{"size":331,"mtime":1643258391000,"results":"184","hashOfConfig":"127"},{"size":587,"mtime":1646722716000,"results":"185","hashOfConfig":"127"},{"size":1645,"mtime":1619616529000,"results":"186","hashOfConfig":"127"},{"size":1347,"mtime":1661416472800,"results":"187","hashOfConfig":"127"},{"size":162445,"mtime":1662712986625,"results":"188","hashOfConfig":"127"},{"size":671,"mtime":1663313425918,"results":"189","hashOfConfig":"127"},{"size":415,"mtime":1645609919000,"results":"190","hashOfConfig":"127"},{"size":306,"mtime":1647337418000,"results":"191","hashOfConfig":"127"},{"size":1020,"mtime":1639550659000,"results":"192","hashOfConfig":"127"},{"size":352,"mtime":1620373607000,"results":"193","hashOfConfig":"127"},{"size":648,"mtime":1639550666000,"results":"194","hashOfConfig":"127"},{"size":295,"mtime":1620117065000,"results":"195","hashOfConfig":"127"},{"size":6128,"mtime":1651747175000,"results":"196","hashOfConfig":"127"},{"size":4331,"mtime":1658941228552,"results":"197","hashOfConfig":"127"},{"size":3808,"mtime":1619658459000,"results":"198","hashOfConfig":"127"},{"size":1908,"mtime":1644330642000,"results":"199","hashOfConfig":"127"},{"size":1164,"mtime":1658916831939,"results":"200","hashOfConfig":"127"},{"size":6092,"mtime":1648453574000,"results":"201","hashOfConfig":"127"},{"size":1668,"mtime":1658916000653,"results":"202","hashOfConfig":"127"},{"size":2262,"mtime":1658916047560,"results":"203","hashOfConfig":"127"},{"size":4047,"mtime":1659588031623,"results":"204","hashOfConfig":"127"},{"size":4331,"mtime":1658916718020,"results":"205","hashOfConfig":"127"},{"size":2305,"mtime":1658916567671,"results":"206","hashOfConfig":"127"},{"size":4868,"mtime":1619658459000,"results":"207","hashOfConfig":"127"},{"size":1980,"mtime":1663735560982,"results":"208","hashOfConfig":"127"},{"size":5820,"mtime":1619616529000,"results":"209","hashOfConfig":"127"},{"size":7348,"mtime":1663211895224,"results":"210","hashOfConfig":"127"},{"size":352,"mtime":1620373608000,"results":"211","hashOfConfig":"127"},{"size":1111,"mtime":1637672721000,"results":"212","hashOfConfig":"127"},{"size":7866,"mtime":1647249098000,"results":"213","hashOfConfig":"127"},{"size":18911,"mtime":1662625951421,"results":"214","hashOfConfig":"127"},{"size":2109,"mtime":1663735581728,"results":"215","hashOfConfig":"127"},{"size":16005,"mtime":1663742745527,"results":"216","hashOfConfig":"127"},{"size":9774,"mtime":1646722547000,"results":"217","hashOfConfig":"127"},{"size":22791,"mtime":1663226274318,"results":"218","hashOfConfig":"127"},{"size":18737,"mtime":1646733196000,"results":"219","hashOfConfig":"127"},{"size":820,"mtime":1637696348000,"results":"220","hashOfConfig":"127"},{"size":4007,"mtime":1634545817000,"results":"221","hashOfConfig":"127"},{"size":8290,"mtime":1634908988000,"results":"222","hashOfConfig":"127"},{"size":4511,"mtime":1634545341000,"results":"223","hashOfConfig":"127"},{"size":4170,"mtime":1634543157000,"results":"224","hashOfConfig":"127"},{"size":5795,"mtime":1646744106000,"results":"225","hashOfConfig":"127"},{"size":5140,"mtime":1634643938000,"results":"226","hashOfConfig":"127"},{"size":7895,"mtime":1634545262000,"results":"227","hashOfConfig":"127"},{"size":19068,"mtime":1634544926000,"results":"228","hashOfConfig":"127"},{"size":10106,"mtime":1647241700000,"results":"229","hashOfConfig":"127"},{"size":10826,"mtime":1634647934000,"results":"230","hashOfConfig":"127"},{"size":8271,"mtime":1647020189000,"results":"231","hashOfConfig":"127"},{"size":13233,"mtime":1646723311000,"results":"232","hashOfConfig":"127"},{"size":548,"mtime":1639550801000,"results":"233","hashOfConfig":"127"},{"size":9679,"mtime":1647022437000,"results":"234","hashOfConfig":"127"},{"size":5655,"mtime":1647241564000,"results":"235","hashOfConfig":"127"},{"size":9683,"mtime":1647022444000,"results":"236","hashOfConfig":"127"},{"size":16554,"mtime":1648464588000,"results":"237","hashOfConfig":"127"},{"size":10152,"mtime":1647241678000,"results":"238","hashOfConfig":"127"},{"size":10614,"mtime":1647241719000,"results":"239","hashOfConfig":"127"},{"size":99827,"mtime":1637696001000,"results":"240","hashOfConfig":"127"},{"size":859,"mtime":1651747045000,"results":"241","hashOfConfig":"127"},{"size":8158,"mtime":1644320535000,"results":"242","hashOfConfig":"127"},{"size":9242,"mtime":1646723200000,"results":"243","hashOfConfig":"127"},{"size":30048,"mtime":1663229006318,"results":"244","hashOfConfig":"127"},{"size":5145,"mtime":1646722602000,"results":"245","hashOfConfig":"127"},{"size":3933,"mtime":1644312894000,"results":"246","hashOfConfig":"127"},{"size":1471,"mtime":1644312832000,"results":"247","hashOfConfig":"127"},{"size":12002,"mtime":1662625923786,"results":"248","hashOfConfig":"127"},{"size":536,"mtime":1662623429888,"results":"249","hashOfConfig":"127"},{"size":6872,"mtime":1647019939000,"results":"250","hashOfConfig":"127"},{"size":4511,"mtime":1663315789254,"results":"251","hashOfConfig":"127"},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},"1shaojn",{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"254"},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"266","messages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"268","messages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"270","messages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"272","messages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"254"},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"281","messages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"283","messages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"285","messages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"289","messages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"291","messages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"293","messages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"297","messages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"299","messages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"301","messages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"303","messages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"305","messages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"307","messages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"309","messages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"311","messages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"313","messages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"315","messages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"317","messages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"319","messages":"320","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"321","messages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"323","messages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"325","messages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"327","messages":"328","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"329","messages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"331","messages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"333","messages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"254"},{"filePath":"336","messages":"337","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"254"},{"filePath":"339","messages":"340","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"254"},{"filePath":"342","messages":"343","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"254"},{"filePath":"345","messages":"346","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"254"},{"filePath":"348","messages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"350","messages":"351","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"254"},{"filePath":"353","messages":"354","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"254"},{"filePath":"356","messages":"357","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"358","messages":"359","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"360","messages":"361","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"254"},{"filePath":"363","messages":"364","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"365","messages":"366","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367","usedDeprecatedRules":"254"},{"filePath":"368","messages":"369","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"370","messages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"372","messages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374","usedDeprecatedRules":"254"},{"filePath":"375","messages":"376","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377","usedDeprecatedRules":"254"},{"filePath":"378","messages":"379","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"380","messages":"381","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"382","messages":"383","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"254"},{"filePath":"385","messages":"386","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"254"},{"filePath":"388","messages":"389","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"390","messages":"391","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"392","messages":"393","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"394","messages":"395","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"396","messages":"397","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"398","messages":"399","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"400","messages":"401","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"402","messages":"403","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"404","messages":"405","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"406","messages":"407","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408","usedDeprecatedRules":"254"},{"filePath":"409","messages":"410","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"411","messages":"412","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"413","messages":"414","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"415","messages":"416","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"417","usedDeprecatedRules":"254"},{"filePath":"418","messages":"419","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"420","usedDeprecatedRules":"254"},{"filePath":"421","messages":"422","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"423","messages":"424","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"425","messages":"426","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"427","messages":"428","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"429","messages":"430","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"431","messages":"432","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"433","messages":"434","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"435","messages":"436","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"437","messages":"438","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"439","usedDeprecatedRules":"254"},{"filePath":"440","messages":"441","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"442","messages":"443","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"444","messages":"445","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"446","usedDeprecatedRules":"254"},{"filePath":"447","messages":"448","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"449","usedDeprecatedRules":"254"},{"filePath":"450","messages":"451","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"452","messages":"453","errorCount":0,"fatalErrorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"454","messages":"455","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"456","usedDeprecatedRules":"254"},{"filePath":"457","messages":"458","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"459","usedDeprecatedRules":"254"},{"filePath":"460","messages":"461","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"462","usedDeprecatedRules":"254"},{"filePath":"463","messages":"464","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"465","messages":"466","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"467","messages":"468","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"469","messages":"470","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"471","messages":"472","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"473","messages":"474","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"475","usedDeprecatedRules":"254"},{"filePath":"476","messages":"477","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"478","messages":"479","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"480","messages":"481","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"482","messages":"483","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"484","usedDeprecatedRules":"254"},{"filePath":"485","messages":"486","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"487","messages":"488","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"489","usedDeprecatedRules":"254"},{"filePath":"490","messages":"491","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"492","usedDeprecatedRules":"254"},{"filePath":"493","messages":"494","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"495","messages":"496","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"497","messages":"498","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"499","usedDeprecatedRules":"254"},{"filePath":"500","messages":"501","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"502","messages":"503","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"504","usedDeprecatedRules":"254"},{"filePath":"505","messages":"506","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"507","usedDeprecatedRules":"254"},{"filePath":"508","messages":"509","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"510","usedDeprecatedRules":"254"},{"filePath":"511","messages":"512","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"513","messages":"514","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"515","messages":"516","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"517","usedDeprecatedRules":"254"},{"filePath":"518","messages":"519","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"520","messages":"521","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"522","usedDeprecatedRules":"254"},{"filePath":"523","messages":"524","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"525","usedDeprecatedRules":"254"},{"filePath":"526","messages":"527","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"528","messages":"529","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"530","messages":"531","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"532","usedDeprecatedRules":"254"},{"filePath":"533","messages":"534","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"254"},{"filePath":"535","messages":"536","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"537","usedDeprecatedRules":"254"},{"filePath":"538","messages":"539","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"540","usedDeprecatedRules":"254"},"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\index.js",[],["541","542"],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\reportWebVitals.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\App.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\redux\\index.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\routes.js",["543","544"],"import Main from \"./component/main/Main\";\r\nimport Account from \"./component/account/Account\";\r\nimport Camera from \"./component/camera/camera\";\r\nimport Dashboard from \"./component/dashboard/dashboard\";\r\nimport Login from \"./component/login\";\r\nimport Home from \"./component/home/Home\";\r\nimport TestPage from \"./component/TestPage\";\r\nimport Page404 from \"./component/Page404\";\r\nimport ThietBi from \"./component/thietbi\";\r\nimport HomeDB from \"./component/dotbay/HomeDB\";\r\nimport HomeDL from \"./component/nhapdulieu/HomeDL\";\r\nimport PhotoMS from \"./component/photoms/photoms\";\r\nimport Main3D from \"./component/Main3D\";\r\nimport test from \"./component/test/DataFetching\";\r\n//------------------------------------------------------------\r\nimport Redirect404 from \"./component/RedirectPage/Redirect404\";\r\nimport ProtectedRoute from \"./protectedRouter\";\r\nimport DataFetching from \"./component/test/DataFetching\";\r\nimport Bieudothongke from \"./component/test/bieudothongke\";\r\n\r\nconst routes = [\r\n  {\r\n    path: \"app\",\r\n    element: <ProtectedRoute component={Main} />,\r\n    children: [\r\n      {\r\n        path: \"thongtincanhan\",\r\n        element: <ProtectedRoute component={Account} />,\r\n      },\r\n      { path: \"bando\", element: <ProtectedRoute component={Account} /> },\r\n      { path: \"camera\", element: <ProtectedRoute component={Camera} /> },\r\n      { path: \"thongke\", element: <ProtectedRoute component={Dashboard} /> },\r\n      { path: \"trangchu\", element: <ProtectedRoute component={Home} /> },\r\n      {\r\n        path: \"thietbi\",\r\n        element: <ProtectedRoute component={ThietBi} />,\r\n      },\r\n      {\r\n        path: \"dotbay\",\r\n        element: <ProtectedRoute component={HomeDB} />,\r\n      },\r\n      {\r\n        path: \"nhapdulieu\",\r\n        element: <ProtectedRoute component={HomeDL} />,\r\n      },\r\n      {\r\n        path: \"quanlyanh\",\r\n        element: <ProtectedRoute component={PhotoMS} />,\r\n      },\r\n      { path: \"ts\", element: <ProtectedRoute component={TestPage} /> },\r\n      { path: \"m3d\", element: <ProtectedRoute component={Main3D} /> },\r\n      { path: \"*\", element: <ProtectedRoute component={Redirect404} /> },\r\n      { path: \"test\", element: <ProtectedRoute component={DataFetching} /> },\r\n    ],\r\n  },\r\n  {\r\n    path: \"/\",\r\n    element: <Login />,\r\n  },\r\n  {\r\n    path: \"/404\",\r\n    element: <ProtectedRoute component={Page404} />,\r\n  },\r\n  {\r\n    path: \"*\",\r\n    element: <ProtectedRoute component={Redirect404} />,\r\n  },\r\n];\r\n\r\nexport default routes;\r\n","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\asset\\css\\GlobalStyles.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\contexts\\DataContext.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\main\\contexts\\WeatherContext.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\main\\contexts\\WSContext.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\main\\contexts\\AuthenContext.js",["545","546","547","548","549"],"import { createContext, useReducer, useEffect, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { authReducer } from \"../reducers/authReducer\";\r\nimport { info } from \"../../account/info.json\";\r\n\r\nexport const AuthenContext = createContext();\r\n\r\nconst AuthenContextProvider = ({ children }) => {\r\n  const logoutTimerIdRef = useRef(null);\r\n  const [authState, dispatch] = useReducer(authReducer, {\r\n    authLoading: true,\r\n    isAuthenticated: false,\r\n    user: null,\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n  const LOCAL_STORAGE_TOKEN_NAME = \"Token\";\r\n  const fixed_token = \"Ne43ZyMMGsml9ALLkcEiWPYTR8lg3nMZ\";\r\n\r\n  // Authenticate user\r\n  const loadUser = async () => {\r\n    try {\r\n      let objauth = localStorage.getItem(LOCAL_STORAGE_TOKEN_NAME)\r\n        ? JSON.parse(atob(localStorage.getItem(LOCAL_STORAGE_TOKEN_NAME)))\r\n        : null;\r\n      if (objauth && objauth.token === fixed_token) {\r\n        dispatch({\r\n          type: \"SET_AUTH\",\r\n          payload: { isAuthenticated: true, user: info },\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: \"SET_AUTH\",\r\n          payload: { isAuthenticated: false, user: null },\r\n        });\r\n        LogOut();\r\n      }\r\n    } catch (error) {\r\n      localStorage.removeItem(LOCAL_STORAGE_TOKEN_NAME);\r\n      dispatch({\r\n        type: \"SET_AUTH\",\r\n        payload: { isAuthenticated: false, user: null },\r\n      });\r\n      // navigate(\"/\", { replace: true });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadUser();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const params = new Proxy(new URLSearchParams(window.location.search), {\r\n      get: (searchParams, prop) => searchParams.get(prop),\r\n    });\r\n    if (authState.isAuthenticated) {\r\n      navigate(params.Next ? params.Next : \"/app/trangchu\", { replace: true });\r\n    } else {\r\n      let path = window.location.pathname;\r\n      if (path != \"/\")\r\n        navigate(\r\n          {\r\n            pathname: \"/\",\r\n            search: `Next=${path}`,\r\n          },\r\n          { replace: true }\r\n        );\r\n    }\r\n  }, [authState]);\r\n\r\n  const autoLogout = () => {\r\n    let objauth = localStorage.getItem(LOCAL_STORAGE_TOKEN_NAME)\r\n      ? JSON.parse(atob(localStorage.getItem(LOCAL_STORAGE_TOKEN_NAME)))\r\n      : null;\r\n    if (objauth) {\r\n      let time = Math.floor(new Date().getTime() / 1000);\r\n      if (objauth.expirationTime <= time) {\r\n        if (window.location.pathname !== \"/\")\r\n          alert(\"Phiên đăng nhập đã hết hạn vui lòng đăng nhập lại.\");\r\n        LogOut();\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    autoLogout();\r\n  });\r\n\r\n  useEffect(() => {\r\n    /*  const autoLogout = () => {\r\n      if (document.visibilityState === \"hidden\") {\r\n        const timeOutId = window.setTimeout(logoutUser, 5 * 60 * 1000);\r\n        logoutTimerIdRef.current = timeOutId;\r\n      } else {\r\n        window.clearTimeout(logoutTimerIdRef.current);\r\n      }\r\n    };*/\r\n\r\n    document.addEventListener(\"click\", autoLogout);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"click\", autoLogout);\r\n    };\r\n  }, []);\r\n\r\n  const Login = ({ user, pass }) => {\r\n    if (user === info.user && pass === info.pass) {\r\n      const currentDateTime = new Date();\r\n      const updateDateTime = new Date();\r\n      const expireDateTime = new Date(\r\n        updateDateTime.setHours(updateDateTime.getHours() + 2)\r\n      );\r\n      const currentTimestamp = Math.floor(currentDateTime.getTime() / 1000);\r\n      const expireTimeStamp = Math.floor(expireDateTime.getTime() / 1000);\r\n\r\n      const initialState = {\r\n        isLogin: true,\r\n        loginTime: currentTimestamp,\r\n        expirationTime: expireTimeStamp,\r\n        token: fixed_token,\r\n      };\r\n      localStorage.setItem(\r\n        LOCAL_STORAGE_TOKEN_NAME,\r\n        btoa(JSON.stringify(initialState))\r\n      );\r\n\r\n      loadUser();\r\n    } else {\r\n      alert(\"Sai thông tin đăng nhập\");\r\n    }\r\n  };\r\n\r\n  const LogOut = () => {\r\n    dispatch({\r\n      type: \"SET_AUTH\",\r\n      payload: { isAuthenticated: false, user: null },\r\n    });\r\n    localStorage.removeItem(LOCAL_STORAGE_TOKEN_NAME);\r\n  };\r\n\r\n  // Context data\r\n  const authenContextData = {\r\n    authState,\r\n    Login,\r\n    LogOut,\r\n    fixed_token,\r\n    LOCAL_STORAGE_TOKEN_NAME,\r\n  };\r\n\r\n  // Return provider\r\n  return (\r\n    <AuthenContext.Provider value={authenContextData}>\r\n      {children}\r\n    </AuthenContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthenContextProvider;\r\n","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\theme\\index.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\redux\\reducers\\tuyen.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\redux\\reducers\\currentVideo.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\redux\\reducers\\imginfo.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\redux\\reducers\\wsToaDo.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\redux\\reducers\\dbauto.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\redux\\reducers\\cot.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\redux\\reducers\\dbtc.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\redux\\reducers\\showinfoerror.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\redux\\reducers\\wsToaDo2.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\redux\\reducers\\modeshowvideo.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\redux\\reducers\\listuyen.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\redux\\reducers\\tuyengs.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\redux\\reducers\\idvideo.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\redux\\reducers\\pageSize.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\redux\\reducers\\slideindex.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\redux\\reducers\\dialogimage.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\redux\\reducers\\typewsdata.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\redux\\reducers\\currentVideoNormal.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\redux\\reducers\\SlideVideoShow.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\redux\\reducers\\AllSlideShowData.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\redux\\reducers\\idtuyen.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\redux\\reducers\\currentVideoImage.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\redux\\reducers\\SlideImgShow.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\redux\\reducers\\anhthietbiloi.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\redux\\reducers\\idanh.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\redux\\reducers\\detectVideo.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\redux\\reducers\\sizeResize.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\redux\\reducers\\idthietbi.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\Page404.js",["550"],"import React from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../asset/css/page404.css';\r\n\r\nexport default function Page404() {\r\n    const navigate = useNavigate();\r\n    const handleClick = () => {    \r\n        navigate('/app/trangchu')\r\n    }\r\n\r\n    return (       \r\n        <div id=\"notfound\">\r\n            <div class=\"notfound\">\r\n                <div class=\"notfound-404\">\r\n                    <h1>:(</h1>\r\n                </div>\r\n                <h2>404 - Trang không tồn tại</h2>\r\n                <p>Trang bạn đang tìm kiếm có thể đã bị xóa, đổi tên hoặc tạm thời không có sẵn.</p>\r\n                <a onClick={() => handleClick()}>Trang Chủ</a>\r\n            </div>\r\n\t    </div>\r\n    );\r\n}","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\main\\Main.js",["551","552","553"],"import React, { useEffect, useState, useLayoutEffect } from \"react\";\r\nimport Geocode from \"react-geocode\";\r\nimport {\r\n  AppBar,\r\n  Box,\r\n  fade,\r\n  IconButton,\r\n  makeStyles,\r\n  Tab,\r\n  Tabs,\r\n} from \"@material-ui/core\";\r\nimport HomeRoundedIcon from \"@material-ui/icons/HomeRounded\";\r\nimport CameraAltRoundedIcon from \"@material-ui/icons/CameraAltRounded\";\r\nimport EqualizerRoundedIcon from \"@material-ui/icons/EqualizerRounded\";\r\nimport BuildIcon from \"@material-ui/icons/Build\";\r\nimport VisibilityOffOutlinedIcon from \"@material-ui/icons/VisibilityOffOutlined\";\r\nimport VisibilityOutlined from \"@material-ui/icons/VisibilityOutlined\";\r\nimport { Outlet, useNavigate } from \"react-router-dom\";\r\nimport $ from \"jquery\";\r\nimport MainAppBar from \"./MainAppBar\";\r\nimport AirplanemodeActiveIcon from \"@material-ui/icons/AirplanemodeActive\";\r\nimport EventNoteIcon from \"@material-ui/icons/EventNote\";\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport PhotoAlbumIcon from \"@material-ui/icons/PhotoAlbum\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../redux/types\";\r\n\r\nGeocode.setApiKey(\"AIzaSyDC8AsBAx1cDfV2mNKLiICA0GfnPv9HLDE\");\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  tab: {\r\n    padding: 0,\r\n    margin: 0,\r\n  },\r\n  header: {\r\n    // width: \"100vw\",\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    color: \"white\",\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"block\",\r\n    },\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"20ch\",\r\n    },\r\n  },\r\n  sectionDesktop: {\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"flex\",\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: \"flex\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  labelContainer: {\r\n    width: \"auto\",\r\n    backgroundColor: \"black\",\r\n  },\r\n  iconLabelWrapper: {\r\n    flexDirection: \"row\",\r\n    minHeight: \"auto\",\r\n    padding: 0,\r\n    margin: 0,\r\n  },\r\n  labelIcon: {\r\n    padding: 3,\r\n    minHeight: \"auto\",\r\n  },\r\n  LinkTab: {\r\n    padding: 0,\r\n    margin: 0,\r\n    width: \"fit-content\",\r\n    height: \"100%\",\r\n    maxHeight: \"60px\",\r\n  },\r\n  LinkTab1: {\r\n    height: 1,\r\n    minHeight: 50,\r\n  },\r\n  square: {\r\n    height: 100,\r\n    width: 100,\r\n  },\r\n}));\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `nav-tab-${index}`,\r\n    \"aria-controls\": `nav-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nfunction LinkTab(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Tab\r\n        className={classes.LinkTab1}\r\n        classes={{\r\n          labelIcon: classes.LinkTab,\r\n          root: classes.LinkTab,\r\n          wrapper: classes.iconLabelWrapper,\r\n        }}\r\n        icon={props.Icon}\r\n        component={\"C\"}\r\n        onClick={() => {\r\n          props.setValue(props.index);\r\n          if (props.href !== \"visibility\") props.navigate(props.href);\r\n        }}\r\n        {...props}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nconst Navbar = [\r\n  {\r\n    index: 0,\r\n    ten_navbar: \"Trang chủ\",\r\n    url: \"/app/trangchu\",\r\n    icon: <HomeRoundedIcon />,\r\n  },\r\n  {\r\n    index: 1,\r\n    ten_navbar: \"Quản lý đợt bay\",\r\n    url: \"/app/dotbay\",\r\n    icon: <AirplanemodeActiveIcon />,\r\n  },\r\n  {\r\n    index: 2,\r\n    ten_navbar: \"Đợt bay tùy chọn\",\r\n    url: \"/app/nhapdulieu\",\r\n    icon: <AddCircleOutlineIcon />,\r\n  },\r\n  {\r\n    index: 3,\r\n    ten_navbar: \"Quản lý thiết bị\",\r\n    url: \"/app/thietbi\",\r\n    icon: <EventNoteIcon />,\r\n  },\r\n  {\r\n    index: 4,\r\n    ten_navbar: \"Quản lý ảnh\",\r\n    url: \"/app/quanlyanh\",\r\n    icon: <PhotoAlbumIcon />,\r\n  },\r\n  {\r\n    index: 5,\r\n    ten_navbar: \"Bảo dưỡng\",\r\n    url: \"/app/bando\",\r\n    icon: <BuildIcon />,\r\n  },\r\n  {\r\n    index: 6,\r\n    ten_navbar: \"Camera\",\r\n    url: \"/app/camera\",\r\n    icon: <CameraAltRoundedIcon />,\r\n  },\r\n  {\r\n    index: 7,\r\n    ten_navbar: \"Hành Lang Tuyến\",\r\n    url: \"/app/m3d\",\r\n    icon: <AddCircleOutlineIcon />,\r\n  },\r\n  {\r\n    index: 8,\r\n    ten_navbar: \"Thống kê\",\r\n    url: \"/app/thongke\",\r\n    icon: <EqualizerRoundedIcon />,\r\n  },\r\n  {\r\n    index: 9,\r\n    ten_navbar: \"Phân tích dữ liệu\",\r\n    url: \"/app/phantichdulieu\",\r\n    icon: <EqualizerRoundedIcon />,\r\n  },\r\n  {\r\n    index: 10,\r\n    ten_navbar: \"Test\",\r\n    url: \"/app/test\",\r\n  },\r\n];\r\n\r\nfunction Main() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(4);\r\n  const dispatch = useDispatch();\r\n  const [Visibility, setVisibility] = useState(true);\r\n  const [heighto, setHeighto] = useState(0);\r\n  const pageSize = useSelector((state) => state.pageSize);\r\n\r\n  let navigate = useNavigate();\r\n\r\n  const onHideTitle = () => {\r\n    $(\"#main_title\").toggle();\r\n    setHeighto(window.innerHeight - $(\"#header\").height());\r\n    setVisibility(!Visibility);\r\n  };\r\n\r\n  useEffect(() => {\r\n    $(document).ready(function () {\r\n      if (heighto === 0) {\r\n        if (window.devicePixelRatio > 1.25) {\r\n          setHeighto(window.innerHeight);\r\n        } else {\r\n          setHeighto(window.innerHeight - $(\"#header\").height() - 1);\r\n        }\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  useLayoutEffect(() => {\r\n    const updateSize = () => {\r\n      if (window.devicePixelRatio > 1.25) {\r\n        setHeighto(window.innerHeight);\r\n      } else {\r\n        setHeighto(window.innerHeight - $(\"#header\").height() - 1);\r\n      }\r\n    };\r\n    window.addEventListener(\"resize\", updateSize);\r\n    updateSize();\r\n    return () => window.removeEventListener(\"resize\", updateSize);\r\n  }, []);\r\n\r\n  ///// 3 view\r\n\r\n  useLayoutEffect(() => {\r\n    const updateSize = () => {\r\n      if (window.devicePixelRatio > 1.25) {\r\n      } else {\r\n        dispatch({\r\n          type: actions.sizeResize,\r\n          data: {},\r\n        });\r\n        setTimeout(() => {\r\n          dispatch({\r\n            type: actions.sizeResize,\r\n            data: {\r\n              width1: \"55%\",\r\n              width2: \"45%\",\r\n              height1: \"50%\",\r\n              height2: \"50%\",\r\n            },\r\n          });\r\n        }, 50);\r\n      }\r\n    };\r\n    window.addEventListener(\"resize\", updateSize);\r\n    updateSize();\r\n    return () => window.removeEventListener(\"resize\", updateSize);\r\n  }, []);\r\n\r\n  ///// image video\r\n\r\n  useLayoutEffect(() => {\r\n    const updateSize = () => {\r\n      setTimeout(() => {\r\n        let width = document.getElementsByClassName(\"outer\")[0]\r\n          ? document.getElementsByClassName(\"outer\")[0].offsetWidth\r\n          : 0;\r\n        let height = document.getElementsByClassName(\"outer\")[0]\r\n          ? document.getElementsByClassName(\"outer\")[0].offsetHeight\r\n          : 0;\r\n        if (pageSize.width !== width || pageSize.height !== height) {\r\n          dispatch({\r\n            type: actions.pageSize,\r\n            data: {\r\n              width: width,\r\n              height: height,\r\n            },\r\n          });\r\n        }\r\n      }, 500);\r\n    };\r\n    window.addEventListener(\"resize\", updateSize);\r\n    updateSize();\r\n    return () => window.removeEventListener(\"resize\", updateSize);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    var path = window.location.pathname;\r\n    var item = Navbar.find((x) => x.url === path);\r\n    if (item) {\r\n      setValue(item.index);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Box\r\n      id={\"body\"}\r\n      style={{\r\n        backgroundColor: \"white\",\r\n        height: window.innerHeight - 1,\r\n        overflow: \"scroll\",\r\n      }}\r\n    >\r\n      <div\r\n        id={\"header\"}\r\n        className={classes.header}\r\n        style={\r\n          {\r\n            /* width: window.innerWidth*/\r\n          }\r\n        }\r\n      >\r\n        <MainAppBar />\r\n        <AppBar\r\n          position=\"static\"\r\n          style={{\r\n            backgroundColor: \"#32408f\",\r\n            zIndex: 1,\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n          }}\r\n        >\r\n          <IconButton\r\n            component={\"C\"}\r\n            id=\"titlet-eye\"\r\n            onClick={() => onHideTitle()}\r\n            style={{ color: \"white\" }}\r\n            aria-label=\"delete\"\r\n          >\r\n            {Visibility ? (\r\n              <VisibilityOffOutlinedIcon />\r\n            ) : (\r\n              <VisibilityOutlined />\r\n            )}\r\n          </IconButton>\r\n          <Tabs\r\n            style={{ width: \"96%\" }}\r\n            value={value}\r\n            variant=\"scrollable\"\r\n            scrollButtons=\"auto\"\r\n          >\r\n            {Navbar.map((item, index) => (\r\n              <LinkTab\r\n                suburl={item.suburl}\r\n                label={item.ten_navbar}\r\n                setValue={setValue}\r\n                index={index}\r\n                navigate={navigate}\r\n                href={item.url}\r\n                icon={item.icon}\r\n                {...a11yProps(index)}\r\n              />\r\n            ))}\r\n          </Tabs>\r\n        </AppBar>\r\n      </div>\r\n      <div\r\n        id={\"section\"}\r\n        style={{\r\n          height: heighto,\r\n          /*overflow: \"hidden\",*/\r\n          position: \"relative\",\r\n          /* width: \"100vw\",*/\r\n        }}\r\n      >\r\n        <Outlet />\r\n      </div>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\thietbi.js",["554","555","556","557","558","559","560","561","562"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport VerifiedUserIcon from \"@material-ui/icons/VerifiedUser\";\r\nimport ErrorOutlineIcon from \"@material-ui/icons/ErrorOutline\";\r\nimport WarningOutlinedIcon from \"@material-ui/icons/WarningOutlined\";\r\nimport {\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n} from \"@material-ui/core\";\r\nimport Loading from \"./generalObject/Loading\";\r\nimport { optionltb } from \"../util/optionloaitb\";\r\nimport { ChangerUrl } from \"../util/ChangeUrl\";\r\nimport { Pagination } from \"@material-ui/lab\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    display: \"flex\",\r\n    borderRadius: 0,\r\n  },\r\n  details: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  content: {\r\n    flex: \"1 0 auto\",\r\n  },\r\n  cover: {\r\n    objectFit: \"cover\",\r\n    width: \"200px\",\r\n    height: 100,\r\n    marginTop: \"20px\",\r\n    marginLeft: \"10px\",\r\n  },\r\n  pagination: {\r\n    alignItems: \"center\",\r\n    justify: \"center\",\r\n    \"& > *\": {\r\n      justifyContent: \"center\",\r\n      display: \"flex\",\r\n    },\r\n  },\r\n}));\r\nexport default function ThietBi() {\r\n  const [page, setPage] = useState(1);\r\n  const classes = useStyles();\r\n  const [fetchedData, setFetchedData] = useState([]);\r\n  const [ListTuyen, setListTuyen] = useState([]);\r\n  const [Tuyen, setTuyen] = useState(null);\r\n  const [Loai, setLoai] = useState(null);\r\n  const [ListVTT, setListVTT] = useState([]);\r\n  const [VTT, setVTT] = useState(null);\r\n  const [DataDetail, setDataDetail] = useState({});\r\n  const urltb = `${\r\n    process.env.REACT_APP_API_URL\r\n  }getallthietbituyens?page=${page}${Tuyen ? \"&ma_tuyen=\" + Tuyen : \"&none=0\"}${\r\n    Loai ? \"&loai_thiet_bi=\" + Loai : \"&none=0\"\r\n  }${VTT ? \"&ma_vi_tri=\" + VTT : \"&none=0\"}`;\r\n  const urlt = process.env.REACT_APP_API_URL + \"getalltuyens\";\r\n  const urlvt = `${process.env.REACT_APP_API_URL}getallvitribytuyens?${\r\n    Tuyen ? \"&ma_tuyen=\" + Tuyen : \"&none=0\"\r\n  }`;\r\n\r\n  useEffect(() => {\r\n    async function getDatatb() {\r\n      try {\r\n        let res = await axios({\r\n          url: urltb,\r\n          method: \"get\",\r\n          timeout: 8000,\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        });\r\n        if (res.status === 200) {\r\n          // console.log(res.status);\r\n        }\r\n        return res.data;\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    }\r\n\r\n    getDatatb().then((res) => {\r\n      setFetchedData(res);\r\n      if (res && res?.data?.length != 0) setDataDetail(res?.data[0]);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    async function getDatatb() {\r\n      try {\r\n        let res = await axios({\r\n          url: urltb,\r\n          method: \"get\",\r\n          timeout: 8000,\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        });\r\n        if (res.status === 200) {\r\n          // console.log(res.status);\r\n        }\r\n        return res.data;\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    }\r\n\r\n    getDatatb().then((res) => {\r\n      setFetchedData(res);\r\n      if (res && res?.data?.length != 0) setDataDetail(res?.data[0]);\r\n    });\r\n  }, [page, Tuyen, Loai, VTT]);\r\n\r\n  useEffect(() => {\r\n    async function getDatatuyen() {\r\n      try {\r\n        let res = await axios({\r\n          url: urlt,\r\n          method: \"get\",\r\n          timeout: 8000,\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        });\r\n        if (res.status === 200) {\r\n          //  console.log(res.status);\r\n        }\r\n        return res.data;\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    }\r\n\r\n    getDatatuyen().then((res) => setListTuyen(res));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    async function getDatavtt() {\r\n      try {\r\n        let res = await axios({\r\n          url: urlvt,\r\n          method: \"get\",\r\n          timeout: 8000,\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        });\r\n        if (res.status === 200) {\r\n          //  console.log(res.status);\r\n        }\r\n        return res.data;\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    }\r\n\r\n    getDatavtt().then((res) => setListVTT(res));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    async function getDatavtt() {\r\n      try {\r\n        let res = await axios({\r\n          url: urlvt,\r\n          method: \"get\",\r\n          timeout: 8000,\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        });\r\n        if (res.status === 200) {\r\n          //  console.log(res.status);\r\n        }\r\n        return res.data;\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    }\r\n\r\n    getDatavtt().then((res) => setListVTT(res));\r\n  }, [Tuyen]);\r\n\r\n  const onChange = (event, setFunction) => {\r\n    event.preventDefault();\r\n    const target = event.target;\r\n    const value = target.value;\r\n    setFunction(value);\r\n  };\r\n\r\n  const onChangeSelectTuyen = (event) => {\r\n    onChange(event, setTuyen);\r\n    setPage(1);\r\n    setListVTT([]);\r\n    setVTT(null);\r\n  };\r\n\r\n  const onChangeSelectLTB = (event) => {\r\n    onChange(event, setLoai);\r\n    setPage(1);\r\n  };\r\n\r\n  const onChangeSelectVTT = (event) => {\r\n    onChange(event, setVTT);\r\n    setPage(1);\r\n  };\r\n\r\n  const Show = (data) => {\r\n    setDataDetail(data);\r\n  };\r\n\r\n  const handleChangePage = (e, p) => {\r\n    setPage(p);\r\n  };\r\n\r\n  const renderPostDetail = (post) => {\r\n    return (\r\n      <>\r\n        <section\r\n          style={{\r\n            padding: \"30px 40px\",\r\n            position: \"relative\",\r\n            borderBottom: \"solid 1px #EEE\",\r\n            fontSize: \"1rem\",\r\n          }}\r\n        >\r\n          <div\r\n            className\r\n            style={{\r\n              marginBottom: \"40px\",\r\n              position: \"relative\",\r\n              fontFamily: \"math\",\r\n            }}\r\n          >\r\n            <h2\r\n              style={{ color: \"red\", fontWeight: \"bold\", fontSize: \"1.2rem\" }}\r\n            >\r\n              Mã thiết bị {post.ma_thiet_bi}\r\n            </h2>\r\n          </div>\r\n          <div>\r\n            <ul\r\n              style={{\r\n                listStyleType: \"none\",\r\n              }}\r\n            >\r\n              <li>\r\n                <strong>Loại thiết bị: </strong> {post.loai_thiet_bi}\r\n              </li>\r\n              <li>\r\n                <strong>Trạng thái: </strong> {post.trang_thai}\r\n              </li>\r\n              <li>\r\n                <strong>Đường dây: </strong> {post.duong_day}\r\n              </li>\r\n              <li>\r\n                <strong>Thiết bị công trình cha: </strong>\r\n                {post.thiet_bi_cong_trinh_cha}\r\n              </li>\r\n              <li>\r\n                <strong>Thiết bị công trình: </strong>\r\n                {post.thiet_bi_cong_trinh}\r\n              </li>\r\n              <li>\r\n                <strong>Số thứ tự: </strong> {post.STT}\r\n              </li>\r\n              <li>\r\n                <strong>Serial: </strong> {post.so_che_tao_serial}\r\n              </li>\r\n              <li>\r\n                <strong>Ngày vận hành: </strong> {post.ngay_van_hanh}\r\n              </li>\r\n              <li>\r\n                <strong>CMIS: </strong> {post.ma_CMIS}\r\n              </li>\r\n              <li>\r\n                <strong>TSCD: </strong> {post.so_TSCD}\r\n              </li>\r\n              <li>\r\n                <strong>Tình trạng vận hành: </strong>{\" \"}\r\n                {post.tinh_trang_van_hanh}\r\n              </li>\r\n              <li>\r\n                <strong>Mã liên kết khác: </strong> {post.ma_lien_ket_khac}\r\n              </li>\r\n              <li>\r\n                <strong>Hãng sản xuất: </strong> {post.hang_san_xuat}\r\n              </li>\r\n              <li>\r\n                <strong>Nhà cung cấp: </strong>\r\n                {post.nha_cung_cap}\r\n              </li>\r\n              <li>\r\n                <strong>Nước sản xuất: </strong> {post.nuoc_san_xuat}\r\n              </li>\r\n              <li>\r\n                <strong>Sở hữu: </strong> {post.so_huu}\r\n              </li>\r\n              <li>\r\n                <strong>Ngày lắp đặt: </strong>\r\n                {post.ngay_lap_dat}\r\n              </li>\r\n              <li>\r\n                <strong>Năm sản xuất: </strong> {post.nam_san_xuat}\r\n              </li>\r\n              <li>\r\n                <strong>Ngày sửa đổi: </strong> {post.ngay_sua_doi}\r\n              </li>\r\n              <li>\r\n                <strong>Ghi chú: </strong> {post.ghi_chu}\r\n              </li>\r\n              <li>\r\n                <strong>Đơn vị: </strong> {post.don_vi}\r\n              </li>\r\n              <li>\r\n                <strong>Chi tiết: </strong>{\" \"}\r\n                {Object.keys(post.chi_tiet_tbi || {}).map((item, index) => (\r\n                  <li key={index}>\r\n                    {item}: {post.chi_tiet_tbi[item]}\r\n                  </li>\r\n                ))}\r\n              </li>\r\n              <li>\r\n                <strong>Mã bất thường:</strong> {post.ma_bat_thuong}\r\n              </li>\r\n              <li>\r\n                <strong>Mã tuyến:</strong> {post.ma_tuyen}\r\n              </li>\r\n              <li>\r\n                <strong>Mã vị trí:</strong> {post.ma_vi_tri}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </section>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const render = (post) => {\r\n    return (\r\n      <Card className={classes.root} key={post.ma_thiet_bi}>\r\n        {/*<CardMedia\r\n          className={classes.cover}\r\n          image={ChangerUrl(post.anh_thiet_bi)}\r\n    />*/}\r\n        <div className={classes.details}>\r\n          <CardContent className={classes.content}>\r\n            <Typography component=\"h5\" variant=\"h5\">\r\n              Mã thiết bị: {post.ma_thiet_bi}\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n              Loại thiết bị: {post.loai_thiet_bi} {\" | \"}\r\n              Trạng thái: {post.trang_thai} <br />\r\n              Tình trạng vận hành: {post.tinh_trang_van_hanh} <br />\r\n            </Typography>\r\n            <Button component={\"C\"} onClick={() => Show(post)}>\r\n              Xem chi tiết\r\n              {post.trang_thai === \"3_defect_warning\" ? (\r\n                <WarningOutlinedIcon style={{ color: \"#E7E009\" }} />\r\n              ) : post.trang_thai === \"2_defect_detected\" ? (\r\n                <ErrorOutlineIcon style={{ color: \"#FF0400\" }} />\r\n              ) : (\r\n                <VerifiedUserIcon style={{ color: \"green\" }} />\r\n              )}\r\n            </Button>\r\n          </CardContent>\r\n        </div>\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Box style={{ height: \"100%\", width: \"100%\" }}>\r\n      <Box\r\n        style={{\r\n          height: \"100%\",\r\n          width: \"50%\",\r\n          float: \"left\",\r\n          position: \"relative\",\r\n        }}\r\n      >\r\n        <div style={{ height: \"100%\", overflowY: \"scroll\" }}>\r\n          <div style={{ margin: \"10px\" }}>\r\n            <FormControl\r\n              variant={\"outlined\"}\r\n              style={{\r\n                alignSelf: \"center\",\r\n                minwidth: \"30%\",\r\n                width: \"30%\",\r\n                marginLeft: 10,\r\n              }}\r\n            >\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                Chọn Tuyến\r\n              </InputLabel>\r\n              <Select\r\n                width=\"100%\"\r\n                className={classes.select}\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                label={\"Chọn Tuyến\"}\r\n                value={Tuyen}\r\n                style={{ height: 40 }}\r\n                onChange={onChangeSelectTuyen}\r\n              >\r\n                <MenuItem value={null}>Trống</MenuItem>\r\n                {ListTuyen ? (\r\n                  ListTuyen.map((item, index) => (\r\n                    <MenuItem key={index} value={item.ma_tuyen}>\r\n                      {/*item.tt_tuyen*/}\r\n                      {item.ten_tuyen}\r\n                    </MenuItem>\r\n                  ))\r\n                ) : (\r\n                  <Loading />\r\n                )}\r\n              </Select>\r\n            </FormControl>\r\n            <FormControl\r\n              variant={\"outlined\"}\r\n              style={{\r\n                alignSelf: \"center\",\r\n                minwidth: \"30%\",\r\n                width: \"30%\",\r\n                marginLeft: 10,\r\n              }}\r\n            >\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                Chọn Loại Sản Phẩm\r\n              </InputLabel>\r\n              <Select\r\n                width=\"100%\"\r\n                className={classes.select}\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                label={\"Chọn Loại Sản Phẩm\"}\r\n                value={Loai}\r\n                style={{ height: 40 }}\r\n                onChange={onChangeSelectLTB}\r\n              >\r\n                <MenuItem value={null}>Trống</MenuItem>\r\n                {optionltb\r\n                  ? optionltb.map((item, index) => (\r\n                      <MenuItem key={index} value={item.value}>\r\n                        {item.text}\r\n                      </MenuItem>\r\n                    ))\r\n                  : \"\"}\r\n              </Select>\r\n            </FormControl>\r\n            <FormControl\r\n              variant={\"outlined\"}\r\n              style={{\r\n                alignSelf: \"center\",\r\n                minwidth: \"30%\",\r\n                width: \"30%\",\r\n                marginLeft: 10,\r\n              }}\r\n            >\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                Chọn Vị Trí\r\n              </InputLabel>\r\n              <Select\r\n                width=\"100%\"\r\n                className={classes.select}\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                label={\"Chọn Tuyến\"}\r\n                value={VTT}\r\n                style={{ height: 40 }}\r\n                onChange={onChangeSelectVTT}\r\n              >\r\n                <MenuItem value={null}>Trống</MenuItem>\r\n                {ListVTT ? (\r\n                  ListVTT.map((item, index) => (\r\n                    <MenuItem key={index} value={item.ma_vi_tri}>\r\n                      {item.ten_vi_tri}\r\n                    </MenuItem>\r\n                  ))\r\n                ) : (\r\n                  <Loading />\r\n                )}\r\n              </Select>\r\n            </FormControl>\r\n            <div style={{ marginTop: 10 }}>\r\n              <Pagination\r\n                className={classes.pagination}\r\n                count={fetchedData?.last_page || 0}\r\n                size=\"large\"\r\n                page={page}\r\n                color=\"primary\"\r\n                shape=\"rounded\"\r\n                onChange={handleChangePage}\r\n              />\r\n            </div>\r\n          </div>\r\n          {fetchedData ? (\r\n            fetchedData?.data?.length !== 0 ? (\r\n              fetchedData?.data?.map((post) => render(post))\r\n            ) : (\r\n              <div>\r\n                <p\r\n                  style={{\r\n                    top: \"50%\",\r\n                    left: \"50%\",\r\n                    transform: \"translate(-50%,-50%)\",\r\n                    position: \"absolute\",\r\n                  }}\r\n                >\r\n                  Không có dữ liệu bạn cần tìm, vui lòng trở lại sau!\r\n                </p>\r\n              </div>\r\n            )\r\n          ) : (\r\n            <Loading />\r\n          )}\r\n        </div>\r\n      </Box>\r\n      <Box\r\n        style={{\r\n          height: \"100%\",\r\n          width: \"50%\",\r\n          float: \"left\",\r\n          fontSize: \"1.25rem\",\r\n          overflow: \"scroll\",\r\n          color: \"black\",\r\n          position: \"relative\",\r\n        }}\r\n      >\r\n        {DataDetail && DataDetail?.ma_thiet_bi\r\n          ? renderPostDetail(DataDetail)\r\n          : fetchedData && fetchedData?.data?.length !== 0}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\protectedRouter.js",["563"],"import { useNavigate } from \"react-router-dom\";\r\nimport { useEffect, useContext } from \"react\";\r\nimport { AuthenContext } from \"./component/main/contexts/AuthenContext\";\r\n\r\nconst ProtectedRoute = ({ component: Component }) => {\r\n  const { authState, fixed_token, LOCAL_STORAGE_TOKEN_NAME } =\r\n    useContext(AuthenContext);\r\n  const navigate = useNavigate();\r\n\r\n  let objauth = localStorage.getItem(LOCAL_STORAGE_TOKEN_NAME)\r\n    ? JSON.parse(atob(localStorage.getItem(LOCAL_STORAGE_TOKEN_NAME)))\r\n    : null;\r\n\r\n  useEffect(() => {\r\n    let time = Math.floor(new Date().getTime() / 1000);\r\n    if (\r\n      authState.isAuthenticated &&\r\n      objauth &&\r\n      objauth.token !== fixed_token &&\r\n      objauth.expirationTime <= time\r\n    ) {\r\n      // navigate(\"/\", { replace: true });\r\n      let path = window.location.pathname;\r\n      if (path !== \"/\")\r\n        navigate(\r\n          {\r\n            pathname: \"/\",\r\n            search: `Next=${path}`,\r\n          },\r\n          { replace: true }\r\n        );\r\n    }\r\n  }, []);\r\n\r\n  return <Component />;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\Main3D.js",["564","565"],"import React from \"react\";\r\nimport { Pannellum, PannellumVideo } from \"pannellum-react\";\r\nimport myImage1 from \"./data_360/1.jpg\";\r\n//import myVideo from \"./data_360/videoplayback.mp4\";\r\nimport myVideo from \"./data_360/project.mp4\";\r\n\r\nexport default function Main3D() {\r\n  return (\r\n    <>\r\n      {/* \r\n      <Pannellum\r\n        width=\"100%\"\r\n        height=\"500px\"\r\n        image={myImage1}\r\n        pitch={10}\r\n        yaw={180}\r\n        hfov={110}\r\n        autoLoad\r\n        onLoad={() => {\r\n          console.log(\"panorama loaded\");\r\n        }}\r\n      ></Pannellum> */}\r\n      <PannellumVideo\r\n        video={myVideo}\r\n        loop\r\n        width=\"100%\"\r\n        height=\"600px\"\r\n        pitch={10}\r\n        //yaw={180}\r\n        yaw={0}\r\n        hfov={140}\r\n        minHfov={50}\r\n        maxHfov={180}\r\n      ></PannellumVideo>\r\n    </>\r\n  );\r\n}\r\n","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\login.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\TestPage.js",["566","567","568","569","570","571","572","573","574","575","576","577","578","579","580","581","582","583"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n//-----------------------------------------\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\r\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ImportExportIcon from \"@material-ui/icons/ImportExport\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport { FormControl, InputLabel, MenuItem, Select } from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n//-----------------------------------------\r\nimport Loading from \"../component/generalObject/Loading\";\r\n// data\r\nimport { T1 } from \"../util/toado/T1\";\r\nimport { T2 } from \"../util/toado/T2\";\r\nimport { T3 } from \"../util/toado/T3\";\r\nimport { T4 } from \"../util/toado/T4\";\r\nimport { T5 } from \"../util/toado/T5\";\r\nimport { T6 } from \"../util/toado/T6\";\r\nimport { T7 } from \"../util/toado/T7\";\r\nimport { T8 } from \"../util/toado/T8\";\r\n///////////////////////////////////////////\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as actions from \"../redux/types\";\r\n////\r\nimport {\r\n  ShapeEditor,\r\n  ImageLayer,\r\n  DrawLayer,\r\n  wrapShape,\r\n} from \"react-shape-editor\";\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    display: \"flex\",\r\n    borderRadius: 0,\r\n  },\r\n  details: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  content: {\r\n    flex: \"1 0 auto\",\r\n  },\r\n  cover: {\r\n    objectFit: \"cover\",\r\n    width: \"200px\",\r\n    height: 100,\r\n    marginTop: \"20px\",\r\n    marginLeft: \"10px\",\r\n  },\r\n}));\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          component={\"C\"}\r\n          className={classes.closeButton}\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function DialogSavePopup() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const urltb = process.env.REACT_APP_API_URL + \"dotkiemtras/\";\r\n  const urlt = process.env.REACT_APP_API_URL + \"tuyens/\";\r\n  const urlv = process.env.REACT_APP_API_URL + \"image/\";\r\n  const urltdkt = process.env.REACT_APP_API_URL + \"dotkiemtraimports/\";\r\n  const urlags = process.env.REACT_APP_API_URL + \"imagegiamsats/\";\r\n  const classes = useStyles();\r\n  const [ListTuyen, setListTuyen] = useState([]);\r\n  const [fetchedData, setFetchedData] = useState([]);\r\n  const [ListCot, setListCot] = useState([]);\r\n  const [resData, setResData] = useState(null);\r\n  var dt = new Date();\r\n  var date = `${dt.getFullYear().toString().padStart(4, \"0\")}-${(\r\n    dt.getMonth() + 1\r\n  )\r\n    .toString()\r\n    .padStart(2, \"0\")}-${dt.getDate().toString().padStart(2, \"0\")}`;\r\n  const values = {\r\n    someDate: date,\r\n  };\r\n  const [DateDB, setDateDB] = useState(date);\r\n  const [Dot, setDot] = useState(null);\r\n  const [Tuyen, setTuyen] = useState(null);\r\n  const [BatDau, setBatDau] = useState(null);\r\n  const [KetThuc, setKetThuc] = useState(null);\r\n  const [SelectForder, setSelectForder] = useState(false);\r\n  const [New, setNew] = useState(true);\r\n  const [Done, setDone] = useState(false);\r\n  const [selectedFile, SetSelectedFile] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    handleInfo();\r\n  }, [DateDB, Dot, Tuyen, BatDau, KetThuc, New]);\r\n\r\n  useEffect(() => {\r\n    async function getDataDB() {\r\n      try {\r\n        let res = await axios({\r\n          url: urltb,\r\n          method: \"get\",\r\n          timeout: 8000,\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        });\r\n        return res.data;\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    }\r\n\r\n    getDataDB().then((res) => setFetchedData(res));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    async function getDatatuyen() {\r\n      try {\r\n        let res = await axios({\r\n          url: urlt,\r\n          method: \"get\",\r\n          timeout: 8000,\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        });\r\n        return res.data;\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    }\r\n\r\n    getDatatuyen().then((res) => setListTuyen(res));\r\n  }, []);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const onChange = (event, setFunction) => {\r\n    event.preventDefault();\r\n    const target = event.target;\r\n    const value = target.value;\r\n    setFunction(value);\r\n    setDone(false);\r\n  };\r\n\r\n  const onChangeDateDB = (event) => {\r\n    onChange(event, setDateDB);\r\n  };\r\n\r\n  const onChangeSelectDot = (event) => {\r\n    onChange(event, setDot);\r\n  };\r\n\r\n  const Resset_Cot = () => {\r\n    setBatDau(null);\r\n    setKetThuc(null);\r\n    dispatch({ type: actions.ON_CURRENT_LIST_COT_CHANGE, data: [] });\r\n  };\r\n\r\n  const onChangeSelectTuyen = (event) => {\r\n    onChange(event, setTuyen);\r\n    Resset_Cot();\r\n    switch (event.target.value) {\r\n      case \"T1\":\r\n        setListCot(T1);\r\n        break;\r\n      case \"T2\":\r\n        setListCot(T2);\r\n        break;\r\n      case \"T3\":\r\n        setListCot(T3);\r\n        break;\r\n      case \"T4\":\r\n        setListCot(T4);\r\n        break;\r\n      case \"T5\":\r\n        setListCot(T5);\r\n        break;\r\n      case \"T6\":\r\n        setListCot(T6);\r\n        break;\r\n      case \"T7\":\r\n        setListCot(T7);\r\n        break;\r\n      case \"T8\":\r\n        setListCot(T8);\r\n        break;\r\n      default:\r\n        setListCot(null);\r\n        break;\r\n    }\r\n  };\r\n\r\n  const onChangeSelectBatDau = (event) => {\r\n    onChange(event, setBatDau);\r\n  };\r\n\r\n  const onChangeSelectKetThuc = (event) => {\r\n    onChange(event, setKetThuc);\r\n  };\r\n\r\n  const onChangeSelectOptions = (e) => {\r\n    e.target.checked ? setSelectForder(true) : setSelectForder(false);\r\n  };\r\n\r\n  const onChangeChecked = (e) => {\r\n    setDone(false);\r\n    e.target.checked ? setNew(true) : setNew(false);\r\n  };\r\n\r\n  const handleInfo = () => {\r\n    if (New) {\r\n      if (\r\n        DateDB !== null &&\r\n        Tuyen !== null &&\r\n        BatDau !== null &&\r\n        KetThuc !== null\r\n      ) {\r\n        setDone(true);\r\n      } else {\r\n        setDone(false);\r\n      }\r\n    } else {\r\n      if (\r\n        DateDB !== null &&\r\n        Dot !== null &&\r\n        Tuyen !== null &&\r\n        BatDau !== null &&\r\n        KetThuc !== null\r\n      ) {\r\n        setDone(true);\r\n      } else {\r\n        setDone(false);\r\n      }\r\n    }\r\n    var pluginArrayArg = new Array();\r\n    if (BatDau !== null) {\r\n      var jsonArg1 = new Object();\r\n      jsonArg1.cot = BatDau.split(\"|\")[0];\r\n      jsonArg1.toa_do_vi_tri = BatDau.split(\"|\")[1];\r\n      pluginArrayArg.push(jsonArg1);\r\n    }\r\n    if (KetThuc !== null) {\r\n      var jsonArg2 = new Object();\r\n      jsonArg2.cot = KetThuc.split(\"|\")[0];\r\n      jsonArg2.toa_do_vi_tri = KetThuc.split(\"|\")[1];\r\n      pluginArrayArg.push(jsonArg2);\r\n    }\r\n    var jsonArray = JSON.parse(JSON.stringify(pluginArrayArg));\r\n    dispatch({ type: actions.ON_CURRENT_LIST_COT_CHANGE, data: jsonArray });\r\n    dispatch({ type: actions.ON_CURRENT_TUYEN_CHANGE, data: Tuyen });\r\n  };\r\n\r\n  const convertBase64 = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n      const fileReader = new FileReader();\r\n      fileReader.readAsDataURL(file);\r\n\r\n      fileReader.onload = () => {\r\n        resolve(fileReader.result);\r\n      };\r\n\r\n      fileReader.onerror = (error) => {\r\n        reject(error);\r\n      };\r\n    });\r\n  };\r\n\r\n  async function onChangeHandler(event) {\r\n    var file = await convertBase64(event.target.files[0]);\r\n    if (file) SetSelectedFile(file);\r\n  }\r\n\r\n  function formatDate(date) {\r\n    var d = new Date(date),\r\n      month = \"\" + (d.getMonth() + 1),\r\n      day = \"\" + d.getDate(),\r\n      year = d.getFullYear();\r\n\r\n    if (month.length < 2) month = \"0\" + month;\r\n    if (day.length < 2) day = \"0\" + day;\r\n    //yyyy-mm-dd format\r\n    return [year, month, day].join(\"-\");\r\n  }\r\n\r\n  const getcot = (str) => {\r\n    var temp = str.toString();\r\n    var cot = temp.split(\"|\");\r\n    return cot[0];\r\n  };\r\n\r\n  const sendimg = (madkt) => {\r\n    axios\r\n      .post(urlv, {\r\n        ma_dot_kiem_tra: madkt,\r\n        hinh_anh_data: selectedFile,\r\n        stt: 0,\r\n      })\r\n      .then(\r\n        (response) => {\r\n          console.log(response.data);\r\n          setResData(response.data);\r\n          alert(\"Gửi thành công\");\r\n          //  handleClose();\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  const handelsubumit = async () => {\r\n    let batdau = await getcot(BatDau);\r\n    let ketthuc = await getcot(KetThuc);\r\n    axios\r\n      .post(urltb, {\r\n        ma_tuyen: Tuyen,\r\n        bat_dau_doan: batdau,\r\n        ket_thuc_doan: ketthuc,\r\n        ngay_kiem_tra: formatDate(DateDB),\r\n        hinh_thuc_kiem_tra: \"NGAY\",\r\n      })\r\n      .then(\r\n        (response) => {\r\n          sendimg(response.data.ma_dot_kiem_tra);\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  const handelsubumit2 = async () => {\r\n    sendimg(Dot);\r\n  };\r\n\r\n  const renderchoice = () => {\r\n    return (\r\n      <>\r\n        <div style={{ margin: \"10px\", width: \"90vw\" }}>\r\n          <FormControl\r\n            variant={\"outlined\"}\r\n            style={{\r\n              alignSelf: \"center\",\r\n              minWidth: \"25%\",\r\n              marginLeft: 10,\r\n            }}\r\n          >\r\n            <InputLabel id=\"demo-simple-select-outlined-label\">\r\n              Hãy chọn tuyến\r\n            </InputLabel>\r\n            <Select\r\n              width=\"100%\"\r\n              className={classes.select}\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              label={\"Hãy chọn tuyến\"}\r\n              value={Tuyen}\r\n              style={{ height: 40 }}\r\n              onChange={onChangeSelectTuyen}\r\n            >\r\n              <MenuItem value={null}>Trống</MenuItem>\r\n              {ListTuyen ? (\r\n                ListTuyen.map((item, index) => (\r\n                  <MenuItem key={index} value={item.ma_tuyen}>\r\n                    {item.tt_tuyen}\r\n                  </MenuItem>\r\n                ))\r\n              ) : (\r\n                <Loading />\r\n              )}\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl\r\n            variant={\"outlined\"}\r\n            style={{\r\n              alignSelf: \"center\",\r\n              minWidth: \"25%\",\r\n              marginLeft: 10,\r\n            }}\r\n          >\r\n            <InputLabel id=\"demo-simple-select-outlined-label\">\r\n              Hãy chọn điểm bắt đầu\r\n            </InputLabel>\r\n            <Select\r\n              width=\"100%\"\r\n              className={classes.select}\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              label={\"Hãy chọn tuyến\"}\r\n              value={BatDau}\r\n              style={{ height: 40 }}\r\n              onChange={onChangeSelectBatDau}\r\n            >\r\n              <MenuItem value={null}>Trống</MenuItem>\r\n              {ListCot ? (\r\n                ListCot.map((item, index) => (\r\n                  <MenuItem\r\n                    key={index}\r\n                    value={item.cot + \"|\" + item.x + \",\" + item.y}\r\n                  >\r\n                    {item.cot}\r\n                  </MenuItem>\r\n                ))\r\n              ) : (\r\n                <Loading />\r\n              )}\r\n            </Select>\r\n          </FormControl>{\" \"}\r\n          <FormControl\r\n            variant={\"outlined\"}\r\n            style={{\r\n              alignSelf: \"center\",\r\n              minWidth: \"25%\",\r\n              marginLeft: 10,\r\n              marginRight: 10,\r\n            }}\r\n          >\r\n            <InputLabel id=\"demo-simple-select-outlined-label\">\r\n              Hãy chọn điểm kết thúc\r\n            </InputLabel>\r\n            <Select\r\n              width=\"100%\"\r\n              className={classes.select}\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              label={\"Hãy chọn tuyến\"}\r\n              value={KetThuc}\r\n              style={{ height: 40 }}\r\n              onChange={onChangeSelectKetThuc}\r\n            >\r\n              <MenuItem value={null}>Trống</MenuItem>\r\n              {ListCot ? (\r\n                ListCot.map((item, index) => (\r\n                  <MenuItem\r\n                    key={index}\r\n                    value={item.cot + \"|\" + item.x + \",\" + item.y}\r\n                  >\r\n                    {item.cot}\r\n                  </MenuItem>\r\n                ))\r\n              ) : (\r\n                <Loading />\r\n              )}\r\n            </Select>\r\n          </FormControl>\r\n          {SelectForder ? (\r\n            <>\r\n              {/*Check box + button file*/}\r\n              {Done ? (\r\n                <>\r\n                  <FormControlLabel\r\n                    value=\"end\"\r\n                    control={<Checkbox color=\"primary\" />}\r\n                    label=\"Chọn thư mục\"\r\n                    labelPlacement=\"end\"\r\n                    checked=\"true\"\r\n                    style={{ marginBottom: 0, marginRight: 15 }}\r\n                    onChange={(e) => {\r\n                      onChangeSelectOptions(e);\r\n                    }}\r\n                  />\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    component=\"label\"\r\n                    htmlFor=\"folder\"\r\n                    startIcon={<SaveIcon />}\r\n                  >\r\n                    Chọn thư mục\r\n                    <input\r\n                      id=\"folder\"\r\n                      directory=\"\"\r\n                      webkitdirectory=\"\"\r\n                      style={{ display: \"none\" }}\r\n                      type=\"file\"\r\n                    />\r\n                  </Button>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <FormControlLabel\r\n                    value=\"end\"\r\n                    control={<Checkbox color=\"primary\" />}\r\n                    label=\"Chọn thư mục\"\r\n                    labelPlacement=\"end\"\r\n                    checked=\"true\"\r\n                    style={{ marginBottom: 0, marginRight: 15 }}\r\n                    onChange={(e) => {\r\n                      onChangeSelectOptions(e);\r\n                    }}\r\n                  />\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    component=\"label\"\r\n                    htmlFor=\"folder\"\r\n                    startIcon={<SaveIcon />}\r\n                    disabled=\"true\"\r\n                  >\r\n                    Chọn thư mục\r\n                    <input\r\n                      id=\"folder\"\r\n                      directory=\"\"\r\n                      webkitdirectory=\"\"\r\n                      style={{ display: \"none\" }}\r\n                      type=\"file\"\r\n                    />\r\n                  </Button>\r\n                </>\r\n              )}\r\n\r\n              {/*Check box + button file*/}\r\n            </>\r\n          ) : (\r\n            <>\r\n              {/*Check box checked + button folder*/}\r\n              {Done ? (\r\n                <>\r\n                  <FormControlLabel\r\n                    value=\"end\"\r\n                    control={<Checkbox color=\"primary\" />}\r\n                    label=\"Chọn thư mục\"\r\n                    labelPlacement=\"end\"\r\n                    style={{ marginBottom: 0, marginRight: 15 }}\r\n                    onChange={(e) => {\r\n                      onChangeSelectOptions(e);\r\n                    }}\r\n                  />\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    component=\"label\"\r\n                    htmlFor=\"files\"\r\n                    startIcon={<SaveIcon />}\r\n                  >\r\n                    Chọn File\r\n                    <input\r\n                      id=\"files\"\r\n                      multiple\r\n                      name=\"file\"\r\n                      accept=\"video/*\"\r\n                      style={{ display: \"none\" }}\r\n                      type=\"file\"\r\n                      onChange={(e) => onChangeHandler(e)}\r\n                    />\r\n                  </Button>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <FormControlLabel\r\n                    value=\"end\"\r\n                    control={<Checkbox color=\"primary\" />}\r\n                    label=\"Chọn thư mục\"\r\n                    labelPlacement=\"end\"\r\n                    style={{ marginBottom: 0, marginRight: 15 }}\r\n                    onChange={(e) => {\r\n                      onChangeSelectOptions(e);\r\n                    }}\r\n                  />\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    component=\"label\"\r\n                    htmlFor=\"files\"\r\n                    startIcon={<SaveIcon />}\r\n                    disabled=\"true\"\r\n                  >\r\n                    Chọn Thư Mục\r\n                    <input\r\n                      id=\"files\"\r\n                      multiple\r\n                      name=\"file\"\r\n                      accept=\"video/*\"\r\n                      style={{ display: \"none\" }}\r\n                      type=\"file\"\r\n                    />\r\n                  </Button>\r\n                </>\r\n              )}\r\n              {/*Check box checked + button folder*/}\r\n            </>\r\n          )}\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const send = () => {\r\n    axios\r\n      .post(urlags, {\r\n        ma_dot_kiem_tra: \"d2a9df6e-84d4-4bc2-b52c-2966f71eeb5e\",\r\n        loai_hinh_anh: \"BINHTHUONG\",\r\n        ma_bat_thuong: \"\",\r\n        hinh_anh_data: selectedFile,\r\n      })\r\n      .then(\r\n        (response) => {\r\n          console.log(response.data);\r\n          //  handleClose();\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  const get = () => {\r\n    axios.get(urlags).then(\r\n      (response) => {\r\n        console.log(response.data);\r\n        //  handleClose();\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  };\r\n\r\n  //-------------------------------------------------\r\n\r\n  function arrayReplace(arr, index, item) {\r\n    return [\r\n      ...arr.slice(0, index),\r\n      ...(Array.isArray(item) ? item : [item]),\r\n      ...arr.slice(index + 1),\r\n    ];\r\n  }\r\n\r\n  const RectShape = wrapShape(({ width, height, title }) => (\r\n    <svg width={width} height={height}>\r\n      <rect\r\n        x=\"0\"\r\n        y=\"0\"\r\n        width={width}\r\n        height={height}\r\n        fill=\"rgba(0,0,255,0.5)\"\r\n      />\r\n      <text\r\n        x=\"50%\"\r\n        y=\"50%\"\r\n        fill=\"white\"\r\n        fontWeight=\"bold\"\r\n        dominant-baseline=\"middle\"\r\n        text-anchor=\"middle\"\r\n      >\r\n        {title}\r\n      </text>\r\n    </svg>\r\n  ));\r\n\r\n  let idIterator = 1;\r\n\r\n  const [items, setItems] = useState([]);\r\n\r\n  const [{ vectorHeight, vectorWidth }, setVectorDimensions] = useState({\r\n    vectorHeight: 0,\r\n    vectorWidth: 0,\r\n  });\r\n\r\n  //-------------------------------------------------\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        component={\"C\"}\r\n        onClick={handleClickOpen}\r\n        style={{ float: \"right\" }}\r\n      >\r\n        Thêm dữ liệu <ImportExportIcon style={{ color: \"black\" }} />\r\n      </Button>\r\n      <Dialog\r\n        onClose={handleClose}\r\n        maxWidth={false}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={open}\r\n      >\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n          Bộ lọc dữ liệu đầu vào\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <form noValidate autoComplete=\"off\">\r\n            {New ? (\r\n              <>\r\n                <FormControlLabel\r\n                  value=\"end\"\r\n                  control={<Checkbox color=\"primary\" />}\r\n                  label=\"Dữ liệu mới\"\r\n                  labelPlacement=\"end\"\r\n                  checked=\"true\"\r\n                  style={{ marginBottom: 0, marginRight: 15, marginLeft: 8 }}\r\n                  onChange={(e) => {\r\n                    onChangeChecked(e);\r\n                  }}\r\n                />\r\n                <TextField\r\n                  id=\"date\"\r\n                  label=\"Ngày quay\"\r\n                  type=\"date\"\r\n                  value={DateDB}\r\n                  defaultValue={values.someDate}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  style={{ marginLeft: \"10px\" }}\r\n                  onChange={onChangeDateDB}\r\n                />\r\n                {renderchoice()}\r\n              </>\r\n            ) : (\r\n              <>\r\n                <FormControlLabel\r\n                  value=\"end\"\r\n                  control={<Checkbox color=\"primary\" />}\r\n                  label=\"Dữ liệu mới\"\r\n                  labelPlacement=\"end\"\r\n                  style={{ marginBottom: 0, marginRight: 15, marginLeft: 8 }}\r\n                  onChange={(e) => {\r\n                    onChangeChecked(e);\r\n                  }}\r\n                />\r\n                <TextField\r\n                  id=\"date\"\r\n                  label=\"Ngày quay\"\r\n                  type=\"date\"\r\n                  value={DateDB}\r\n                  style={{ marginLeft: \"10px\" }}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  onChange={onChangeDateDB}\r\n                />\r\n                <FormControl\r\n                  variant={\"outlined\"}\r\n                  style={{\r\n                    alignSelf: \"center\",\r\n                    minWidth: \"25%\",\r\n                    marginLeft: 10,\r\n                  }}\r\n                >\r\n                  <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                    Hãy chọn đợt bay cần bổ sung dữ liệu\r\n                  </InputLabel>\r\n                  <Select\r\n                    width=\"100%\"\r\n                    className={classes.select}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={Dot}\r\n                    style={{ height: 40 }}\r\n                    onChange={onChangeSelectDot}\r\n                  >\r\n                    <MenuItem value={null}>Trống</MenuItem>\r\n                    {fetchedData ? (\r\n                      fetchedData.map((item, index) => (\r\n                        <MenuItem key={index} value={item.ma_dot_kiem_tra}>\r\n                          {item.ma_dot_kiem_tra}\r\n                        </MenuItem>\r\n                      ))\r\n                    ) : (\r\n                      <Loading />\r\n                    )}\r\n                  </Select>\r\n                </FormControl>\r\n                {renderchoice()}\r\n              </>\r\n            )}\r\n          </form>\r\n          <Button\r\n            autoFocus\r\n            component={\"C\"}\r\n            onClick={handelsubumit2}\r\n            color=\"primary\"\r\n          >\r\n            Gửi tệp tin\r\n          </Button>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          {Done && selectedFile ? (\r\n            <Button\r\n              autoFocus\r\n              component={\"C\"}\r\n              onClick={handelsubumit}\r\n              color=\"primary\"\r\n            >\r\n              Gửi tệp tin\r\n            </Button>\r\n          ) : (\r\n            <>\r\n              <Button autoFocus component={\"C\"} color=\"primary\">\r\n                Gửi tệp tin\r\n              </Button>\r\n            </>\r\n          )}\r\n        </DialogActions>\r\n      </Dialog>\r\n      <div style={{ width: \"100%\", height: \"100%\", overflow: \"scroll\" }}>\r\n        <img src={\"data:image/jpeg;base64,\" + resData} alt=\"\" />\r\n      </div>\r\n      <Button onClick={get}>Nhận ảnh giám sát</Button>\r\n      <Button onClick={send}>Gửi ảnh giám sát</Button>\r\n    </>\r\n  );\r\n}\r\n","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\account\\Account.js",["584"],"import {Helmet} from 'react-helmet';\r\nimport {Box, Container, Grid} from '@material-ui/core';\r\nimport AccountProfile from './AccountProfile';\r\nimport AccountProfileDetails from './AccountProfileDetails';\r\n\r\nconst Account = () => (\r\n    <>\r\n        <Box\r\n            style={{\r\n                backgroundColor: 'background.default',\r\n                minHeight: '100%',\r\n                py: 3,\r\n                paddingTop: 20\r\n            }}\r\n        >\r\n            <Container maxWidth=\"lg\">\r\n                <Grid\r\n                    container\r\n                    spacing={3}\r\n                >\r\n                    <Grid\r\n                        item\r\n                        lg={4}\r\n                        md={6}\r\n                        xs={12}\r\n                    >\r\n                        <AccountProfile/>\r\n                    </Grid>\r\n                    <Grid\r\n                        item\r\n                        lg={8}\r\n                        md={6}\r\n                        xs={12}\r\n                    >\r\n                        <AccountProfileDetails/>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </Box>\r\n    </>\r\n);\r\n\r\nexport default Account;\r\n","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\home\\Home.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\dotbay\\HomeDB.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\camera\\camera.js",["585","586","587","588","589","590","591","592","593","594"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport Geocode from \"react-geocode\";\r\nimport \"../../asset/css/View3_bando.css\";\r\nimport \"../../asset/css/main.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport {\r\n  AppBar,\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Grid,\r\n  IconButton,\r\n  Slide,\r\n  Toolbar,\r\n} from \"@material-ui/core\";\r\nimport TreeItem from \"@material-ui/lab/TreeItem\";\r\n//import { fetchPostList, url } from \"../../constants/jsContants\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { TreeView } from \"@material-ui/lab\";\r\nimport RoomIcon from \"@material-ui/icons/Room\";\r\nimport VideocamIcon from \"@material-ui/icons/Videocam\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\r\nimport PropTypes from \"prop-types\";\r\nimport FullscreenIcon from \"@material-ui/icons/Fullscreen\";\r\nimport $ from \"jquery\";\r\n\r\nGeocode.setApiKey(\"AIzaSyDC8AsBAx1cDfV2mNKLiICA0GfnPv9HLDE\");\r\n\r\nconst cameraData1 = [\r\n  {\r\n    ma_camera: \"camera1\",\r\n    ten_camera: \"Ngã ba Cổ Nhuế\",\r\n  },\r\n  {\r\n    ma_camera: \"camera2\",\r\n    ten_camera: \"23235 Ngã tư Phủ Lý\",\r\n  },\r\n  {\r\n    ma_camera: \"camera3\",\r\n    ten_camera: \"16345 Cột cờ Hà Nội\",\r\n  },\r\n  {\r\n    ma_camera: \"camera4\",\r\n    ten_camera: \"Ngã ba Cổ Nhuế\",\r\n  },\r\n  {\r\n    ma_camera: \"camera5\",\r\n    ten_camera: \"235 Ngã tư Phủ Lý\",\r\n  },\r\n  {\r\n    ma_camera: \"camera6\",\r\n    ten_camera: \"44165 Cột cờ Hà Nội\",\r\n  },\r\n  {\r\n    ma_camera: \"camera7\",\r\n    ten_camera: \"Ngã ba Cổ Nhuế\",\r\n  },\r\n  {\r\n    ma_camera: \"camera8\",\r\n    ten_camera: \"235 Ngã tư Phủ Lý\",\r\n  },\r\n  {\r\n    ma_camera: \"camera9\",\r\n    ten_camera: \"165 Cột cờ Hà Nội\",\r\n  },\r\n  {\r\n    ma_camera: \"camera10\",\r\n    ten_camera: \"Ngã ba Cổ Nhuế\",\r\n  },\r\n  {\r\n    ma_camera: \"camera11\",\r\n    ten_camera: \"235 Ngã tư Phủ Lý\",\r\n  },\r\n  {\r\n    ma_camera: \"camera12\",\r\n    ten_camera: \"165 Cột cờ Hà Nội\",\r\n  },\r\n  {\r\n    ma_camera: \"camera13\",\r\n    ten_camera: \"Ngã ba Cổ Nhuế\",\r\n  },\r\n  {\r\n    ma_camera: \"camera14\",\r\n    ten_camera: \"235 Ngã tư Phủ Lý\",\r\n  },\r\n  {\r\n    ma_camera: \"camera15\",\r\n    ten_camera: \"165 Cột cờ Hà Nội\",\r\n  },\r\n  {\r\n    ma_camera: \"camera16\",\r\n    ten_camera: \"Ngã ba Cổ Nhuế\",\r\n  },\r\n  {\r\n    ma_camera: \"camera17\",\r\n    ten_camera: \"235 Ngã tư Phủ Lý\",\r\n  },\r\n  {\r\n    ma_camera: \"camera18\",\r\n    ten_camera: \"165 Cột cờ Hà Nội\",\r\n  },\r\n  {\r\n    ma_camera: \"camera19\",\r\n    ten_camera: \"Ngã ba Cổ Nhuế\",\r\n  },\r\n  {\r\n    ma_camera: \"camera20\",\r\n    ten_camera: \"235 Ngã tư Phủ Lý\",\r\n  },\r\n  {\r\n    ma_camera: \"camera21\",\r\n    ten_camera: \"165 Cột cờ Hà Nội\",\r\n  },\r\n  {\r\n    ma_camera: \"camera22\",\r\n    ten_camera: \"Ngã ba Cổ Nhuế\",\r\n  },\r\n  {\r\n    ma_camera: \"camera23\",\r\n    ten_camera: \"235 Ngã tư Phủ Lý\",\r\n  },\r\n  {\r\n    ma_camera: \"camera24\",\r\n    ten_camera: \"165 Cột cờ Hà Nội\",\r\n  },\r\n  {\r\n    ma_camera: \"camera25\",\r\n    ten_camera: \"Ngã ba Cổ Nhuế\",\r\n  },\r\n  {\r\n    ma_camera: \"camera26\",\r\n    ten_camera: \"235 Ngã tư Phủ Lý\",\r\n  },\r\n  {\r\n    ma_camera: \"camera27\",\r\n    ten_camera: \"165 Cột cờ Hà Nội\",\r\n  },\r\n  {\r\n    ma_camera: \"camera28\",\r\n    ten_camera: \"Ngã ba Cổ Nhuế\",\r\n  },\r\n  {\r\n    ma_camera: \"camera29\",\r\n    ten_camera: \"235 Ngã tư Phủ Lý\",\r\n  },\r\n  {\r\n    ma_camera: \"camera30\",\r\n    ten_camera: \"165 Cột cờ Hà Nội\",\r\n  },\r\n];\r\n\r\nconst data = [\r\n  {\r\n    _id: {\r\n      $oid: \"6071581cc011ac5064de07d3\",\r\n    },\r\n    ma_tuyen: \"171e39-171e10.2\",\r\n    ten_tuyen: \"Thanh Oai - Vân Đình\",\r\n    camera: [\r\n      {\r\n        ma_camera: \"camera1\",\r\n        ten_camera: \"Ngã ba Cổ Nhuế\",\r\n      },\r\n      {\r\n        ma_camera: \"camera2\",\r\n        ten_camera: \"23235 Ngã tư Phủ Lý\",\r\n      },\r\n      {\r\n        ma_camera: \"camera3\",\r\n        ten_camera: \"16345 Cột cờ Hà Nội\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    _id: {\r\n      $oid: \"6071581cc011ac5064de07d4\",\r\n    },\r\n    ma_tuyen: \"172e10.2-171e24.4\",\r\n    ten_tuyen: \"Vân Đình - Phủ Lý\",\r\n    camera: [\r\n      {\r\n        ma_camera: \"camera4\",\r\n        ten_camera: \"Ngã ba Cổ Nhuế\",\r\n      },\r\n      {\r\n        ma_camera: \"camera5\",\r\n        ten_camera: \"235 Ngã tư Phủ Lý\",\r\n      },\r\n      {\r\n        ma_camera: \"camera6\",\r\n        ten_camera: \"44165 Cột cờ Hà Nội\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    _id: {\r\n      $oid: \"6071581cc011ac5064de07d5\",\r\n    },\r\n    ma_tuyen: \"172e23-171e24\",\r\n    ten_tuyen: \"Vân Trì - Hải Bối\",\r\n    camera: [\r\n      {\r\n        ma_camera: \"camera7\",\r\n        ten_camera: \"Ngã ba Cổ Nhuế\",\r\n      },\r\n      {\r\n        ma_camera: \"camera8\",\r\n        ten_camera: \"235 Ngã tư Phủ Lý\",\r\n      },\r\n      {\r\n        ma_camera: \"camera9\",\r\n        ten_camera: \"165 Cột cờ Hà Nội\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    _id: {\r\n      $oid: \"6071581cc011ac5064de07d6\",\r\n    },\r\n    ma_tuyen: \"172e54-176e35\",\r\n    ten_tuyen: \"Hoà Lạc - Sơn Tây\",\r\n    camera: [\r\n      {\r\n        ma_camera: \"camera10\",\r\n        ten_camera: \"Ngã ba Cổ Nhuế\",\r\n      },\r\n      {\r\n        ma_camera: \"camera11\",\r\n        ten_camera: \"235 Ngã tư Phủ Lý\",\r\n      },\r\n      {\r\n        ma_camera: \"camera12\",\r\n        ten_camera: \"165 Cột cờ Hà Nội\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    _id: {\r\n      $oid: \"6071581cc011ac5064de07d7\",\r\n    },\r\n    ma_tuyen: \"173e10.5-172e10.6-175e1.35\",\r\n    ten_tuyen: \"Phúc Thọ - Sơn Tây\",\r\n    camera: [\r\n      {\r\n        ma_camera: \"camera13\",\r\n        ten_camera: \"Ngã ba Cổ Nhuế\",\r\n      },\r\n      {\r\n        ma_camera: \"camera14\",\r\n        ten_camera: \"235 Ngã tư Phủ Lý\",\r\n      },\r\n      {\r\n        ma_camera: \"camera15\",\r\n        ten_camera: \"165 Cột cờ Hà Nội\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    _id: {\r\n      $oid: \"6071581cc011ac5064de07d8\",\r\n    },\r\n    ma_tuyen: \"174e4-172e37\",\r\n    ten_tuyen: \"Hà Đông - Bắc An Khánh\",\r\n    camera: [\r\n      {\r\n        ma_camera: \"camera16\",\r\n        ten_camera: \"Ngã ba Cổ Nhuế\",\r\n      },\r\n      {\r\n        ma_camera: \"camera17\",\r\n        ten_camera: \"235 Ngã tư Phủ Lý\",\r\n      },\r\n      {\r\n        ma_camera: \"camera18\",\r\n        ten_camera: \"165 Cột cờ Hà Nội\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    _id: {\r\n      $oid: \"6071581cc011ac5064de07d9\",\r\n    },\r\n    ma_tuyen: \"175T500TT-176E1.39\",\r\n    ten_tuyen: \"Thường Tín - Thanh Oai\",\r\n    camera: [\r\n      {\r\n        ma_camera: \"camera19\",\r\n        ten_camera: \"Ngã ba Cổ Nhuế\",\r\n      },\r\n      {\r\n        ma_camera: \"camera20\",\r\n        ten_camera: \"235 Ngã tư Phủ Lý\",\r\n      },\r\n      {\r\n        ma_camera: \"camera21\",\r\n        ten_camera: \"165 Cột cờ Hà Nội\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    _id: {\r\n      $oid: \"6071581cc011ac5064de07da\",\r\n    },\r\n    ma_tuyen: \"177e50-171e10.6\",\r\n    ten_tuyen: \"Quốc Oai - Phú Thọ\",\r\n    camera: [\r\n      {\r\n        ma_camera: \"camera22\",\r\n        ten_camera: \"Ngã ba Cổ Nhuế\",\r\n      },\r\n      {\r\n        ma_camera: \"camera23\",\r\n        ten_camera: \"235 Ngã tư Phủ Lý\",\r\n      },\r\n      {\r\n        ma_camera: \"camera24\",\r\n        ten_camera: \"165 Cột cờ Hà Nội\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    _id: {\r\n      $oid: \"6071581cc011ac5064de07db\",\r\n    },\r\n    ma_tuyen: \"181e1-171e41\",\r\n    ten_tuyen: \"Long Biên - Mai Lâm\",\r\n    camera: [\r\n      {\r\n        ma_camera: \"camera25\",\r\n        ten_camera: \"Ngã ba Cổ Nhuế\",\r\n      },\r\n      {\r\n        ma_camera: \"camera26\",\r\n        ten_camera: \"235 Ngã tư Phủ Lý\",\r\n      },\r\n      {\r\n        ma_camera: \"camera27\",\r\n        ten_camera: \"165 Cột cờ Hà Nội\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    _id: {\r\n      $oid: \"6071581cc011ac5064de07dc\",\r\n    },\r\n    ma_tuyen: \"181e6-171e21\",\r\n    ten_tuyen: \"Chèm - Nhật Tân\",\r\n    camera: [\r\n      {\r\n        ma_camera: \"camera28\",\r\n        ten_camera: \"Ngã ba Cổ Nhuế\",\r\n      },\r\n      {\r\n        ma_camera: \"camera29\",\r\n        ten_camera: \"235 Ngã tư Phủ Lý\",\r\n      },\r\n      {\r\n        ma_camera: \"camera30\",\r\n        ten_camera: \"165 Cột cờ Hà Nội\",\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nconst useTreeItemStyles = makeStyles((theme) => ({\r\n  root: {\r\n    color: theme.palette.text.secondary,\r\n    \"&:hover > $content\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n    \"&:focus > $content, &$selected > $content\": {\r\n      backgroundColor: `var(--tree-view-bg-color, ${theme.palette.grey[400]})`,\r\n      color: \"var(--tree-view-color)\",\r\n    },\r\n    \"&:focus > $content $label, &:hover > $content $label, &$selected > $content $label\":\r\n      {\r\n        backgroundColor: \"transparent\",\r\n      },\r\n  },\r\n  content: {\r\n    color: theme.palette.text.secondary,\r\n    borderTopRightRadius: theme.spacing(2),\r\n    borderBottomRightRadius: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n    fontWeight: theme.typography.fontWeightMedium,\r\n    \"$expanded > &\": {\r\n      fontWeight: theme.typography.fontWeightRegular,\r\n    },\r\n  },\r\n  group: {\r\n    marginLeft: 0,\r\n    \"& $content\": {\r\n      paddingLeft: theme.spacing(2),\r\n    },\r\n  },\r\n  expanded: {},\r\n  selected: {},\r\n  label: {\r\n    fontWeight: \"inherit\",\r\n    color: \"inherit\",\r\n  },\r\n  labelRoot: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(0.5, 0),\r\n  },\r\n  labelIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  labelText: {\r\n    fontWeight: \"inherit\",\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    color: \"black\",\r\n    height: \"100%\",\r\n  },\r\n  box: {\r\n    paddingRight: 5,\r\n    height: \"100%\",\r\n  },\r\n  treeview: {\r\n    height: \"auto\",\r\n    flexGrow: 1,\r\n    maxWidth: \"auto\",\r\n    color: \"black\",\r\n  },\r\n  treeview2: {\r\n    height: 264,\r\n    flexGrow: 1,\r\n    maxWidth: 400,\r\n  },\r\n  playAllVideo: {\r\n    margin: 10,\r\n  },\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nfunction StyledTreeItem(props) {\r\n  const classes = useTreeItemStyles();\r\n  const {\r\n    labelText,\r\n    labelIcon: LabelIcon,\r\n    labelInfo,\r\n    color,\r\n    bgColor,\r\n    ...other\r\n  } = props;\r\n\r\n  return (\r\n    <TreeItem\r\n      label={\r\n        <div className={classes.labelRoot}>\r\n          <LabelIcon color=\"inherit\" className={classes.labelIcon} />\r\n          <Typography variant=\"body2\" className={classes.labelText}>\r\n            {labelText}\r\n          </Typography>\r\n          <Typography variant=\"caption\" color=\"inherit\">\r\n            {labelInfo}\r\n          </Typography>\r\n        </div>\r\n      }\r\n      style={{\r\n        \"--tree-view-color\": color,\r\n        \"--tree-view-bg-color\": bgColor,\r\n      }}\r\n      classes={{\r\n        root: classes.root,\r\n        content: classes.content,\r\n        expanded: classes.expanded,\r\n        selected: classes.selected,\r\n        group: classes.group,\r\n        label: classes.label,\r\n      }}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nStyledTreeItem.propTypes = {\r\n  bgColor: PropTypes.string,\r\n  color: PropTypes.string,\r\n  labelIcon: PropTypes.elementType.isRequired,\r\n  labelInfo: PropTypes.string,\r\n  labelText: PropTypes.string.isRequired,\r\n};\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst Transition1 = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nfunction Camera() {\r\n  // State\r\n  const [spacing, setSpacing] = useState(0);\r\n  const [ListTuyen, setListTuyen] = useState([]);\r\n  const Data = useSelector((state) => state.currentError);\r\n  const classes = useStyles();\r\n  const [playing, setPlaying] = useState(false);\r\n  const [cameraData, setCameraData] = useState(cameraData1);\r\n  const [characters, updateCharacters] = useState(cameraData1);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [openFullScreen, setOpenFullScreen] = React.useState(false);\r\n  const [currentFullScreenVideo, setCurrentFullScreenVideo] = useState([]);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (state) => {\r\n    setOpen(false);\r\n    if (state) {\r\n      updateCharacters(cameraData);\r\n    }\r\n  };\r\n  const handleClickOpenFullScreen = (value) => {\r\n    setCurrentFullScreenVideo(value);\r\n    setOpenFullScreen(true);\r\n    // alert(currentFullScreenVideo);\r\n    startVideo(\"1\");\r\n  };\r\n\r\n  const handleCloseFullScreen = () => {\r\n    setOpenFullScreen(false);\r\n  };\r\n\r\n  const startVideo = (index) => {\r\n    // event.preventDefault()\r\n    try {\r\n      navigator.getUserMedia(\r\n        {\r\n          video: true,\r\n        },\r\n        (stream) => {\r\n          let video = document.getElementById(\"app__videofeed\" + index);\r\n          if (video) {\r\n            video.srcObject = stream;\r\n          }\r\n        },\r\n        (err) => console.error(err)\r\n      );\r\n      // alert('app__videofeed' + index)\r\n      let button = document.getElementById(\"btnStart\" + index);\r\n      if (button) {\r\n        button.style.display = \"none\";\r\n        button = document.getElementById(\"btnStop\" + index);\r\n        button.style.display = \"block\";\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const stopVideo = (index) => {\r\n    setPlaying(false);\r\n    let video = document.getElementById(\"app__videofeed\" + index);\r\n    video.srcObject.getTracks()[0].stop();\r\n    let button = document.getElementById(\"btnStart\" + index);\r\n    button.style.display = \"block\";\r\n    button = document.getElementById(\"btnStop\" + index);\r\n    button.style.display = \"none\";\r\n  };\r\n\r\n  useEffect(() => {\r\n    //fetchPostList(url + \"/htld/tuyen\", setListTuyen, 0);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    characters.map((value, index) => {\r\n      startVideo(value.ma_camera);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // startVideo('1')\r\n  }, []);\r\n\r\n  const StyledTreeItemOnlclick = (item) => {\r\n    updateCharacters(item);\r\n  };\r\n\r\n  function handleOnDragEnd(result) {\r\n    if (!result.destination) return;\r\n\r\n    const items = Array.from(characters);\r\n    const [reorderedItem] = items.splice(result.source.index, 1);\r\n    items.splice(result.destination.index, 0, reorderedItem);\r\n\r\n    updateCharacters(items);\r\n  }\r\n\r\n  const onDeleteItem = (value) => {\r\n    // alert(value)\r\n    const temp = characters.filter((item, index) => {\r\n      if (item.ma_camera !== value) return item;\r\n    });\r\n    updateCharacters(temp);\r\n  };\r\n  return (\r\n    <Grid container className={classes.root}>\r\n      <Grid style={{ height: \"100%\" }} item xs={12}>\r\n        <Grid style={{ height: \"100%\" }} container justify=\"center\" spacing={0}>\r\n          <Grid\r\n            style={{ backgroundColor: \"white\", paddingLeft: 2, height: \"100%\" }}\r\n            xs={12}\r\n            sm={2}\r\n            key={1}\r\n            item\r\n          >\r\n            <Box boxShadow={2} className={classes.box}>\r\n              <TreeView\r\n                className={classes.treeview}\r\n                defaultExpanded={[\"3\"]}\r\n                defaultCollapseIcon={<ArrowDropDownIcon />}\r\n                defaultExpandIcon={<ArrowRightIcon />}\r\n                defaultEndIcon={<div style={{ width: 24 }} />}\r\n              >\r\n                {data.map((item, index) => (\r\n                  <StyledTreeItem\r\n                    onDoubleClick={() => StyledTreeItemOnlclick(item.camera)}\r\n                    color={\"black\"}\r\n                    nodeId={index}\r\n                    labelText={item.ten_tuyen}\r\n                    labelIcon={RoomIcon}\r\n                  >\r\n                    {item.camera.map((item2, index2) => (\r\n                      <StyledTreeItem\r\n                        nodeId={index + \"-\" + index2}\r\n                        labelText={item2.ten_camera}\r\n                        labelIcon={VideocamIcon}\r\n                      />\r\n                    ))}\r\n                  </StyledTreeItem>\r\n                ))}\r\n              </TreeView>\r\n\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                size=\"large\"\r\n                className={classes.playAllVideo}\r\n                startIcon={<VideocamIcon />}\r\n                onClick={handleClickOpen}\r\n              >\r\n                Phát toàn bộ\r\n              </Button>\r\n            </Box>\r\n            <Dialog\r\n              open={open}\r\n              TransitionComponent={Transition}\r\n              keepMounted\r\n              onClose={() => handleClose(false)}\r\n              aria-labelledby=\"alert-dialog-slide-title\"\r\n              aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n              <DialogTitle id=\"alert-dialog-slide-title\">\r\n                {\"Cảnh báo\"}\r\n              </DialogTitle>\r\n              <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                  Việc bạn chọn xem tất cả video có thể dẫn đến hiện tượng giật\r\n                  lác\r\n                </DialogContentText>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button onClick={() => handleClose(false)} color=\"primary\">\r\n                  Quay lại\r\n                </Button>\r\n                <Button onClick={() => handleClose(true)} color=\"primary\">\r\n                  Đồng ý\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n          </Grid>\r\n          <Grid\r\n            className={classes.griditem2}\r\n            style={{ height: \"100%\" }}\r\n            xs={12}\r\n            sm={10}\r\n            key={2}\r\n            item\r\n          >\r\n            <Grid container className={classes.root}>\r\n              <Grid style={{ height: \"100%\" }} item xs={12}>\r\n                <Grid\r\n                  className={\"characters\"}\r\n                  container\r\n                  justify=\"center\"\r\n                  spacing={spacing}\r\n                  style={{ height: \"100%\", overflow: \"auto\" }}\r\n                >\r\n                  {characters.map((value, index) => (\r\n                    <div\r\n                      id={value.ma_camera}\r\n                      style={{\r\n                        backgroundColor: \"#282828\",\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        alignItems: \"center\",\r\n                        width: \"33%\",\r\n                        margin: 1,\r\n                        height: 380,\r\n                      }}\r\n                      className={classes.paper}\r\n                    >\r\n                      <b\r\n                        id={\"cam_title\"}\r\n                        style={{\r\n                          color: \"white\",\r\n                          height: \"7%\",\r\n                        }}\r\n                      >\r\n                        {value.ma_camera} - {value.ten_camera}\r\n                      </b>\r\n                      <div\r\n                        style={{\r\n                          width: \"100%\",\r\n                          backgroundColor: \"gray\",\r\n                          height:\r\n                            `calc(100% - ` +\r\n                            ($(\"#cam_title\").height() +\r\n                              $(\"#cam_list_button\").height()) +\r\n                            `px)`,\r\n                        }}\r\n                      >\r\n                        <video\r\n                          height={\"100%\"}\r\n                          width={\"100%\"}\r\n                          muted\r\n                          autoPlay\r\n                          id={\"app__videofeed\" + value.ma_camera}\r\n                          className={\"app__videofeed\"}\r\n                        ></video>\r\n                      </div>\r\n                      <div\r\n                        id={\"cam_list_button\"}\r\n                        style={{\r\n                          display: \"flex\",\r\n                          width: \"100%\",\r\n                          padding: 4,\r\n                          justifyContent: \"space-around\",\r\n                        }}\r\n                      >\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          color=\"default\"\r\n                          onClick={() => handleClickOpenFullScreen(value)}\r\n                          startIcon={<FullscreenIcon />}\r\n                        >\r\n                          Ful\r\n                        </Button>\r\n                        <Button\r\n                          id={\"btnStart\" + value.ma_camera}\r\n                          variant=\"contained\"\r\n                          onClick={() => startVideo(value.ma_camera)}\r\n                          color=\"primary\"\r\n                        >\r\n                          Phát\r\n                        </Button>\r\n                        <Button\r\n                          id={\"btnStop\" + value.ma_camera}\r\n                          style={{ display: \"none\" }}\r\n                          onClick={() => stopVideo(value.ma_camera)}\r\n                          variant=\"contained\"\r\n                          color=\"secondary\"\r\n                        >\r\n                          Dừng\r\n                        </Button>\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          color=\"secondary\"\r\n                          onClick={() => onDeleteItem(value.ma_camera)}\r\n                          startIcon={<DeleteIcon />}\r\n                        >\r\n                          Del\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </Grid>\r\n                <Dialog\r\n                  fullScreen\r\n                  open={openFullScreen}\r\n                  onClose={handleCloseFullScreen}\r\n                  TransitionComponent={Transition1}\r\n                >\r\n                  <AppBar className={classes.appBar}>\r\n                    <Toolbar>\r\n                      <IconButton\r\n                        edge=\"start\"\r\n                        color=\"inherit\"\r\n                        onClick={handleCloseFullScreen}\r\n                        aria-label=\"close\"\r\n                      >\r\n                        <CloseIcon />\r\n                      </IconButton>\r\n                      <Typography variant=\"h6\" className={classes.title}>\r\n                        {currentFullScreenVideo.ma_camera} -{\" \"}\r\n                        {currentFullScreenVideo.ten_camera}\r\n                      </Typography>\r\n                    </Toolbar>\r\n                  </AppBar>\r\n                  <div\r\n                    style={{\r\n                      width: \"100%\",\r\n                      height: \"85vh\",\r\n                      backgroundColor: \"black\",\r\n                    }}\r\n                  >\r\n                    <video\r\n                      style={{ backgroundColor: \"black\" }}\r\n                      height={\"100%\"}\r\n                      width={\"100%\"}\r\n                      muted\r\n                      autoPlay\r\n                      id={\"app__videofeed1\"}\r\n                      className={\"app__videofeed\"}\r\n                    ></video>\r\n                  </div>\r\n                </Dialog>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Camera;\r\n","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\test\\DataFetching.js",["595","596","597","598","599","600","601","602","603","604","605","606","607"],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\test\\bieudothongke.js",["608","609","610","611","612","613","614","615","616","617","618"],"import { Bar } from \"react-chartjs-2\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Chart, data, options } from \"chart.js\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../redux/types\";\r\n\r\nconst Bieudothongke = (props) => {\r\n  const [chart, setChart] = useState([]);\r\n  const theme = useTheme();\r\n  const anhthietbiloi = useSelector((state) => state.anhthietbiloi);\r\n  const idtuyen = useSelector((state) => state.idtuyen);\r\n  const dispatch = useDispatch();\r\n\r\n  const ctx = \"myChart\";\r\n\r\n  function ClickHandler(event) {\r\n    const firstPoint = event[0];\r\n    if (firstPoint) {\r\n      const label = data.labels[firstPoint._index];\r\n\r\n      const value =\r\n        data.datasets[firstPoint._datasetIndex].data[firstPoint._index];\r\n      dispatch({ type: actions.idthietbi, data: label });\r\n    }\r\n  }\r\n\r\n  const MakeData = () => {\r\n    let DataObj = {};\r\n    let ArrayAvg = [];\r\n    let labels = [];\r\n    let backgroundColor = [];\r\n    let data = anhthietbiloi?.data || [];\r\n    if (data) {\r\n      for (let i = 0; i < data.length; i++) {\r\n        let item = data[i];\r\n        let inneritem = item[Object.keys(item)[0]];\r\n\r\n        let classItem = [\r\n          \"cach_dien_silicon\",\r\n          \"cach_dien_thuy_tinh\",\r\n          \"day_dien\",\r\n        ];\r\n        let sumerror = 0;\r\n        let len = 0;\r\n        for (let j = 0; j < classItem.length; j++) {\r\n          let classItemName = classItem[j];\r\n          let classItemValue = inneritem[classItemName];\r\n          if (classItemValue) {\r\n            for (let x = 0; x < classItemValue.length; x++) {\r\n              if (classItemValue[x].trang_thai != \"1_normal\") {\r\n                sumerror += 1;\r\n              }\r\n              len += 1;\r\n            }\r\n          }\r\n        }\r\n        let avg = sumerror !== 0 ? sumerror / len : len;\r\n        if (len !== 0) {\r\n          ArrayAvg.push(avg.toFixed(2));\r\n\r\n          if (avg >= 1) {\r\n            backgroundColor.push(\"rgb(0,255,0)\");\r\n          } else if (avg >= 0.5) {\r\n            backgroundColor.push(\"rgb(255,255,0)\");\r\n          } else backgroundColor.push(\"rgb(255,0,0)\");\r\n\r\n          labels.push(Object.keys(item)[0]);\r\n        }\r\n      }\r\n    }\r\n\r\n    DataObj[\"Avg\"] = ArrayAvg;\r\n    DataObj[\"backgroundColor\"] = backgroundColor;\r\n    DataObj[\"labels\"] = labels;\r\n\r\n    return DataObj;\r\n  };\r\n\r\n  let datamyChart = MakeData();\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        backgroundColor: datamyChart.backgroundColor,\r\n        data: datamyChart.Avg,\r\n      },\r\n    ],\r\n    labels: datamyChart.labels,\r\n  };\r\n\r\n  const options = {\r\n    layout: { padding: 0 },\r\n    legend: { display: false },\r\n    maintainAspectRatio: false,\r\n    responsive: true,\r\n    events: [\"mousemove\", \"click\"],\r\n    onHover: (event, chartElement) => {\r\n      event.target.style.cursor = chartElement[0] ? \"pointer\" : \"default\";\r\n    },\r\n    onClick: (event) => {\r\n      ClickHandler(event);\r\n    },\r\n\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          ticks: {\r\n            fontColor: theme.palette.text.secondary,\r\n            beginAtZero: true,\r\n            min: 0,\r\n            max: 7,\r\n          },\r\n          barThickness: 24,\r\n          maxBarThickness: 30,\r\n          barPercentage: 1.0,\r\n          categoryPercentage: 1.0,\r\n          gridLines: {\r\n            display: false,\r\n            drawBorder: false,\r\n          },\r\n        },\r\n      ],\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            fontColor: theme.palette.text.secondary,\r\n            beginAtZero: true,\r\n            min: 0,\r\n            max: 5,\r\n          },\r\n          gridLines: {\r\n            borderDash: [3],\r\n            borderDashOffset: [2],\r\n            color: theme.palette.divider,\r\n            drawBorder: false,\r\n            zeroLineBorderDash: [2],\r\n            zeroLineBorderDashOffset: [2],\r\n            zeroLineColor: theme.palette.divider,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    tooltips: {\r\n      enabled: false,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Card {...props}>\r\n      <CardHeader title=\"THỐNG KÊ THIẾT BỊ\" />\r\n      <Divider />\r\n      <CardContent>\r\n        <Box\r\n          style={{\r\n            height: 300,\r\n          }}\r\n        >\r\n          <Bar data={data} options={options} onElementsClick={ClickHandler} />\r\n        </Box>\r\n      </CardContent>\r\n      <Divider />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Bieudothongke;\r\n","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\nhapdulieu\\HomeDL.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\dashboard\\dashboard.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\RedirectPage\\Redirect404.js",["619","620"],"import React, {useEffect} from \"react\";\r\nimport { Navigate, useNavigate } from 'react-router-dom';\r\n\r\nexport default function Redirect404() {\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n      navigate('/404', {replace:true })    \r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n    </>\r\n  );\r\n}","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\photoms\\photoms.js",["621","622","623","624","625","626","627","628","629","630","631","632","633"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ImageList from \"@material-ui/core/ImageList\";\r\nimport ImageListItem from \"@material-ui/core/ImageListItem\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\r\nimport Detail from \"./detail\";\r\nimport Detail2 from \"./detail2\";\r\nimport IMGSHOW from \"./imgshow\";\r\nimport PhotoIcon from \"@material-ui/icons/Photo\";\r\nimport Waiting from \"../generalObject/Waiting\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../redux/types\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CachedIcon from \"@material-ui/icons/Cached\";\r\n//-----------------------------------------\r\nimport PropTypes from \"prop-types\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\n//------------------------------------------\r\nimport itemDataError from \"./const/itemDataError\";\r\nimport itemDataNone from \"./const/itemDataNone\";\r\nimport { getTextDisplay } from \"../../util/GetTenTuyen\";\r\nimport { FormatDate } from \"../../util/formatDate\";\r\nimport Loading from \"../generalObject/Loading\";\r\nimport { ChangerUrl } from \"../../util/ChangeUrl\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    //height: \"50%\",\r\n    height: \"100%\",\r\n    color: \"black\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    //borderBottom: \"3px solid black\",\r\n  },\r\n  imageList: {\r\n    width: \"100%\",\r\n    // height: \"90%\",\r\n  },\r\n  rootcard: {\r\n    flexGrow: 1,\r\n    borderRadius: \"5px\",\r\n    border: \"2px solid #f1f0f5\",\r\n    boxshadow:\r\n      \"rgba(50, 50, 93, 0.25) 0px 2px 5px -1px, rgba(0, 0, 0, 0.3) 0px 1px 3px -1px;\",\r\n    \"&:hover\": {\r\n      background: \"#a5c2f0\",\r\n      border: \"2px solid rgb(25, 118, 210)\",\r\n    },\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    margin: \"auto\",\r\n    width: \"100%\",\r\n  },\r\n  image: {\r\n    width: 128,\r\n    height: 128,\r\n    objectFit: \"cover\",\r\n  },\r\n  img: {\r\n    margin: \"auto\",\r\n    display: \"block\",\r\n    maxWidth: \"100%\",\r\n    maxHeight: \"100%\",\r\n  },\r\n  roottab: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  hoverimg: {\r\n    // left: 0,\r\n    height: \"100%\",\r\n    position: \"relative\",\r\n    // transform: \"translateX(0%)\",\r\n    width: \"100%\",\r\n    objectFit: \"cover\",\r\n    \"&:hover\": {\r\n      background: \"#a5c2f0\",\r\n      border: \"2px solid rgb(25, 118, 210)\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst PhotoMS = () => {\r\n  const classes = useStyles();\r\n  const [Data, setData] = useState([]);\r\n  const [Data2, setData2] = useState([]);\r\n  const [Data3, setData3] = useState([]);\r\n  const [Data4, setData4] = useState([]);\r\n  const [Mode, setMode] = useState(0);\r\n  const urltb = process.env.REACT_APP_API_URL + \"dotkiemtras/\";\r\n  const urlanh = process.env.REACT_APP_API_URL + \"imagedkt/\";\r\n  const fetchedData = useSelector((state) => state.dbauto);\r\n  const urltb2 = process.env.REACT_APP_API_URL + \"dotkiemtraimports/\";\r\n  const urlanh2 = process.env.REACT_APP_API_URL + \"getimagesdetectimport/\";\r\n  const fetchedData2 = useSelector((state) => state.dbtc);\r\n\r\n  const [isLoading1, setIsLoading1] = useState(true);\r\n  const [isError1, setIsError1] = useState(false);\r\n  const [isLoading2, setIsLoading2] = useState(true);\r\n  const [isError2, setIsError2] = useState(false);\r\n  const [isLoading3, setIsLoading3] = useState(true);\r\n  const [isError3, setIsError3] = useState(false);\r\n  const [isLoading4, setIsLoading4] = useState(true);\r\n  const [isError4, setIsError4] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  //\r\n\r\n  const sort = (str) => {\r\n    var mySubString = str.substring(\r\n      str.lastIndexOf(\"_\") + 1,\r\n      str.lastIndexOf(\".\")\r\n    );\r\n    return mySubString;\r\n  };\r\n\r\n  async function getDataDB() {\r\n    try {\r\n      setIsLoading1(true);\r\n      setIsError1(false);\r\n      let res = await axios({\r\n        url: urltb,\r\n        method: \"get\",\r\n        timeout: 8000,\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      if (res.status === 200) {\r\n        //console.log(res.status);\r\n      }\r\n      return res.data;\r\n    } catch (err) {\r\n      console.error(err);\r\n      setIsError1(true);\r\n      setIsLoading1(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    let componentMounted = true;\r\n    const fetchData = async () => {\r\n      if (componentMounted /*&& !fetchedData */ && fetchedData?.length !== 0) {\r\n        getDataDB().then((res) => {\r\n          if (res) {\r\n            dispatch({\r\n              type: actions.Db_Auto,\r\n              data: res.sort(function (a, b) {\r\n                return new Date(b.ngay_kiem_tra) - new Date(a.ngay_kiem_tra);\r\n              }),\r\n            });\r\n\r\n            setIsLoading1(false);\r\n            setIsError1(false);\r\n\r\n            GetImg(res[0].ma_dot_kiem_tra);\r\n          }\r\n        });\r\n      }\r\n    };\r\n    fetchData();\r\n    return () => {\r\n      componentMounted = false;\r\n    };\r\n  }, []);\r\n\r\n  const reload1 = () => {\r\n    getDataDB().then((res) => {\r\n      if (res) {\r\n        dispatch({\r\n          type: actions.Db_Auto,\r\n          data: res.sort(function (a, b) {\r\n            return new Date(b.ngay_kiem_tra) - new Date(a.ngay_kiem_tra);\r\n          }),\r\n        });\r\n\r\n        setIsLoading1(false);\r\n        setIsError1(false);\r\n\r\n        GetImg(res[0].ma_dot_kiem_tra);\r\n      }\r\n    });\r\n  };\r\n\r\n  const GetImg = (str) => {\r\n    async function getDataListImg() {\r\n      let urlg = urlanh + str + \"/\";\r\n      try {\r\n        setIsLoading2(true);\r\n        setIsError2(false);\r\n        let res = await axios({\r\n          url: urlg,\r\n          method: \"get\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        });\r\n        if (res.status === 200) {\r\n          //   console.log(res.status);\r\n        }\r\n        return res.data;\r\n      } catch (err) {\r\n        console.error(err);\r\n        setIsError2(true);\r\n        setIsLoading2(false);\r\n      }\r\n    }\r\n\r\n    getDataListImg().then((res) => {\r\n      if (res) {\r\n        dispatch({ type: actions.DETAIL_IMG, data: res && res[0] });\r\n        setData(res);\r\n        setData2(res);\r\n        setIsLoading2(false);\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let componentMounted = true;\r\n    const fetchData = async () => {\r\n      if (componentMounted && fetchedData && fetchedData?.length !== 0) {\r\n        GetImg(fetchedData[0].ma_dot_kiem_tra);\r\n      }\r\n    };\r\n    fetchData();\r\n\r\n    return () => {\r\n      componentMounted = false;\r\n    };\r\n  }, []);\r\n  ///\r\n\r\n  async function getDataDB2() {\r\n    try {\r\n      setIsLoading3(true);\r\n      setIsError3(false);\r\n      let res = await axios({\r\n        url: urltb2,\r\n        method: \"get\",\r\n        timeout: 8000,\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      return res.data;\r\n    } catch (err) {\r\n      console.error(err);\r\n      setIsError3(true);\r\n      setIsLoading3(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    let componentMounted = true;\r\n    const fetchData = async () => {\r\n      if (componentMounted /*&& !fetchedData2*/ && fetchedData2?.length !== 0) {\r\n        getDataDB2().then((res) => {\r\n          if (res) {\r\n            dispatch({\r\n              type: actions.Db_Tc,\r\n              data: res.sort(function (a, b) {\r\n                return new Date(b.ngay_kiem_tra) - new Date(a.ngay_kiem_tra);\r\n              }),\r\n            });\r\n            setIsLoading3(false);\r\n\r\n            GetImg2(res[0].ma_dot_kiem_tra);\r\n          }\r\n        });\r\n      }\r\n    };\r\n    fetchData();\r\n    return () => {\r\n      componentMounted = false;\r\n    };\r\n  }, []);\r\n\r\n  const reload2 = () => {\r\n    getDataDB2().then((res) => {\r\n      if (res) {\r\n        dispatch({\r\n          type: actions.Db_Tc,\r\n          data: res.sort(function (a, b) {\r\n            return new Date(b.ngay_kiem_tra) - new Date(a.ngay_kiem_tra);\r\n          }),\r\n        });\r\n        setIsLoading3(false);\r\n\r\n        GetImg2(res[0].ma_dot_kiem_tra);\r\n      }\r\n    });\r\n  };\r\n\r\n  const GetImg2 = (str) => {\r\n    async function getDataListImg2() {\r\n      let urlg = urlanh2 + str;\r\n      try {\r\n        setIsLoading4(true);\r\n        setIsError4(false);\r\n        let res = await axios({\r\n          url: urlg,\r\n          method: \"get\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        });\r\n        if (res.status === 200) {\r\n        }\r\n        return res.data;\r\n      } catch (err) {\r\n        console.error(err);\r\n        setIsError4(true);\r\n        setIsLoading4(false);\r\n      }\r\n    }\r\n\r\n    getDataListImg2().then((res) => {\r\n      if (res && Object.keys(res).length != 0) {\r\n        dispatch({\r\n          type: actions.DETAIL_IMG,\r\n          data: res && res[Object.keys(res)[0]],\r\n        });\r\n        let temparr = [];\r\n        res.length !== 0 &&\r\n          Object.keys(res).map((key, index) => temparr.push(res[key]));\r\n        setData3(temparr);\r\n        setData4(temparr);\r\n      }\r\n      setIsLoading4(false);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let componentMounted = true;\r\n    const fetchData = async () => {\r\n      if (componentMounted && fetchedData2 && fetchedData2?.length !== 0) {\r\n        GetImg2(fetchedData2[0].ma_dot_kiem_tra);\r\n      }\r\n    };\r\n    fetchData();\r\n\r\n    return () => {\r\n      componentMounted = false;\r\n    };\r\n  }, []);\r\n\r\n  ///\r\n\r\n  const handleClick = (item) => {\r\n    dispatch({ type: actions.DETAIL_IMG, data: item });\r\n  };\r\n\r\n  const handleShowMore = (mdkt) => {\r\n    GetImg(mdkt);\r\n  };\r\n\r\n  const handleShowMore2 = (mdkt) => {\r\n    GetImg2(mdkt);\r\n  };\r\n\r\n  //----------------------------------\r\n\r\n  function TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n      <div\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`simple-tabpanel-${index}`}\r\n        aria-labelledby={`simple-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && (\r\n          <Box p={0}>\r\n            <Typography>{children}</Typography>\r\n          </Box>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  TabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n  };\r\n\r\n  function a11yProps(index) {\r\n    return {\r\n      id: `simple-tab-${index}`,\r\n      \"aria-controls\": `simple-tabpanel-${index}`,\r\n    };\r\n  }\r\n\r\n  const [value, setValue] = useState(0);\r\n\r\n  let ListDB = [];\r\n\r\n  const getFristImg = (newValue) => {\r\n    if (newValue === 0) {\r\n      GetImg(fetchedData && fetchedData[0].ma_dot_kiem_tra);\r\n    } else {\r\n      GetImg2(fetchedData2 && fetchedData2[0].ma_dot_kiem_tra);\r\n    }\r\n  };\r\n\r\n  const handleChangetab = (event, newValue) => {\r\n    setValue(newValue);\r\n    setMode(newValue);\r\n    getFristImg(newValue);\r\n  };\r\n  //----------------------------------\r\n\r\n  function uuidv4() {\r\n    return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, (c) =>\r\n      (\r\n        c ^\r\n        (crypto.getRandomValues(new Uint8Array(1))[0] & (15 >> (c / 4)))\r\n      ).toString(16)\r\n    );\r\n  }\r\n\r\n  const renderData = (str) => {\r\n    //var temp = str.toString();\r\n    //temp = temp.replace(\"b'\", \"\").replace(\"'\", \"\");\r\n    return \"data:image/jpeg;base64,\" + str;\r\n  };\r\n\r\n  const renderitem = (item, index) => {\r\n    const ru = ListDB.indexOf(item.ma_dot_kiem_tra);\r\n    if (ru === -1) {\r\n      ListDB.push(item.ma_dot_kiem_tra);\r\n      return (\r\n        <div\r\n          key={index}\r\n          className={classes.rootcard}\r\n          onClick={() => handleShowMore(item.ma_dot_kiem_tra)}\r\n        >\r\n          <Paper className={classes.paper}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm container>\r\n                <Grid item>\r\n                  {/*<ButtonBase\r\n                    className={classes.image}\r\n                    component={\"C\"}\r\n                    onClick={() => handleClick(item)}\r\n                  >\r\n                    <img className={classes.img} alt=\"\" src={item.img} />\r\n                  </ButtonBase>*/}\r\n                </Grid>\r\n                <Grid item xs container direction=\"column\" spacing={2}>\r\n                  <Grid item xs style={{ paddingRight: 5 }}>\r\n                    <Typography gutterBottom variant=\"subtitle1\">\r\n                      <p style={{ margin: 0 }}>\r\n                        <b style={{ display: \"inline-block\" }}>\r\n                          Thông tin kiểm tra:{\" \"}\r\n                        </b>\r\n                        <p style={{ margin: 0, display: \"inline-block\" }}>\r\n                          {item.ma_tuyen}_{FormatDate(item.ngay_kiem_tra)}\r\n                        </p>\r\n                      </p>\r\n                      <p style={{ margin: 0 }}>\r\n                        {FormatDate(item.ngay_kiem_tra)}\r\n                      </p>\r\n                      <p style={{ margin: 0 }}>\r\n                        {getTextDisplay(item.ma_tuyen)}\r\n                      </p>\r\n                      <p style={{ margin: 0 }}>\r\n                        {item.bat_dau_doan}\r\n                        {\" - \"} {item.ket_thuc_doan}\r\n                      </p>\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item></Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderitem2 = (item, index) => {\r\n    const ru = ListDB.indexOf(item.ma_dot_kiem_tra);\r\n    if (ru === -1) {\r\n      ListDB.push(item.ma_dot_kiem_tra);\r\n      return (\r\n        <div\r\n          key={index}\r\n          className={classes.rootcard}\r\n          onClick={() => handleShowMore2(item.ma_dot_kiem_tra)}\r\n        >\r\n          <Paper className={classes.paper}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm container>\r\n                <Grid item>\r\n                  {/*<ButtonBase\r\n                    className={classes.image}\r\n                    component={\"C\"}\r\n                    onClick={() => handleClick(item)}\r\n                  >\r\n                    <img className={classes.img} alt=\"\" src={item.img} />\r\n                  </ButtonBase>*/}\r\n                </Grid>\r\n                <Grid item xs container direction=\"column\" spacing={2}>\r\n                  <Grid item xs style={{ paddingRight: 5 }}>\r\n                    <Typography gutterBottom variant=\"subtitle1\">\r\n                      <p style={{ margin: 0 }}>\r\n                        <b style={{ display: \"inline-block\" }}>\r\n                          Thông tin kiểm tra:{\" \"}\r\n                        </b>\r\n                        <p style={{ margin: 0, display: \"inline-block\" }}>\r\n                          {item.ma_tuyen}_{FormatDate(item.ngay_kiem_tra)}\r\n                        </p>\r\n                      </p>\r\n                      <p style={{ margin: 0 }}>\r\n                        {FormatDate(item.ngay_kiem_tra)}\r\n                      </p>\r\n                      <p style={{ margin: 0 }}>\r\n                        {getTextDisplay(item.ma_tuyen)}\r\n                      </p>\r\n                      <p style={{ margin: 0 }}>\r\n                        {item.bat_dau_doan}\r\n                        {\" - \"} {item.ket_thuc_doan}\r\n                      </p>\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item></Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderPhoto = (item, index) => {\r\n    return (\r\n      <ImageListItem\r\n        key={index}\r\n        cols={item.cols || 1}\r\n        onClick={() => handleClick(item)}\r\n      >\r\n        <img\r\n          src={renderData(item.img_data)}\r\n          alt=\"1\"\r\n          className={classes.hoverimg}\r\n        />\r\n      </ImageListItem>\r\n    );\r\n  };\r\n\r\n  const renderPhoto3 = (item, index) => {\r\n    return (\r\n      <ImageListItem\r\n        key={index}\r\n        cols={item.cols || 1}\r\n        onClick={() => handleClick(item)}\r\n      >\r\n        <img src={ChangerUrl(item)} alt=\"2\" className={classes.hoverimg} />\r\n      </ImageListItem>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box style={{ height: \"100%\" }} display=\"flex\" p={0}>\r\n        <Box\r\n          style={{ height: \"100%\", overflowY: \"scroll\", overflowX: \"hidden\" }}\r\n          p={0}\r\n          flex=\"0.25\"\r\n        >\r\n          <div className={classes.roottab}>\r\n            <AppBar position=\"static\">\r\n              <Tabs\r\n                value={value}\r\n                onChange={handleChangetab}\r\n                variant=\"scrollable\"\r\n                scrollButtons=\"auto\"\r\n              >\r\n                <Tab\r\n                  component={\"C\"}\r\n                  label=\"Ảnh đợt bay tự động\"\r\n                  {...a11yProps(0)}\r\n                />\r\n                <Tab\r\n                  component={\"C\"}\r\n                  label=\"Ảnh đợt bay tùy chọn\"\r\n                  {...a11yProps(1)}\r\n                />\r\n              </Tabs>\r\n            </AppBar>\r\n            <TabPanel value={value} index={0}>\r\n              <Button\r\n                onClick={() => reload1()}\r\n                component={\"C\"}\r\n                title=\"Làm mới dữ liệu\"\r\n              >\r\n                <CachedIcon />\r\n              </Button>\r\n              {isLoading1 ? (\r\n                <Loading />\r\n              ) : fetchedData && fetchedData2.length !== 0 ? (\r\n                fetchedData.map((item, index) => renderitem(item, index))\r\n              ) : !isError1 ? (\r\n                \"Không có dữ liệu\"\r\n              ) : (\r\n                \"Lỗi khi thực hiện lấy dữ liệu\"\r\n              )}\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1}>\r\n              <Button\r\n                onClick={() => reload2()}\r\n                component={\"C\"}\r\n                title=\"Làm mới dữ liệu\"\r\n              >\r\n                <CachedIcon />\r\n              </Button>\r\n              {isLoading3 ? (\r\n                <Loading />\r\n              ) : fetchedData2 && fetchedData2.length !== 0 ? (\r\n                fetchedData2.map((item, index) => renderitem2(item, index))\r\n              ) : !isError3 ? (\r\n                \"Không có dữ liệu\"\r\n              ) : (\r\n                \"Lỗi khi thực hiện lấy dữ liệu\"\r\n              )}\r\n            </TabPanel>\r\n          </div>\r\n        </Box>\r\n        <Box\r\n          id=\"show\"\r\n          style={{ height: \"100%\", overflow: \"scroll\" }}\r\n          p={0}\r\n          flex=\"0.50\"\r\n          bgcolor=\"#ffffff\"\r\n          position=\"relative\"\r\n        >\r\n          {\r\n            <>\r\n              <Box className={classes.root}>\r\n                <ImageList\r\n                  rowHeight={160}\r\n                  className={classes.imageList}\r\n                  cols={3}\r\n                >\r\n                  {Mode === 0 ? (\r\n                    isLoading1 && isLoading2 ? (\r\n                      <Waiting\r\n                        color=\"#f6f3f3\"\r\n                        icon={<PhotoIcon style={{ fontSize: \"100\" }} />}\r\n                      />\r\n                    ) : fetchedData && Data.length !== 0 ? (\r\n                      Data.map((item, index) => renderPhoto(item, index))\r\n                    ) : !isError2 && !isError1 ? (\r\n                      \"Không có dữ liệu\"\r\n                    ) : (\r\n                      \"Lỗi khi thực hiện lấy dữ liệu\"\r\n                    )\r\n                  ) : isLoading3 && isLoading4 ? (\r\n                    <Waiting\r\n                      color=\"#f6f3f3\"\r\n                      icon={<PhotoIcon style={{ fontSize: \"100\" }} />}\r\n                    />\r\n                  ) : fetchedData2 && Data3.length !== 0 ? (\r\n                    Data3.map((item, index) => renderPhoto3(item, index))\r\n                  ) : !isError4 && !isError3 ? (\r\n                    \"Không có dữ liệu\"\r\n                  ) : (\r\n                    \"Lỗi khi thực hiện lấy dữ liệu\"\r\n                  )}\r\n                </ImageList>\r\n              </Box>\r\n              {/* \r\n              <Box className={classes.root}> \r\n                <p style={{ padding: \"5px\", margin: \"0px\" }}>\r\n                  Dữ liệu ảnh lỗi:\r\n                </p>\r\n                <ImageList\r\n                  rowHeight={160}\r\n                  className={classes.imageList}\r\n                  cols={3}\r\n                >\r\n                  {Mode === 0 ? (\r\n                    isLoading1 && isLoading2 ? (\r\n                      <Waiting\r\n                        color=\"#f6f3f3\"\r\n                        icon={<PhotoIcon style={{ fontSize: \"100\" }} />}\r\n                      />\r\n                    ) : fetchedData && Data.length !== 0 ? (\r\n                      Data.map((item, index) => renderPhoto(item, index))\r\n                    ) : !isError2 && !isError1 ? (\r\n                      \"Không có dữ liệu\"\r\n                    ) : (\r\n                      \"Lỗi khi thực hiện lấy dữ liệu\"\r\n                    )\r\n                  ) : isLoading3 && isLoading4 ? (\r\n                    <Waiting\r\n                      color=\"#f6f3f3\"\r\n                      icon={<PhotoIcon style={{ fontSize: \"100\" }} />}\r\n                    />\r\n                  ) : fetchedData2 && Data3.length !== 0 ? (\r\n                    Data3.map((item, index) => renderPhoto3(item, index))\r\n                  ) : !isError4 && !isError3 ? (\r\n                    \"Không có dữ liệu\"\r\n                  ) : (\r\n                    \"Lỗi khi thực hiện lấy dữ liệu\"\r\n                  )}\r\n                </ImageList>\r\n              </Box>\r\n              <Box className={classes.root}>\r\n                <p style={{ padding: \"5px\", margin: \"0px\" }}>\r\n                  Dữ liệu ảnh bình thường:\r\n                </p>\r\n                <ImageList\r\n                  rowHeight={160}\r\n                  className={classes.imageList}\r\n                  cols={3}\r\n                >\r\n                  {Mode === 0 ? (\r\n                    isLoading1 && isLoading2 ? (\r\n                      <Waiting\r\n                        color=\"#f6f3f3\"\r\n                        icon={<PhotoIcon style={{ fontSize: \"100\" }} />}\r\n                      />\r\n                    ) : fetchedData && Data2.length !== 0 ? (\r\n                      Data2.map((item, index) => renderPhoto(item, index))\r\n                    ) : !isError2 && !isError1 ? (\r\n                      \"Không có dữ liệu\"\r\n                    ) : (\r\n                      \"Lỗi khi thực hiện lấy dữ liệu\"\r\n                    )\r\n                  ) : isLoading3 && isLoading4 ? (\r\n                    <Waiting\r\n                      color=\"#f6f3f3\"\r\n                      icon={<PhotoIcon style={{ fontSize: \"100\" }} />}\r\n                    />\r\n                  ) : fetchedData2 && Data4.length !== 0 ? (\r\n                    Data4.map((item, index) => renderPhoto3(item, index))\r\n                  ) : !isError4 && !isError3 ? (\r\n                    \"Không có dữ liệu\"\r\n                  ) : (\r\n                    \"Lỗi khi thực hiện lấy dữ liệu\"\r\n                  )}\r\n                </ImageList>\r\n              </Box>*/}\r\n            </>\r\n          }\r\n        </Box>\r\n        <Box style={{ height: \"100%\" }} p={0} flex=\"0.25\" bgcolor=\"#f1f1f1\">\r\n          {Mode === 0 ? (\r\n            isLoading1 && isLoading2 ? (\r\n              <Loading />\r\n            ) : (\r\n              <Detail />\r\n            )\r\n          ) : isLoading3 && isLoading4 ? (\r\n            <Loading />\r\n          ) : (\r\n            <Detail2 />\r\n          )}\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PhotoMS;\r\n","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\reducers\\dataReducer.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\main\\reducers\\authReducer.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\theme\\typography.js",["634"],"export default {\r\n  h1: {\r\n    fontWeight: 500,\r\n    fontSize: 35,\r\n    letterSpacing: \"-0.24px\",\r\n  },\r\n  h2: {\r\n    fontWeight: 500,\r\n    fontSize: 29,\r\n    letterSpacing: \"-0.24px\",\r\n  },\r\n  h3: {\r\n    fontWeight: 500,\r\n    fontSize: 24,\r\n    letterSpacing: \"-0.06px\",\r\n  },\r\n  h4: {\r\n    fontWeight: 500,\r\n    fontSize: 20,\r\n    letterSpacing: \"-0.06px\",\r\n  },\r\n  h5: {\r\n    fontWeight: 500,\r\n    fontSize: 16,\r\n    letterSpacing: \"-0.05px\",\r\n  },\r\n  h6: {\r\n    fontWeight: 500,\r\n    fontSize: 14,\r\n    letterSpacing: \"-0.05px\",\r\n  },\r\n  overline: {\r\n    fontWeight: 500,\r\n  },\r\n};\r\n","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\theme\\shadows.js",["635"],"export default [\r\n  'none',\r\n  '0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)'\r\n];\r\n","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\redux\\types.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\test\\datathietbiloi_T1.js",["636"],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\util\\ChangeUrl.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\util\\formatDate.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\util\\GetTenTuyen.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\photoms\\const\\itemDataError.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\generalObject\\Loading.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\photoms\\const\\itemDataNone.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\generalObject\\Waiting.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\photoms\\detail2.js",["637","638"],"import React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport PhotoIcon from \"@material-ui/icons/Photo\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport { Button } from \"@material-ui/core\";\r\n//---------------------------------------------------\r\nimport Map_Item from \"../generalObject/Map_Item\";\r\nimport Waiting from \"../generalObject/Waiting\";\r\nimport { ChangerUrl } from \"../../util/ChangeUrl\";\r\n\r\nconst Detail2 = () => {\r\n  const Redux_imginfo = useSelector((state) => state.imginfo);\r\n  const [value, setValue] = useState(\"none\");\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    alert(value);\r\n  };\r\n\r\n  const renderData = (str) => {\r\n    var temp = str.toString();\r\n    temp = temp.replace(\"b'\", \"\").replace(\"'\", \"\");\r\n    return \"data:image/jpeg;base64,\" + temp;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box id=\"detail\" style={{ height: \"100%\" }} p={0}>\r\n        <Box\r\n          style={{\r\n            height: \"60%\",\r\n            width: \"100%\",\r\n            overflowY: \"scroll\",\r\n            objectFit: \"cover\",\r\n          }}\r\n          bgcolor=\"#ffffff\"\r\n          position=\"relative\"\r\n          p={0}\r\n        >\r\n          {Redux_imginfo ? (\r\n            Redux_imginfo ? (\r\n              <>\r\n                <p style={{ color: \"black\", padding: \"10px\" }}>\r\n                  Thông tin chi tiết:\r\n                </p>\r\n                <center>\r\n                  <img\r\n                    src={ChangerUrl(Redux_imginfo)}\r\n                    //src={Redux_imginfo.imh}\r\n                    style={{\r\n                      height: \"150px\",\r\n                      maxWidth: \"500px\",\r\n                      objectFit: \"cover\",\r\n                    }}\r\n                    alt=\"2\"\r\n                  />\r\n                </center>\r\n                <div style={{ padding: \"10px\", color: \"black\", width: \"100%\" }}>\r\n                  <FormControl component=\"fieldset\" style={{ width: \"100%\" }}>\r\n                    <FormLabel component=\"legend\" style={{ color: \"black\" }}>\r\n                      Xác nhận lỗi:\r\n                    </FormLabel>\r\n                    <RadioGroup\r\n                      aria-label=\"Lỗi\"\r\n                      name=\"error\"\r\n                      //value={value}\r\n                      value={\"none\"}\r\n                      onChange={handleChange}\r\n                    >\r\n                      <FormControlLabel\r\n                        value=\"none\"\r\n                        control={<Radio />}\r\n                        label=\"Bình thường\"\r\n                      />\r\n                      <FormControlLabel\r\n                        value=\"1\"\r\n                        control={<Radio />}\r\n                        label=\"Vật thể lạ mắc vào đường dây\"\r\n                      />\r\n                      <FormControlLabel\r\n                        value=\"2\"\r\n                        control={<Radio />}\r\n                        label=\"Dây dẫn bị tưa (đứt sợi)\"\r\n                      />\r\n                      <FormControlLabel\r\n                        value=\"3\"\r\n                        control={<Radio />}\r\n                        label=\"Quá nhiệt mối nối\"\r\n                      />\r\n                      <FormControlLabel\r\n                        value=\"4\"\r\n                        control={<Radio />}\r\n                        label=\"Trôi tạ chống rung\"\r\n                      />\r\n                      <FormControlLabel\r\n                        value=\"5\"\r\n                        control={<Radio />}\r\n                        label=\"Cách điện thủy tinh bị mất (vỡ) bát\"\r\n                      />\r\n                      <FormControlLabel\r\n                        value=\"6\"\r\n                        control={<Radio />}\r\n                        label=\"Cách điện silicon bị rách tán\"\r\n                      />\r\n                      <FormControlLabel\r\n                        value=\"7\"\r\n                        control={<Radio />}\r\n                        label=\"Cách điện bị bám vật lạ\"\r\n                      />\r\n                      <FormControlLabel\r\n                        value=\"8\"\r\n                        control={<Radio />}\r\n                        label=\"Tuột hãm dây trên chuỗi cách điện\"\r\n                      />\r\n                      <FormControlLabel\r\n                        value=\"9\"\r\n                        control={<Radio />}\r\n                        label=\"Cột điện bị bám vật lạ\"\r\n                      />\r\n                      <FormControlLabel\r\n                        value=\"10\"\r\n                        control={<Radio />}\r\n                        label=\" Cột điện bị han rỉ\"\r\n                      />\r\n                      <FormControlLabel\r\n                        value=\"11\"\r\n                        control={<Radio />}\r\n                        label=\"Móng cột bị nứt bê tông\"\r\n                      />\r\n                      <FormControlLabel\r\n                        value=\"12\"\r\n                        control={<Radio />}\r\n                        label=\"Sạt lở đất xung quanh móng cột\"\r\n                      />\r\n                    </RadioGroup>\r\n                  </FormControl>\r\n                  <Button component={\"C\"} onClick={handleUpdate}>\r\n                    Cập nhật\r\n                  </Button>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <Waiting\r\n                color=\"#abdbe3\"\r\n                icon={<PhotoIcon style={{ fontSize: \"100\" }} />}\r\n              />\r\n            )\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Box>\r\n        <Box style={{ height: \"40%\", width: \"100%\" }} p={0}>\r\n          <Map_Item />\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Detail2;\r\n","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\dashboard\\Sua.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\dashboard\\SoLoiTrenSoThietBi.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\photoms\\imgshow.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\dashboard\\NgungHoatDong.js",["639","640"],"import {\r\n  Avatar,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport { indigo } from '@material-ui/core/colors';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\nimport BuildRoundedIcon from '@material-ui/icons/BuildRounded';\r\nconst NgungHoatDong = (props) => (\r\n  <Card {...props}>\r\n    <CardContent>\r\n      <Grid\r\n        container\r\n        spacing={3}\r\n        style={{ justifyContent: 'space-between' }}\r\n      >\r\n        <Grid item>\r\n          <Typography\r\n            color=\"textSecondary\"\r\n            gutterBottom\r\n            variant=\"h6\"\r\n          >\r\n            NGƯNG HOẠT ĐỘNG\r\n          </Typography>\r\n          <Typography\r\n            color=\"textPrimary\"\r\n            variant=\"h3\"\r\n          >\r\n            13\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Avatar\r\n            style={{\r\n              backgroundColor: \"gray\",\r\n              height: 56,\r\n              width: 56\r\n            }}\r\n          >\r\n            <BuildRoundedIcon />\r\n          </Avatar>\r\n        </Grid>\r\n      </Grid>\r\n    </CardContent>\r\n  </Card>\r\n);\r\n\r\nexport default NgungHoatDong;\r\n","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\photoms\\detail.js",["641"],"import React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport PhotoIcon from \"@material-ui/icons/Photo\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport { Button } from \"@material-ui/core\";\r\n//---------------------------------------------------\r\nimport Map_Item from \"../generalObject/Map_Item\";\r\nimport Waiting from \"../generalObject/Waiting\";\r\n\r\nconst Detail = () => {\r\n  const Redux_imginfo = useSelector((state) => state.imginfo);\r\n  const [value, setValue] = useState(\"none\");\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    alert(value);\r\n  };\r\n\r\n  const renderData = (str) => {\r\n    var temp = str.toString();\r\n    temp = temp.replace(\"b'\", \"\").replace(\"'\", \"\");\r\n    return \"data:image/jpeg;base64,\" + temp;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box id=\"detail\" style={{ height: \"100%\" }} p={0}>\r\n        <Box\r\n          style={{\r\n            height: \"60%\",\r\n            width: \"100%\",\r\n            overflowY: \"scroll\",\r\n            objectFit: \"cover\",\r\n          }}\r\n          bgcolor=\"#ffffff\"\r\n          position=\"relative\"\r\n          p={0}\r\n        >\r\n          {Redux_imginfo ? (\r\n            Redux_imginfo.img_data ? (\r\n              <>\r\n                <p style={{ color: \"black\", padding: \"10px\" }}>\r\n                  Thông tin chi tiết:\r\n                </p>\r\n                <center>\r\n                  <img\r\n                    src={renderData(Redux_imginfo.img_data)}\r\n                    //src={Redux_imginfo.imh}\r\n                    style={{\r\n                      height: \"150px\",\r\n                      maxWidth: \"500px\",\r\n                      objectFit: \"cover\",\r\n                    }}\r\n                    alt=\"1\"\r\n                  />\r\n                </center>\r\n                <div style={{ padding: \"10px\", color: \"black\", width: \"100%\" }}>\r\n                  <FormControl component=\"fieldset\" style={{ width: \"100%\" }}>\r\n                    <FormLabel component=\"legend\" style={{ color: \"black\" }}>\r\n                      Xác nhận lỗi:\r\n                    </FormLabel>\r\n                    <RadioGroup\r\n                      aria-label=\"Lỗi\"\r\n                      name=\"error\"\r\n                      //value={value}\r\n                      value={\"none\"}\r\n                      onChange={handleChange}\r\n                    >\r\n                      <FormControlLabel\r\n                        value=\"none\"\r\n                        control={<Radio />}\r\n                        label=\"Bình thường\"\r\n                      />\r\n                      <FormControlLabel\r\n                        value=\"1\"\r\n                        control={<Radio />}\r\n                        label=\"Vật thể lạ mắc vào đường dây\"\r\n                      />\r\n                      <FormControlLabel\r\n                        value=\"2\"\r\n                        control={<Radio />}\r\n                        label=\"Dây dẫn bị tưa (đứt sợi)\"\r\n                      />\r\n                      <FormControlLabel\r\n                        value=\"3\"\r\n                        control={<Radio />}\r\n                        label=\"Quá nhiệt mối nối\"\r\n                      />\r\n                      <FormControlLabel\r\n                        value=\"4\"\r\n                        control={<Radio />}\r\n                        label=\"Trôi tạ chống rung\"\r\n                      />\r\n                      <FormControlLabel\r\n                        value=\"5\"\r\n                        control={<Radio />}\r\n                        label=\"Cách điện thủy tinh bị mất (vỡ) bát\"\r\n                      />\r\n                      <FormControlLabel\r\n                        value=\"6\"\r\n                        control={<Radio />}\r\n                        label=\"Cách điện silicon bị rách tán\"\r\n                      />\r\n                      <FormControlLabel\r\n                        value=\"7\"\r\n                        control={<Radio />}\r\n                        label=\"Cách điện bị bám vật lạ\"\r\n                      />\r\n                      <FormControlLabel\r\n                        value=\"8\"\r\n                        control={<Radio />}\r\n                        label=\"Tuột hãm dây trên chuỗi cách điện\"\r\n                      />\r\n                      <FormControlLabel\r\n                        value=\"9\"\r\n                        control={<Radio />}\r\n                        label=\"Cột điện bị bám vật lạ\"\r\n                      />\r\n                      <FormControlLabel\r\n                        value=\"10\"\r\n                        control={<Radio />}\r\n                        label=\" Cột điện bị han rỉ\"\r\n                      />\r\n                      <FormControlLabel\r\n                        value=\"11\"\r\n                        control={<Radio />}\r\n                        label=\"Móng cột bị nứt bê tông\"\r\n                      />\r\n                      <FormControlLabel\r\n                        value=\"12\"\r\n                        control={<Radio />}\r\n                        label=\"Sạt lở đất xung quanh móng cột\"\r\n                      />\r\n                    </RadioGroup>\r\n                  </FormControl>\r\n                  <Button component={\"C\"} onClick={handleUpdate}>\r\n                    Cập nhật\r\n                  </Button>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <Waiting\r\n                color=\"#abdbe3\"\r\n                icon={<PhotoIcon style={{ fontSize: \"100\" }} />}\r\n              />\r\n            )\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Box>\r\n        <Box style={{ height: \"40%\", width: \"100%\" }} p={0}>\r\n          <Map_Item />\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Detail;\r\n","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\dashboard\\ThietBiLoiSoThietBi.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\dashboard\\ThietBiDaSua.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\dashboard\\Sales.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\dashboard\\Loi.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\dashboard\\ThongKeLoi.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\dashboard\\ThietBi.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\nhapdulieu\\Children.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\mixins\\chartjs.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\test\\List.js",["642","643","644","645","646","647"],"import { Typography, Card, CardContent } from \"@material-ui/core\";\r\n\r\n// icon thiet bi loi\r\nimport errorinsuTT from \"./icon/error_insuTT.png\";\r\nimport errorinsuSLC from \"./icon/error_insuSLC.png\";\r\nimport errorDZ from \"./icon/error_DZ.png\";\r\n// icon thiet bi muc canh bao\r\nimport warninsuTT from \"./icon/warn_insuTT.png\";\r\nimport warninsuSLC from \"./icon/warn_insuSLC.png\";\r\nimport warnDZ from \"./icon/warn_DZ.png\";\r\n// icon thiet bi binh thuong\r\nimport noterrorinsuTT from \"./icon/not_error_insuTT.png\";\r\nimport noterrorinsuSLC from \"./icon/not_error_insuSLC.png\";\r\nimport noterrorDZ from \"./icon/not_error_DZ.png\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../redux/types\";\r\n\r\nconst MucDoLoi = () => {\r\n  const classes = {};\r\n  const anhthietbiloi = useSelector((state) => state.anhthietbiloi);\r\n  const idtuyen = useSelector((state) => state.idtuyen);\r\n  const idthietbi = useSelector((state) => state.idthietbi);\r\n  const dispatch = useDispatch();\r\n  const idanh = useSelector((state) => state.idanh);\r\n\r\n  function HandleClickDiv(value, loai) {\r\n    let obj = {};\r\n    obj.loai = loai;\r\n    obj.ma_thiet_bi = value.ma_thiet_bi;\r\n    console.log(obj);\r\n    console.log(value);\r\n    dispatch({\r\n      type: actions.idanh,\r\n      data: obj,\r\n    });\r\n  }\r\n\r\n  let findbykeyinarray = (array, value) => {\r\n    for (let i = 0; i < array.length; i++) {\r\n      if (Object.keys(array[i])[0] == value) {\r\n        return array[i];\r\n      }\r\n    }\r\n  };\r\n\r\n  const classItem = [\"cach_dien_silicon\", \"cach_dien_thuy_tinh\", \"day_dien\"];\r\n\r\n  const RenderItem0 = () => {\r\n    let data = anhthietbiloi?.data || [];\r\n    let item = findbykeyinarray(data, idthietbi);\r\n    if (item) {\r\n      let inneritem = item[Object.keys(item)[0]];\r\n\r\n      return (\r\n        <>\r\n          <Typography variant=\"h5\" component=\"h2\">\r\n            {inneritem[classItem[0]] ? classItem[0] : \"\"}\r\n          </Typography>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              overflow: \"auto\",\r\n              marginBottom: \"2%\",\r\n              marginTop: \"2%\",\r\n            }}\r\n          >\r\n            {inneritem[classItem[0]]\r\n              ? inneritem[classItem[0]].map((value, index) => (\r\n                  <>\r\n                    <div\r\n                      key={value.ma_thiet_bi}\r\n                      onClick={(e) => HandleClickDiv(value, classItem[0])}\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        marginLeft: \"7%\",\r\n                        border: \"1px solid black\",\r\n                        borderRadius: \"13px\",\r\n                        overflow: \"hidden\",\r\n                        minWidth: \"7%\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        src={\r\n                          value.trang_thai === \"1_normal\"\r\n                            ? noterrorinsuSLC\r\n                            : value.trang_thai === \"2_defect_detected\"\r\n                            ? warninsuSLC\r\n                            : errorinsuSLC\r\n                        }\r\n                        height={75}\r\n                        width={40}\r\n                      />\r\n                    </div>\r\n                  </>\r\n                ))\r\n              : \"\"}\r\n          </div>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  const RenderItem1 = () => {\r\n    let data = anhthietbiloi?.data || [];\r\n    let item = findbykeyinarray(data, idthietbi);\r\n    if (item) {\r\n      let inneritem = item[Object.keys(item)[0]];\r\n\r\n      return (\r\n        <>\r\n          <Typography variant=\"h5\" component=\"h2\">\r\n            {inneritem[classItem[1]] ? classItem[1] : \"\"}\r\n          </Typography>{\" \"}\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              overflow: \"auto\",\r\n              marginBottom: \"2%\",\r\n              marginTop: \"2%\",\r\n            }}\r\n          >\r\n            {inneritem[classItem[1]]\r\n              ? inneritem[classItem[1]].map((value, index) => (\r\n                  <>\r\n                    <div\r\n                      key={value.ma_thiet_bi}\r\n                      onClick={(e) => HandleClickDiv(value, classItem[1])}\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        marginLeft: \"7%\",\r\n                        border: \"1px solid black\",\r\n                        borderRadius: \"13px\",\r\n                        overflow: \"hidden\",\r\n                        minWidth: \"7%\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        src={\r\n                          value.trang_thai === \"1_normal\"\r\n                            ? noterrorinsuTT\r\n                            : value.trang_thai === \"2_defect_detected\"\r\n                            ? warninsuTT\r\n                            : errorinsuTT\r\n                        }\r\n                        height={75}\r\n                        width={40}\r\n                      />\r\n                    </div>\r\n                  </>\r\n                ))\r\n              : \"\"}\r\n          </div>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  const RenderItem2 = () => {\r\n    let data = anhthietbiloi?.data || [];\r\n    let item = findbykeyinarray(data, idthietbi);\r\n    if (item) {\r\n      let inneritem = item[Object.keys(item)[0]];\r\n\r\n      return (\r\n        <>\r\n          <Typography variant=\"h5\" component=\"h2\">\r\n            {inneritem[classItem[2]] ? classItem[2] : \"\"}\r\n          </Typography>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              overflow: \"auto\",\r\n              marginBottom: \"2%\",\r\n              marginTop: \"2%\",\r\n            }}\r\n          >\r\n            {inneritem[classItem[2]]\r\n              ? inneritem[classItem[2]].map((value, index) => (\r\n                  <>\r\n                    <div\r\n                      key={value.ma_thiet_bi}\r\n                      onClick={(e) => HandleClickDiv(value, classItem[2])}\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        marginLeft: \"7%\",\r\n                        border: \"1px solid black\",\r\n                        borderRadius: \"13px\",\r\n                        overflow: \"hidden\",\r\n                        minWidth: \"7%\",\r\n                      }}\r\n                    >\r\n                      <img\r\n                        src={\r\n                          value.trang_thai === \"1_normal\"\r\n                            ? noterrorDZ\r\n                            : value.trang_thai === \"2_defect_detected\"\r\n                            ? warnDZ\r\n                            : errorDZ\r\n                        }\r\n                        height={75}\r\n                        width={40}\r\n                      />\r\n                    </div>\r\n                  </>\r\n                ))\r\n              : \"\"}\r\n          </div>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      className={classes.root}\r\n      variant=\"outlined\"\r\n      style={{ height: \"100%\" }}\r\n    >\r\n      <CardContent>\r\n        {RenderItem0()}\r\n        {RenderItem1()}\r\n        {RenderItem2()}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport { MucDoLoi };\r\n","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\test\\Loading.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\util\\optiontuyen.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\home\\Video.js",["648","649","650","651","652","653","654"],"import React, { useEffect, useState } from \"react\";\r\n//import \"../../../asset/css/stream_video.css\";\r\n//import 'video-react/dist/video-react.css';\r\nimport Loading from \"../generalObject/Loading\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n//-----------------------------------\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//----------------------------------\r\nimport * as actions from \"../../redux/types\";\r\n//----------------------------------\r\nimport {\r\n  ReactPictureAnnotation,\r\n  defaultShapeStyle,\r\n  DefaultInputSection,\r\n} from \"react-picture-annotation\";\r\nimport VideoWS from \"../nhapdulieu/VideoWS\";\r\nimport { ChangerUrl } from \"../../util/ChangeUrl\";\r\nimport SlideshowGallery from \"../generalObject/slideshow-gallery/SlideshowGallery\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {},\r\n  selectEmpty: {\r\n    padding: theme.spacing(0.3),\r\n    color: \"white\",\r\n    minWidth: 300,\r\n  },\r\n  BtnContainer: {\r\n    width: 85,\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  margin: {\r\n    marginRight: 5,\r\n  },\r\n  framevideo: {\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    backgroundColor: \"green\",\r\n  },\r\n  mainvideo: {\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    position: \"absolute\",\r\n    top: \"0\",\r\n    alignItems: \"flex-end\",\r\n    \"&:hover\": {\r\n      cursor: \"pointer\",\r\n      \"& $controls\": {\r\n        display: \"block\",\r\n      },\r\n    },\r\n  },\r\n  controls: {\r\n    backgroundColor: \"rgba(0, 0, 0, .5)\",\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    display: \"none\",\r\n  },\r\n  btnfullview: {\r\n    right: 10,\r\n    position: \"absolute\",\r\n  },\r\n}));\r\n\r\nexport default function MainVideoT() {\r\n  // ------------ Redux Start ------------\r\n  const currentVideoNormal = useSelector((state) => state.currentVideoNormal);\r\n  const DetectVideo = useSelector((state) => state.detectVideo);\r\n  const IDVideo = useSelector((state) => state.idvideo);\r\n  const ModeShowVideo = useSelector((state) => state.modeshowvideo);\r\n  // const currentVideoImage = useSelector((state) => state.currentVideoImage);\r\n  const AllSlideShowData = useSelector((state) => state.AllSlideShowData);\r\n  const pageSize = useSelector((state) => state.pageSize);\r\n  // const ws = props.ws;\r\n\r\n  //const [Lists, setLists] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n  // ------------ Redux End ------------\r\n  const classes = useStyles();\r\n\r\n  const sleep = (milliseconds) => {\r\n    return new Promise((resolve) => setTimeout(resolve, milliseconds));\r\n  };\r\n\r\n  const generate_token = (length) => {\r\n    var a =\r\n      \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\".split(\r\n        \"\"\r\n      );\r\n    var b = [];\r\n    for (var i = 0; i < length; i++) {\r\n      var j = (Math.random() * (a.length - 1)).toFixed(0);\r\n      b[i] = a[j];\r\n    }\r\n    return b.join(\"\");\r\n  };\r\n\r\n  const getid = (data) => {\r\n    var x = \"_\";\r\n    var y = \".\";\r\n    var id =\r\n      data.indexOf(x) >= 0 && data.indexOf(y) >= 0\r\n        ? data.substring(data.indexOf(x) + x.length, data.indexOf(y))\r\n        : data;\r\n    return id;\r\n  };\r\n\r\n  const check = (id) => {\r\n    return IDVideo === \"ALL\" ? true : IDVideo === getid(id) ? true : false;\r\n  };\r\n\r\n  async function RunImg() {\r\n    if (ModeShowVideo === \"Normal\") {\r\n      if (currentVideoNormal) {\r\n        for (let i = 0; i < currentVideoNormal.length; i++) {\r\n          let boxess = [];\r\n          var data = new Object();\r\n          if (check(currentVideoNormal[i].img_name)) {\r\n            for (let j = 0; j < currentVideoNormal[i].label_info.length; j++) {\r\n              var tempjson = new Object();\r\n              tempjson.id = generate_token(12);\r\n              tempjson.mark = new Object();\r\n              // convert x0y0 x1y1 => x,y,width,height\r\n              var originX = currentVideoNormal[i].label_info[j].bbox[0];\r\n              tempjson.mark.x = parseInt(originX);\r\n              var originY = currentVideoNormal[i].label_info[j].bbox[1];\r\n              tempjson.mark.y = parseInt(originY);\r\n              var widthb =\r\n                currentVideoNormal[i].label_info[j].bbox[2] - originX;\r\n              tempjson.mark.width = widthb;\r\n              var heightb =\r\n                currentVideoNormal[i].label_info[j].bbox[3] - originY;\r\n              tempjson.mark.height = heightb;\r\n              tempjson.mark.type = \"RECT\";\r\n              tempjson.comment = currentVideoNormal[i].label_info[j].label;\r\n              boxess.push(tempjson);\r\n            }\r\n            data.image = currentVideoNormal[i].img_data;\r\n            data.idata = boxess;\r\n            dispatch({\r\n              type: actions.ON_DETECT_VIDEO,\r\n              data: data,\r\n            });\r\n            await sleep(1000);\r\n          }\r\n          // 1000 / 5 work\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    RunImg();\r\n  }, [currentVideoNormal]);\r\n\r\n  //--------------------------\r\n\r\n  /* const [pageSize, setPageSize] = useState({\r\n    width: document.getElementsByClassName(\"outer\")[0]\r\n      ? document.getElementsByClassName(\"outer\")[0].offsetWidth\r\n      : 0,\r\n    height: document.getElementsByClassName(\"outer\")[0]\r\n      ? document.getElementsByClassName(\"outer\")[0].offsetHeight\r\n      : 0,\r\n  });*/\r\n\r\n  const onResize = () => {\r\n    let width = document.getElementsByClassName(\"outer\")[0]\r\n      ? document.getElementsByClassName(\"outer\")[0].offsetWidth\r\n      : 0;\r\n    let height = document.getElementsByClassName(\"outer\")[0]\r\n      ? document.getElementsByClassName(\"outer\")[0].offsetHeight\r\n      : 0;\r\n    if (pageSize.width !== width || pageSize.height !== height) {\r\n      // setPageSize({ width: width, height: height });\r\n      dispatch({\r\n        type: actions.pageSize,\r\n        data: {\r\n          width: width,\r\n          height: height,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    onResize();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let data = DetectVideo;\r\n    setTimeout(() => {\r\n      dispatch({\r\n        type: actions.ON_DETECT_VIDEO,\r\n        data: data,\r\n      });\r\n    }, 50);\r\n  }, [pageSize]);\r\n\r\n  const onSelect = (selectedId) => {\r\n    /*console.log(selectedId)*/\r\n  };\r\n  const onChange = (data) => {\r\n    /*console.log(data)*/\r\n  };\r\n\r\n  // useEffect(() => {}, [currentVideoImage]);\r\n\r\n  //-------------------------\r\n  return (\r\n    <div\r\n      className=\"outer\"\r\n      style={{ background: \"black\", height: \"100%\", width: \"100%\" }}\r\n    >\r\n      {ModeShowVideo === \"Normal\" &&\r\n        (DetectVideo ? (\r\n          <div className={classes.mainvideo}>\r\n            <ReactPictureAnnotation\r\n              image={\"data:image/jpeg;base64,\" + DetectVideo.image}\r\n              onSelect={onSelect}\r\n              onChange={onChange}\r\n              width={pageSize.width}\r\n              height={pageSize.height}\r\n              annotationStyle={{\r\n                ...defaultShapeStyle,\r\n                shapeStrokeStyle: \"#2193ff\",\r\n                transformerBackground: \"black\",\r\n              }}\r\n              annotationData={DetectVideo.idata}\r\n              inputElement={(value, onChange, onDelete) => (\r\n                <DefaultInputSection\r\n                  placeholder={\"Nhãn\"}\r\n                  {...{ value, onChange, onDelete }}\r\n                />\r\n              )}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <div\r\n            style={{\r\n              padding: \"15%\",\r\n            }}\r\n          >\r\n            <Loading />\r\n          </div>\r\n        ))}\r\n      {ModeShowVideo === \"Live\" && <VideoWS />}\r\n      {ModeShowVideo === \"Video\" && (\r\n        <video\r\n          style={{ width: \"100%\", height: \"100%\" }}\r\n          controls\r\n          autoPlay\r\n          type=\"video/mp4\"\r\n          src={ChangerUrl(IDVideo)}\r\n        ></video>\r\n      )}\r\n      {ModeShowVideo === \"SlideShow\" && (\r\n        <SlideshowGallery input={AllSlideShowData} ratio={`5:2`} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\dotbay\\dotbay.js",["655","656","657","658","659"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../redux/types\";\r\nimport { FormControl, InputLabel, MenuItem, Select } from \"@material-ui/core\";\r\nimport Loading from \"../generalObject/Loading\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FullDialogBC from \"../generalObject/DialogBC\";\r\nimport BtnPrint from \"../generalObject/BtnPrint\";\r\nimport TreeView from \"@material-ui/lab/TreeView\";\r\nimport CachedIcon from \"@material-ui/icons/Cached\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport TreeItem from \"@material-ui/lab/TreeItem\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { getTextDisplay } from \"../../util/GetTenTuyen\";\r\nimport { FormatDate } from \"../../util/formatDate\";\r\nimport FiberNewIcon from \"@material-ui/icons/FiberNew\";\r\nimport DialogPopupNormal from \"../generalObject/VideoDialog/Dialog_Popup_Normal\";\r\n// data\r\nimport { T1 } from \"../../util/toado/T1\";\r\nimport { T2 } from \"../../util/toado/T2\";\r\nimport { T3 } from \"../../util/toado/T3\";\r\nimport { T4 } from \"../../util/toado/T4\";\r\nimport { T5 } from \"../../util/toado/T5\";\r\nimport { T6 } from \"../../util/toado/T6\";\r\nimport { T7 } from \"../../util/toado/T7\";\r\nimport { T8 } from \"../../util/toado/T8\";\r\n///////////////////////////////////////////\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    display: \"flex\",\r\n    borderRadius: 0,\r\n    width: \"100%\",\r\n  },\r\n  details: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  content: {\r\n    flex: \"1 0 auto\",\r\n  },\r\n  textContent: {\r\n    \"& span\": {\r\n      fontSize: \"1.25rem\",\r\n      color: \"black\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& p\": {\r\n      fontSize: \"1.15rem\",\r\n    },\r\n  },\r\n  sizeIcon: {\r\n    \"& svg\": {\r\n      fontSize: \"35px\",\r\n    },\r\n  },\r\n}));\r\nexport default function DotBay() {\r\n  const urltb = process.env.REACT_APP_API_URL + \"dotkiemtras/\";\r\n  const urlt = process.env.REACT_APP_API_URL + \"tuyens/\";\r\n  const urlanh = process.env.REACT_APP_API_URL + \"imagedkt/\";\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  // const [fetchedData, setFetchedData] = useState([]);\r\n  const fetchedData = useSelector((state) => state.dbauto);\r\n  const ListTuyen = useSelector((state) => state.listtuyen);\r\n  //const [ListTuyen, setListTuyen] = useState([]);\r\n  const [ListCot, setListCot] = useState([]);\r\n  const [Tuyen, setTuyen] = useState(null);\r\n  const [BatDau, setBatDau] = useState(null);\r\n  const [KetThuc, setKetThuc] = useState(null);\r\n  let count = 0;\r\n  let NodeIdx = 0;\r\n  let ListTuyenIT = [];\r\n  const Today = new Date();\r\n  const DateNow =\r\n    Today.getDate().toString().padStart(2, \"0\") +\r\n    \"/\" +\r\n    (Today.getMonth() + 1).toString().padStart(2, \"0\") +\r\n    \"/\" +\r\n    Today.getFullYear();\r\n\r\n  const sort = (str) => {\r\n    var mySubString = str.substring(\r\n      str.lastIndexOf(\"_\") + 1,\r\n      str.lastIndexOf(\".\")\r\n    );\r\n    return mySubString;\r\n  };\r\n\r\n  const GetImg = (str) => {\r\n    async function getDataListImg() {\r\n      dispatch({\r\n        type: actions.CURRENT_VIDEO_NORMAL,\r\n        data: [],\r\n      });\r\n      let urlg = urlanh + str + \"/\";\r\n      try {\r\n        let res = await axios({\r\n          url: urlg,\r\n          method: \"get\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        });\r\n        if (res.status === 200) {\r\n          //  console.log(res.status);\r\n        }\r\n        return res.data;\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    }\r\n\r\n    getDataListImg().then((res) => {\r\n      if (res) {\r\n        dispatch({\r\n          type: actions.CURRENT_VIDEO_NORMAL,\r\n          data:\r\n            res &&\r\n            res.sort(function (a, b) {\r\n              return sort(a.img_name) - sort(b.img_name);\r\n            }),\r\n        });\r\n        dispatch({\r\n          type: actions.ON_CURRENT_ID_VIDEO_CHANGE,\r\n          data: \"ALL\",\r\n        });\r\n        dispatch({\r\n          type: actions.MODE_SHOW_VIDEO,\r\n          data: \"Normal\",\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  async function getDataDB() {\r\n    try {\r\n      let res = await axios({\r\n        url: urltb,\r\n        method: \"get\",\r\n        timeout: 8000,\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      if (res.status === 200) {\r\n        //   console.log(res.status);\r\n      }\r\n      return res.data;\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    let componentMounted = true;\r\n    const fetchData = async () => {\r\n      if (componentMounted && !fetchedData && fetchedData?.length !== 0) {\r\n        getDataDB().then((res) => {\r\n          if (res) {\r\n            let data = res.sort(function (a, b) {\r\n              return new Date(b.ngay_kiem_tra) - new Date(a.ngay_kiem_tra);\r\n            });\r\n            dispatch({\r\n              type: actions.Db_Auto,\r\n              data,\r\n            });\r\n\r\n            GetImg(data[0].ma_dot_kiem_tra);\r\n          }\r\n        });\r\n      }\r\n    };\r\n    fetchData();\r\n    return () => {\r\n      componentMounted = false;\r\n    };\r\n  }, []);\r\n\r\n  async function getDatatuyen() {\r\n    try {\r\n      let res = await axios({\r\n        url: urlt,\r\n        method: \"get\",\r\n        timeout: 8000,\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      if (res.status === 200) {\r\n        // console.log(res.status);\r\n      }\r\n      return res.data;\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    let componentMounted = true;\r\n    const fetchData = async () => {\r\n      if (componentMounted && ListTuyen.length === 0) {\r\n        getDatatuyen().then((res) => {\r\n          if (res) {\r\n            dispatch({\r\n              type: actions.List_Tuyen,\r\n              data: res,\r\n            });\r\n          }\r\n        });\r\n      }\r\n    };\r\n    fetchData();\r\n    return () => {\r\n      componentMounted = false;\r\n    };\r\n  }, []);\r\n\r\n  const getdata = () => {\r\n    getDataDB().then((res) => {\r\n      if (res) {\r\n        dispatch({\r\n          type: actions.Db_Auto,\r\n          data: res.sort(function (a, b) {\r\n            return new Date(b.ngay_kiem_tra) - new Date(a.ngay_kiem_tra);\r\n          }),\r\n        });\r\n      }\r\n    });\r\n    getDatatuyen().then((res) => {\r\n      if (res) {\r\n        dispatch({\r\n          type: actions.List_Tuyen,\r\n          data: res,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let componentMounted = true;\r\n    const fetchData = async () => {\r\n      if (componentMounted && fetchedData && fetchedData.length !== 0) {\r\n        GetImg(fetchedData[0].ma_dot_kiem_tra);\r\n      }\r\n    };\r\n    fetchData();\r\n\r\n    return () => {\r\n      componentMounted = false;\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let componentMounted = true;\r\n    const fetchData = async () => {\r\n      if (componentMounted && fetchedData && fetchedData.length !== 0) {\r\n        GetImg(fetchedData[0].ma_dot_kiem_tra);\r\n      }\r\n    };\r\n    fetchData();\r\n\r\n    return () => {\r\n      componentMounted = false;\r\n    };\r\n  }, [fetchedData]);\r\n\r\n  useEffect(() => {\r\n    //if (Tuyen === null) {\r\n    setBatDau(null);\r\n    setKetThuc(null);\r\n    //}\r\n  }, [Tuyen]);\r\n\r\n  const onChange = (event, setFunction) => {\r\n    event.preventDefault();\r\n    const target = event.target;\r\n    const value = target.value;\r\n    setFunction(value);\r\n  };\r\n\r\n  const Resset_Cot = () => {\r\n    setBatDau(null);\r\n    setKetThuc(null);\r\n    dispatch({ type: actions.ON_CURRENT_LIST_COT_CHANGE, data: [] });\r\n  };\r\n\r\n  const onChangeSelectTuyen = (event) => {\r\n    onChange(event, setTuyen);\r\n    Resset_Cot();\r\n    switch (event.target.value) {\r\n      case \"T1\":\r\n        setListCot(T1);\r\n        break;\r\n      case \"T2\":\r\n        setListCot(T2);\r\n        break;\r\n      case \"T3\":\r\n        setListCot(T3);\r\n        break;\r\n      case \"T4\":\r\n        setListCot(T4);\r\n        break;\r\n      case \"T5\":\r\n        setListCot(T5);\r\n        break;\r\n      case \"T6\":\r\n        setListCot(T6);\r\n        break;\r\n      case \"T7\":\r\n        setListCot(T7);\r\n        break;\r\n      case \"T8\":\r\n        setListCot(T8);\r\n        break;\r\n      default:\r\n        setListCot(null);\r\n        break;\r\n    }\r\n  };\r\n\r\n  const onChangeSelectBatDau = (event) => {\r\n    onChange(event, setBatDau);\r\n  };\r\n\r\n  const onChangeSelectKetThuc = (event) => {\r\n    onChange(event, setKetThuc);\r\n  };\r\n\r\n  const renderCard = (post) => {\r\n    var newdate = FormatDate(post.ngay_kiem_tra);\r\n    return (\r\n      <TreeItem\r\n        onLabelClick={() => {\r\n          /* GetImg(post.ma_dot_kiem_tra)*/\r\n        }}\r\n        label={\r\n          <Card className={classes.root} key={post.ma_dot_kiem_tra}>\r\n            <div className={classes.details}>\r\n              <CardContent className={classes.content}>\r\n                <Typography component=\"h5\" variant=\"h5\">\r\n                  Đợt kiểm tra: {/*post.ma_dot_kiem_tra*/}\r\n                  {post.ma_tuyen}_{post.bat_dau_doan}-{post.ket_thuc_doan}_\r\n                  {post.ngay_kiem_tra}\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                  Bắt đầu: {post.bat_dau_doan} - Kết thúc: {post.ket_thuc_doan}{\" \"}\r\n                  <br />\r\n                  Ngày kiểm tra: {newdate} {\" | \"} Mã tuyến: {post.ma_tuyen}\r\n                  <br />\r\n                  <FullDialogBC data={post} />\r\n                  {/*<BtnPrint post={post} />*/}\r\n                  <DialogPopupNormal id={post.ma_dot_kiem_tra} post={post} />\r\n                </Typography>\r\n              </CardContent>\r\n            </div>\r\n          </Card>\r\n        }\r\n      />\r\n    );\r\n  };\r\n\r\n  const RenderListItem = (list, tuyen) => {\r\n    return (\r\n      <>\r\n        {list\r\n          ? BatDau === null && KetThuc === null\r\n            ? list.map((post) => post.ma_tuyen === tuyen && renderCard(post))\r\n            : BatDau !== null && KetThuc !== null\r\n            ? list.map(\r\n                (post) =>\r\n                  post.ma_tuyen === tuyen &&\r\n                  post.bat_dau_doan === BatDau.split(\"|\")[0] &&\r\n                  post.ket_thuc_doan === KetThuc.split(\"|\")[0] &&\r\n                  renderCard(post)\r\n              )\r\n            : BatDau !== null && KetThuc === null\r\n            ? list.map(\r\n                (post) =>\r\n                  post.ma_tuyen === tuyen &&\r\n                  post.bat_dau_doan === BatDau.split(\"|\")[0] &&\r\n                  renderCard(post)\r\n              )\r\n            : BatDau === null && KetThuc !== null\r\n            ? list.map(\r\n                (post) =>\r\n                  post.ma_tuyen === tuyen &&\r\n                  post.ket_thuc_doan === KetThuc.split(\"|\")[0] &&\r\n                  renderCard(post)\r\n              )\r\n            : \"\"\r\n          : \"\"}\r\n      </>\r\n    );\r\n  };\r\n\r\n  const render = (post, Posts) => {\r\n    const ru = ListTuyenIT.indexOf(post.ma_tuyen);\r\n    if (ru === -1) ListTuyenIT.push(post.ma_tuyen);\r\n    NodeIdx++;\r\n    var newdate = FormatDate(post.ngay_kiem_tra);\r\n    var TenTuyen = getTextDisplay(post.ma_tuyen, ListTuyen);\r\n    return (\r\n      <>\r\n        {ru === -1 ? (\r\n          <TreeItem\r\n            nodeId={NodeIdx}\r\n            onLabelClick={() => {\r\n              /* GetImg(post.ma_dot_kiem_tra)*/\r\n            }}\r\n            label={\r\n              <List\r\n                component=\"nav\"\r\n                style={{ borderBottom: \"1px solid #f1f1f1\" }}\r\n              >\r\n                <ListItem\r\n                  style={{\r\n                    width: \"80%\",\r\n                    display: \"inline-block\",\r\n                  }}\r\n                >\r\n                  <ListItemText\r\n                    className={classes.textContent}\r\n                    primary={TenTuyen}\r\n                    secondary={newdate}\r\n                  />\r\n                </ListItem>\r\n                {DateNow === newdate && (\r\n                  <FiberNewIcon style={{ color: \"red\" }} />\r\n                )}\r\n              </List>\r\n            }\r\n          >\r\n            {RenderListItem(Posts, post.ma_tuyen)}\r\n          </TreeItem>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div id=\"dotbay\" style={{ height: \"100%\", overflowY: \"scroll\" }}>\r\n      <div\r\n        style={{\r\n          margin: \"10px\",\r\n          display: \"flex\",\r\n          flexWrap: \"wrap\",\r\n          justifyContent: \"flex-start\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <FormControl\r\n          variant={\"outlined\"}\r\n          style={{\r\n            alignSelf: \"center\",\r\n            minWidth: \"25%\",\r\n            marginLeft: 10,\r\n          }}\r\n        >\r\n          <InputLabel id=\"demo-simple-select-outlined-label\">\r\n            Chọn Tuyến\r\n          </InputLabel>\r\n          <Select\r\n            width=\"100%\"\r\n            className={classes.select}\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            label={\"Chọn Tuyến\"}\r\n            value={Tuyen}\r\n            style={{ height: 40 }}\r\n            onChange={onChangeSelectTuyen}\r\n          >\r\n            <MenuItem value={null}>Trống</MenuItem>\r\n            {ListTuyen ? (\r\n              ListTuyen.map((item, index) => (\r\n                <MenuItem key={index} value={item.ma_tuyen}>\r\n                  {/*item.tt_tuyen*/}\r\n                  {item.ten_tuyen}\r\n                </MenuItem>\r\n              ))\r\n            ) : (\r\n              <Loading />\r\n            )}\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl\r\n          variant={\"outlined\"}\r\n          style={{\r\n            alignSelf: \"center\",\r\n            minWidth: \"25%\",\r\n            marginLeft: 10,\r\n          }}\r\n        >\r\n          <InputLabel id=\"demo-simple-select-outlined-label\">\r\n            Chọn ĐBD\r\n          </InputLabel>\r\n          <Select\r\n            width=\"100%\"\r\n            className={classes.select}\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            label={\"Chọn ĐBD\"}\r\n            value={BatDau}\r\n            style={{ height: 40 }}\r\n            onChange={onChangeSelectBatDau}\r\n          >\r\n            <MenuItem value={null}>Trống</MenuItem>\r\n            {ListCot ? (\r\n              ListCot.map((item, index) => (\r\n                <MenuItem\r\n                  key={index}\r\n                  value={item.cot + \"|\" + item.x + \",\" + item.y}\r\n                  disabled={\r\n                    item.cot + \"|\" + item.x + \",\" + item.y === KetThuc\r\n                      ? true\r\n                      : false\r\n                  }\r\n                >\r\n                  {item.cot}\r\n                </MenuItem>\r\n              ))\r\n            ) : (\r\n              <Loading />\r\n            )}\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl\r\n          variant={\"outlined\"}\r\n          style={{\r\n            alignSelf: \"center\",\r\n            minWidth: \"25%\",\r\n            marginLeft: 10,\r\n            marginRight: 10,\r\n          }}\r\n        >\r\n          <InputLabel id=\"demo-simple-select-outlined-label\">\r\n            Chọn ĐKT\r\n          </InputLabel>\r\n          <Select\r\n            width=\"100%\"\r\n            className={classes.select}\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            label={\"Chọn ĐKT\"}\r\n            value={KetThuc}\r\n            style={{ height: 40 }}\r\n            onChange={onChangeSelectKetThuc}\r\n          >\r\n            <MenuItem value={null}>Trống</MenuItem>\r\n            {ListCot ? (\r\n              ListCot.map((item, index) => (\r\n                <MenuItem\r\n                  key={index}\r\n                  value={item.cot + \"|\" + item.x + \",\" + item.y}\r\n                  disabled={\r\n                    item.cot + \"|\" + item.x + \",\" + item.y === BatDau\r\n                      ? true\r\n                      : false\r\n                  }\r\n                >\r\n                  {item.cot}\r\n                </MenuItem>\r\n              ))\r\n            ) : (\r\n              <Loading />\r\n            )}\r\n          </Select>\r\n        </FormControl>\r\n        <Button\r\n          onClick={() => getdata()}\r\n          component={\"C\"}\r\n          title=\"Làm mới dữ liệu\"\r\n        >\r\n          <CachedIcon />\r\n        </Button>\r\n      </div>\r\n\r\n      <TreeView\r\n        className={classes.sizeIcon}\r\n        defaultCollapseIcon={<ExpandMoreIcon />}\r\n        defaultExpandIcon={<ChevronRightIcon />}\r\n        defaultExpanded={[1]}\r\n      >\r\n        {fetchedData ? (\r\n          fetchedData.map((post, index) =>\r\n            Tuyen === null && BatDau === null && KetThuc === null ? (\r\n              render(post, fetchedData)\r\n            ) : Tuyen !== null &&\r\n              BatDau !== null &&\r\n              KetThuc !== null &&\r\n              Tuyen === post.ma_tuyen &&\r\n              BatDau.split(\"|\")[0] === post.bat_dau_doan &&\r\n              KetThuc.split(\"|\")[0] === post.ket_thuc_doan ? (\r\n              render(post, fetchedData)\r\n            ) : Tuyen !== null &&\r\n              BatDau !== null &&\r\n              KetThuc === null &&\r\n              Tuyen === post.ma_tuyen &&\r\n              BatDau.split(\"|\")[0] === post.bat_dau_doan ? (\r\n              render(post, fetchedData)\r\n            ) : Tuyen !== null &&\r\n              BatDau === null &&\r\n              KetThuc !== null &&\r\n              Tuyen === post.ma_tuyen &&\r\n              KetThuc.split(\"|\")[0] === post.ket_thuc_doan ? (\r\n              render(post, fetchedData)\r\n            ) : Tuyen !== null &&\r\n              BatDau === null &&\r\n              KetThuc === null &&\r\n              Tuyen === post.ma_tuyen ? (\r\n              render(post, fetchedData)\r\n            ) : (\r\n              <>\r\n                <div key={post._id} style={{ display: \"none\" }}>\r\n                  {(count = count + 1)}\r\n                </div>\r\n                {count === fetchedData.length ? (\r\n                  <p\r\n                    style={{\r\n                      top: \"50%\",\r\n                      left: \"50%\",\r\n                      transform: \"translate(-50%,-50%)\",\r\n                      position: \"absolute\",\r\n                    }}\r\n                  >\r\n                    Không có dữ liệu bạn cần tìm, vui lòng trở lại sau!\r\n                  </p>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </>\r\n            )\r\n          )\r\n        ) : (\r\n          <Loading />\r\n        )}\r\n      </TreeView>\r\n    </div>\r\n  );\r\n}\r\n","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\main\\Map.js",["660"],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\generalObject\\Map_Item.js",["661","662","663","664","665","666","667","668","669","670","671","672","673","674","675","676","677","678","679","680","681","682","683","684","685","686","687","688","689"],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\FullViewMap.js",["690","691","692","693"],"import React, { useState, useEffect, useContext } from \"react\";\r\n//import MainVideoT from \"./home/Video\";\r\nimport VideoWS from \"./nhapdulieu/VideoWS\";\r\nimport Map_Item from \"./generalObject/Map_Item\";\r\nimport * as actions from \"../redux/types\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { WSContext } from \"./main/contexts/WSContext\";\r\nimport Log from \"./generalObject/Log\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  FaCompass,\r\n  FaTemperatureHigh,\r\n  /* FaTemperatureLow,*/\r\n  FaWind,\r\n} from \"react-icons/fa\";\r\nimport { FiMapPin } from \"react-icons/fi\";\r\nimport { TiWeatherCloudy } from \"react-icons/ti\";\r\nimport { WiHumidity } from \"react-icons/wi\";\r\nimport { WeatherContext } from \"./main/contexts/WeatherContext\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport AlertTitle from \"@material-ui/lab/AlertTitle\";\r\nimport ListImg from \"./generalObject/ListImg\";\r\n\r\nexport default function FullViewMap() {\r\n  //-------------------------------------------------\r\n  // const ws = props.ws;\r\n\r\n  const { disconnect } = useContext(WSContext);\r\n\r\n  const dispatch = useDispatch();\r\n  const Toado = useSelector((state) => state.wstoado2);\r\n  const [Now, setNow] = useState(null);\r\n  const { weather } = useContext(WeatherContext);\r\n  const [open, setOpen] = useState(false);\r\n  const [ShowAlert, SetShowAlert] = useState(null);\r\n  const TuyenGS = useSelector((state) => state.tuyengs);\r\n  const Typewsdata = useSelector((state) => state.typewsdata);\r\n\r\n  const change = () => {\r\n    setOpen(false);\r\n    dispatch({\r\n      type: actions.MODE_SHOW_VIDEO,\r\n      data: \"Video\",\r\n    });\r\n    dispatch({\r\n      type: actions.TYPE_WS_DATA,\r\n      data: null,\r\n    });\r\n    disconnect();\r\n    dispatch({\r\n      type: actions.SHOW_INFO_ERROR,\r\n      data: null,\r\n    });\r\n  };\r\n\r\n  const sleep = (milliseconds) => {\r\n    return new Promise((resolve) => setTimeout(resolve, milliseconds));\r\n  };\r\n\r\n  async function RunImg(start) {\r\n    if (Toado)\r\n      for (let i = start; i < Toado.length; i++) {\r\n        setNow(Toado[i]);\r\n        await sleep(1000 / 3);\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setOpen(false);\r\n    RunImg(0);\r\n    for (let i = Toado.length - 1; i >= 0; i--) {\r\n      if (Toado[i].error && Toado[i].error.length !== 0) {\r\n        SetShowAlert(Toado[i]);\r\n        setOpen(true);\r\n        return;\r\n      }\r\n    }\r\n  }, [Toado]);\r\n\r\n  const temperatureConverter = (valNum) => {\r\n    // kelvin to c\r\n    valNum = parseFloat(valNum);\r\n    return parseFloat(valNum - 273).toFixed(2);\r\n  };\r\n\r\n  const windspeedConverter = (val) => {\r\n    return parseFloat(val * 3.6).toFixed(2);\r\n  };\r\n\r\n  const setdataerror = (data) => {\r\n    dispatch({\r\n      type: actions.SHOW_INFO_ERROR,\r\n      data: data,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"fixed\",\r\n        top: 0,\r\n        left: 0,\r\n        height: \"100vh\",\r\n        width: \"100vw\",\r\n      }}\r\n    >\r\n      <div\r\n        style={\r\n          Typewsdata !== \"IMG\"\r\n            ? {\r\n                height: \"100vh\",\r\n                width: \"30vw\",\r\n                background: \"white\",\r\n              }\r\n            : { height: \"100vh\", width: \"50vw\", background: \"white\" }\r\n        }\r\n      >\r\n        <div\r\n          style={\r\n            Typewsdata !== \"IMG\"\r\n              ? {\r\n                  width: \"30vw\",\r\n                  height: \"45vh\",\r\n                  background: \"black\",\r\n                  overflow: \"auto\",\r\n                }\r\n              : {\r\n                  width: \"50vw\",\r\n                  height: \"45vh\",\r\n                  background: \"black\",\r\n                  overflow: \"auto\",\r\n                }\r\n          }\r\n        >\r\n          <VideoWS />\r\n        </div>\r\n        {Typewsdata !== \"IMG\" ? <Log /> : <ListImg />}\r\n      </div>\r\n      <div\r\n        style={\r\n          Typewsdata !== \"IMG\"\r\n            ? {\r\n                position: \"fixed\",\r\n                top: 0,\r\n                right: 0,\r\n                height: \"100vh\",\r\n                width: \"70vw\",\r\n                background: \"grey\",\r\n              }\r\n            : {\r\n                position: \"fixed\",\r\n                top: 0,\r\n                right: 0,\r\n                height: \"100vh\",\r\n                width: \"50vw\",\r\n                background: \"grey\",\r\n              }\r\n        }\r\n      >\r\n        <Collapse in={open} onClick={() => setdataerror(ShowAlert)}>\r\n          <Alert\r\n            action={\r\n              <IconButton\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                size=\"small\"\r\n                onClick={() => {\r\n                  setOpen(false);\r\n                }}\r\n                component={\"C\"}\r\n              >\r\n                <CloseIcon fontSize=\"inherit\" />\r\n              </IconButton>\r\n            }\r\n            variant=\"outlined\"\r\n            severity=\"error\"\r\n            style={{\r\n              width: 400,\r\n              position: \"fixed\",\r\n              right: 60,\r\n              top: 5,\r\n              zIndex: 9999,\r\n              background: \"white\",\r\n              borderWidth: 5,\r\n            }}\r\n          >\r\n            {ShowAlert ? (\r\n              <Box\r\n                style={{\r\n                  color: \"black\",\r\n                  width: 300,\r\n                  wordWrap: \"break-word\",\r\n                  fontFamily: \"-webkit-body\",\r\n                }}\r\n              >\r\n                <AlertTitle\r\n                  style={{ color: \"red\", fontFamily: \"-webkit-body\" }}\r\n                >\r\n                  Bất thường:\r\n                </AlertTitle>\r\n                {ShowAlert.error.map((value, idx) => {\r\n                  return ShowAlert.error.length < idx ? (\r\n                    <b key={idx} style={{ color: \"red\" }}>\r\n                      {value.error_label},{\" \"}\r\n                    </b>\r\n                  ) : (\r\n                    <b key={idx} style={{ color: \"red\" }}>\r\n                      {value.error_label}{\" \"}\r\n                    </b>\r\n                  );\r\n                })}{\" \"}\r\n              </Box>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </Alert>\r\n        </Collapse>\r\n        <Map_Item />\r\n        <div\r\n          style={{ position: \"fixed\", top: 0 /*left: \"30vw\"*/ }}\r\n          title=\"Trở lại\"\r\n        >\r\n          <Button\r\n            onClick={() => change()}\r\n            component={\"C\"}\r\n            style={{\r\n              background: \"#f1f1f1\",\r\n              borderRadius: \"0px 5px 5px 0px\",\r\n              boxShadow:\r\n                \"rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px\",\r\n            }}\r\n          >\r\n            <ArrowBackIcon style={{ fill: \"#1976d2\" }} />\r\n          </Button>\r\n        </div>\r\n        <div\r\n          style={{\r\n            position: \"fixed\",\r\n            bottom: 40,\r\n            //left: \"30vw\",\r\n            background: \"white\",\r\n            padding: 10,\r\n            borderRadius: \"0px 5px 5px 0px\",\r\n            background: \"#3c4043c7\",\r\n            color: \"white\",\r\n            boxShadow:\r\n              \"rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px\",\r\n            fontFamily: \"-webkit-body\",\r\n          }}\r\n        >\r\n          <FiMapPin />{\" \"}\r\n          <span>\r\n            Tuyến giám sát: <b>{TuyenGS && TuyenGS}</b>\r\n          </span>\r\n        </div>\r\n        <div\r\n          style={{\r\n            position: \"fixed\",\r\n            bottom: 0,\r\n            //left: \"30vw\",\r\n            background: \"white\",\r\n            padding: 10,\r\n            borderRadius: \"0px 5px 5px 0px\",\r\n            background: \"#3c4043c7\",\r\n            color: \"white\",\r\n            boxShadow:\r\n              \"rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px\",\r\n            fontFamily: \"-webkit-body\",\r\n          }}\r\n        >\r\n          <FaCompass />{\" \"}\r\n          <span>\r\n            Vị trí hiện tại:{\" \"}\r\n            <b>\r\n              {Now ? Now.latitude : 0}, {Now ? Now.longtitude : 0}\r\n            </b>\r\n          </span>\r\n        </div>\r\n        <div\r\n          style={{\r\n            position: \"fixed\",\r\n            bottom: 20,\r\n            right: 60,\r\n            background: \"#3c4043c7\",\r\n            padding: 10,\r\n            borderRadius: 15,\r\n            color: \"white\",\r\n            boxShadow:\r\n              \"rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px\",\r\n            fontFamily: \"-webkit-body\",\r\n          }}\r\n        >\r\n          <WiHumidity style={{ width: 25 }} />{\" \"}\r\n          <span>Độ ẩm: {weather.main ? weather.main.humidity : 0} %</span>{\" \"}\r\n          <br />\r\n          {weather.weather ? (\r\n            <img\r\n              id=\"wicon\"\r\n              src={`http://openweathermap.org/img/w/${weather.weather[0].icon}.png`}\r\n              style={{ width: 25, objectFit: \"cover\" }}\r\n              alt=\"\"\r\n            />\r\n          ) : (\r\n            <TiWeatherCloudy />\r\n          )}{\" \"}\r\n          <span>\r\n            Thời tiết: {weather.weather ? weather.weather[0].description : \"\"}\r\n          </span>\r\n          <br />\r\n          <FaTemperatureHigh style={{ width: 25 }} />{\" \"}\r\n          <span>\r\n            Nhiệt độ:{\" \"}\r\n            {weather.main ? temperatureConverter(weather.main.temp) : 0} ℃\r\n          </span>{\" \"}\r\n          <br />\r\n          <FaWind style={{ width: 25 }} />{\" \"}\r\n          <span>\r\n            Gió: {weather.wind ? windspeedConverter(weather.wind.speed) : 0}{\" \"}\r\n            km/h\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\nhapdulieu\\nhapdulieu.js",["694","695","696","697","698","699","700","701","702","703"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../redux/types\";\r\nimport { FormControl, InputLabel, MenuItem, Select } from \"@material-ui/core\";\r\nimport Loading from \"../generalObject/Loading\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CachedIcon from \"@material-ui/icons/Cached\";\r\nimport FullDialogBC from \"../generalObject/DialogBC\";\r\nimport TreeView from \"@material-ui/lab/TreeView\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport TreeItem from \"@material-ui/lab/TreeItem\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { getTextDisplay } from \"../../util/GetTenTuyen\";\r\nimport { FormatDate } from \"../../util/formatDate\";\r\nimport DialogSavePopup from \"../generalObject/VideoSaveDialog/Dialog_Save_Popup\";\r\nimport DialogPopup from \"../generalObject/VideoDialog/Dialog_Popup\";\r\nimport DialogPopupImage from \"../generalObject/VideoDialog/Dialog_Popup_Image\";\r\nimport DialogSavePopup2 from \"../generalObject/Dialog_Save_Popup 2\";\r\nimport DialogImageShow2 from \"../generalObject/slideshow-gallery/DialogImageShow2\";\r\nimport DialogVideoShow from \"../generalObject/slideshow-gallery/DialogVideoShow\";\r\n//import FiberNewIcon from \"@material-ui/icons/FiberNew\";\r\n// data\r\n/*\r\nimport { T1 } from \"../../util/toado/T1\";\r\nimport { T2 } from \"../../util/toado/T2\";\r\nimport { T3 } from \"../../util/toado/T3\";\r\nimport { T4 } from \"../../util/toado/T4\";\r\nimport { T5 } from \"../../util/toado/T5\";\r\nimport { T6 } from \"../../util/toado/T6\";\r\nimport { T7 } from \"../../util/toado/T7\";\r\nimport { T8 } from \"../../util/toado/T8\";\r\n*/\r\nimport TodayIcon from \"../../asset/Icon.svg\";\r\n///////////////////////////////////////////\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    display: \"flex\",\r\n    borderRadius: 0,\r\n    width: \"100%\",\r\n    marginTop: 2,\r\n  },\r\n  details: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  content: {\r\n    flex: \"1 0 auto\",\r\n  },\r\n  textContent: {\r\n    \"& span\": {\r\n      fontSize: \"1.25rem\",\r\n      color: \"black\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& p\": {\r\n      fontSize: \"1.15rem\",\r\n    },\r\n  },\r\n  sizeIcon: {\r\n    \"& svg\": {\r\n      fontSize: \"35px\",\r\n    },\r\n  },\r\n}));\r\nexport default function DotBay() {\r\n  const urltb = process.env.REACT_APP_API_URL + \"dotkiemtraimports\";\r\n  const urlt = process.env.REACT_APP_API_URL + \"getalltuyens\";\r\n  const urllistvideo = process.env.REACT_APP_API_URL + \"getvideodetectimport\";\r\n  const urllistanh = process.env.REACT_APP_API_URL + \"getimagesdetectimport\";\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  //const [ListCot, setListCot] = useState([]);\r\n  const [Tuyen, setTuyen] = useState(null);\r\n  const [BatDau, setBatDau] = useState(null);\r\n  const [KetThuc, setKetThuc] = useState(null);\r\n  const ModeShowVideo = useSelector((state) => state.modeshowvideo);\r\n  const CurrentVideo = useSelector((state) => state.currentVideo);\r\n  const fetchedData = useSelector((state) => state.dbtc);\r\n  const ListTuyen = useSelector((state) => state.listtuyen);\r\n  const urlvt = `${process.env.REACT_APP_API_URL}getallvitribytuyens?${\r\n    Tuyen ? \"&ma_tuyen=\" + Tuyen : \"&none=0\"\r\n  }`;\r\n  const [ListVTT, setListVTT] = useState([]);\r\n  let count = 0;\r\n  let NodeIdx = 0;\r\n  let ListTuyenIT = [];\r\n  const Today = new Date();\r\n  const DateNow =\r\n    Today.getDate().toString().padStart(2, \"0\") +\r\n    \"/\" +\r\n    (Today.getMonth() + 1).toString().padStart(2, \"0\") +\r\n    \"/\" +\r\n    Today.getFullYear();\r\n\r\n  async function getDataDB() {\r\n    try {\r\n      let res = await axios({\r\n        url: urltb,\r\n        method: \"get\",\r\n        timeout: 8000,\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      return res.data;\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    let componentMounted = true;\r\n    const fetchData = async () => {\r\n      if (componentMounted && !fetchedData) {\r\n        getDataDB().then((res) => {\r\n          if (res) {\r\n            dispatch({\r\n              type: actions.Db_Tc,\r\n              data: res.sort(function (a, b) {\r\n                return new Date(b.ngay_kiem_tra) - new Date(a.ngay_kiem_tra);\r\n              }),\r\n            });\r\n          }\r\n        });\r\n      }\r\n    };\r\n    fetchData();\r\n    return () => {\r\n      componentMounted = false;\r\n    };\r\n  }, []);\r\n\r\n  async function getDatatuyen() {\r\n    try {\r\n      let res = await axios({\r\n        url: urlt,\r\n        method: \"get\",\r\n        timeout: 8000,\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      if (res.status === 200) {\r\n        //console.log(res.status);\r\n      }\r\n      return res.data;\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    let componentMounted = true;\r\n    const fetchData = async () => {\r\n      if (componentMounted && ListTuyen.length === 0) {\r\n        getDatatuyen().then((res) => {\r\n          if (res) {\r\n            dispatch({\r\n              type: actions.List_Tuyen,\r\n              data: res,\r\n            });\r\n          }\r\n        });\r\n      }\r\n    };\r\n    fetchData();\r\n    return () => {\r\n      componentMounted = false;\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    async function getDatavtt() {\r\n      try {\r\n        let res = await axios({\r\n          url: urlvt,\r\n          method: \"get\",\r\n          timeout: 8000,\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        });\r\n        if (res.status === 200) {\r\n          //  console.log(res.status);\r\n        }\r\n        return res.data;\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    }\r\n\r\n    getDatavtt().then((res) => setListVTT(res));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    async function getDatavtt() {\r\n      try {\r\n        let res = await axios({\r\n          url: urlvt,\r\n          method: \"get\",\r\n          timeout: 8000,\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        });\r\n        if (res.status === 200) {\r\n          //  console.log(res.status);\r\n        }\r\n        return res.data;\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    }\r\n\r\n    getDatavtt().then((res) => setListVTT(res));\r\n  }, [Tuyen]);\r\n\r\n  const getdata = () => {\r\n    getDataDB().then((res) => {\r\n      if (res) {\r\n        dispatch({\r\n          type: actions.Db_Tc,\r\n          data: res.sort(function (a, b) {\r\n            return new Date(b.ngay_kiem_tra) - new Date(a.ngay_kiem_tra);\r\n          }),\r\n        });\r\n      }\r\n    });\r\n    getDatatuyen().then((res) => {\r\n      if (res) {\r\n        dispatch({\r\n          type: actions.List_Tuyen,\r\n          data: res,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  const GetListIMG = (id) => {\r\n    async function getDataListImg(id) {\r\n      let urlg = urllistanh + id;\r\n      try {\r\n        let res = await axios({\r\n          url: urlg,\r\n          method: \"get\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        });\r\n        if (res.status === 200) {\r\n          //   console.log(res.status);\r\n        }\r\n        return res.data;\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    }\r\n\r\n    getDataListImg(id).then((res) => {\r\n      if (res) {\r\n        // console.log(res);\r\n        let temparr = [];\r\n        res &&\r\n          undefined !== res &&\r\n          res.length !== 0 &&\r\n          Object.keys(res) &&\r\n          undefined !== Object.keys(res) &&\r\n          Object.keys(res).length !== 0 &&\r\n          Object.keys(res).map((key, index) => {\r\n            let tempobj = new Object();\r\n            tempobj.name = key;\r\n            tempobj.img = res[key];\r\n            temparr.push(tempobj);\r\n          });\r\n        dispatch({\r\n          type: actions.AllSlideShowData,\r\n          data: temparr,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  const GetListVideo = (id) => {\r\n    async function getDataListImg(id) {\r\n      let urlg = urllistvideo + id;\r\n      try {\r\n        let res = await axios({\r\n          url: urlg,\r\n          method: \"get\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        });\r\n        if (res.status === 200) {\r\n          //   console.log(res.status);\r\n        }\r\n        return res.data;\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    }\r\n\r\n    getDataListImg(id).then((res) => {\r\n      if (res) {\r\n        //console.log(res);\r\n        if (Object.keys(res).length !== 0) {\r\n          dispatch({\r\n            type: actions.CURRENT_VIDEO,\r\n            data: res,\r\n          });\r\n\r\n          dispatch({\r\n            type: actions.MODE_SHOW_VIDEO,\r\n            data: \"Video\",\r\n          });\r\n        } else {\r\n          GetListIMG(id);\r\n\r\n          dispatch({\r\n            type: actions.MODE_SHOW_VIDEO,\r\n            data: \"SlideShow\",\r\n          });\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let componentMounted = true;\r\n    if (\r\n      ModeShowVideo !== \"LIVE\" &&\r\n      componentMounted &&\r\n      fetchedData &&\r\n      fetchedData.length !== 0\r\n    ) {\r\n      GetListVideo(fetchedData[0].ma_dot_kiem_tra);\r\n    }\r\n    return () => {\r\n      componentMounted = false;\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let componentMounted = true;\r\n    if (componentMounted && fetchedData && fetchedData.length !== 0) {\r\n      GetListVideo(fetchedData[0].ma_dot_kiem_tra);\r\n    }\r\n    return () => {\r\n      componentMounted = false;\r\n    };\r\n  }, [fetchedData]);\r\n\r\n  useEffect(() => {\r\n    let componentMounted = true;\r\n\r\n    //  if (ModeShowVideo !== \"LIVE\") {\r\n    const fetchData = async () => {\r\n      if (componentMounted) {\r\n        dispatch({\r\n          type: actions.MODE_SHOW_VIDEO,\r\n          data: \"Video\",\r\n        });\r\n        Object.keys(CurrentVideo).map((key, index) => {\r\n          if (index === 0) {\r\n            dispatch({\r\n              type: actions.ON_CURRENT_ID_VIDEO_CHANGE,\r\n              data: CurrentVideo[key],\r\n            });\r\n          }\r\n        });\r\n      }\r\n    };\r\n    fetchData();\r\n    //  }\r\n    return () => {\r\n      componentMounted = false;\r\n    };\r\n  }, [CurrentVideo]);\r\n\r\n  useEffect(() => {\r\n    //if (Tuyen === null) {\r\n    setBatDau(null);\r\n    setKetThuc(null);\r\n    //}\r\n  }, [Tuyen]);\r\n\r\n  const onChange = (event, setFunction) => {\r\n    event.preventDefault();\r\n    const target = event.target;\r\n    const value = target.value;\r\n    setFunction(value);\r\n  };\r\n\r\n  const Resset_Cot = () => {\r\n    setBatDau(null);\r\n    setKetThuc(null);\r\n    dispatch({ type: actions.ON_CURRENT_LIST_COT_CHANGE, data: [] });\r\n  };\r\n\r\n  const onChangeSelectTuyen = (event) => {\r\n    onChange(event, setTuyen);\r\n    Resset_Cot();\r\n    /*switch (event.target.value) {\r\n      case \"T1\":\r\n        setListCot(T1);\r\n        break;\r\n      case \"T2\":\r\n        setListCot(T2);\r\n        break;\r\n      case \"T3\":\r\n        setListCot(T3);\r\n        break;\r\n      case \"T4\":\r\n        setListCot(T4);\r\n        break;\r\n      case \"T5\":\r\n        setListCot(T5);\r\n        break;\r\n      case \"T6\":\r\n        setListCot(T6);\r\n        break;\r\n      case \"T7\":\r\n        setListCot(T7);\r\n        break;\r\n      case \"T8\":\r\n        setListCot(T8);\r\n        break;\r\n      default:\r\n        setListCot(T1);\r\n        break;\r\n    }*/\r\n  };\r\n\r\n  const onChangeSelectBatDau = (event) => {\r\n    onChange(event, setBatDau);\r\n  };\r\n\r\n  const onChangeSelectKetThuc = (event) => {\r\n    onChange(event, setKetThuc);\r\n  };\r\n\r\n  const renderCard = (post) => {\r\n    var newdate = FormatDate(post.ngay_kiem_tra);\r\n    return (\r\n      <TreeItem\r\n        onLabelClick={() => {\r\n          /*GetListVideo(post.ma_dot_kiem_tra)*/\r\n        }}\r\n        label={\r\n          <Card\r\n            className={classes.root}\r\n            key={post.ma_dot_kiem_tra}\r\n            style={\r\n              DateNow === newdate\r\n                ? { border: \"2px solid red\" }\r\n                : { border: \"2px solid #f1f1f1\" }\r\n            }\r\n          >\r\n            <div className={classes.details}>\r\n              <CardContent className={classes.content}>\r\n                <Typography component=\"h5\" variant=\"h5\">\r\n                  Đợt kiểm tra:\r\n                  {post.ma_tuyen}_{post.bat_dau_doan}-{post.ket_thuc_doan}_\r\n                  {post.ngay_kiem_tra}\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                  Bắt đầu: {post.bat_dau_doan} - Kết thúc: {post.ket_thuc_doan}{\" \"}\r\n                  <br />\r\n                  Ngày kiểm tra: {newdate} {\" | \"} Mã tuyến: {post.ma_tuyen}\r\n                  <br />\r\n                  <FullDialogBC data={post} />\r\n                  <DialogPopup\r\n                    id={post.ma_dot_kiem_tra}\r\n                    post={post}\r\n                    mode={\"Video\"}\r\n                  />\r\n                  <DialogPopupImage\r\n                    id={post.ma_dot_kiem_tra}\r\n                    post={post}\r\n                    info={`${getTextDisplay(post.ma_tuyen, ListTuyen)} ( \r\n                    ${post.bat_dau_doan}\r\n                    -\r\n                    ${post.ket_thuc_doan} )`}\r\n                  />\r\n                  <DialogSavePopup2 post={post} />\r\n                </Typography>\r\n              </CardContent>\r\n            </div>\r\n          </Card>\r\n        }\r\n      />\r\n    );\r\n  };\r\n\r\n  const RenderListItem = (list, tuyen) => {\r\n    return (\r\n      <>\r\n        {list\r\n          ? BatDau === null && KetThuc === null\r\n            ? list.map((post) => post.ma_tuyen === tuyen && renderCard(post))\r\n            : BatDau !== null && KetThuc !== null\r\n            ? list.map(\r\n                (post) =>\r\n                  post.ma_tuyen === tuyen &&\r\n                  post.bat_dau_doan === BatDau.split(\"|\")[0] &&\r\n                  post.ket_thuc_doan === KetThuc.split(\"|\")[0] &&\r\n                  renderCard(post)\r\n              )\r\n            : BatDau !== null && KetThuc === null\r\n            ? list.map(\r\n                (post) =>\r\n                  post.ma_tuyen === tuyen &&\r\n                  post.bat_dau_doan === BatDau.split(\"|\")[0] &&\r\n                  renderCard(post)\r\n              )\r\n            : BatDau === null && KetThuc !== null\r\n            ? list.map(\r\n                (post) =>\r\n                  post.ma_tuyen === tuyen &&\r\n                  post.ket_thuc_doan === KetThuc.split(\"|\")[0] &&\r\n                  renderCard(post)\r\n              )\r\n            : \"\"\r\n          : \"\"}\r\n      </>\r\n    );\r\n  };\r\n\r\n  const render = (post, Posts) => {\r\n    const ru = ListTuyenIT.indexOf(post.ma_tuyen);\r\n    if (ru === -1) ListTuyenIT.push(post.ma_tuyen);\r\n    NodeIdx++;\r\n    var newdate = FormatDate(post.ngay_kiem_tra);\r\n    var TenTuyen = getTextDisplay(post.ma_tuyen, ListTuyen);\r\n    return (\r\n      <>\r\n        {ru === -1 ? (\r\n          <TreeItem\r\n            nodeId={NodeIdx}\r\n            onLabelClick={() => {\r\n              /* GetListVideo(post.ma_dot_kiem_tra) */\r\n            }}\r\n            style={{ marginBottom: 5 }}\r\n            label={\r\n              <>\r\n                <List\r\n                  component=\"nav\"\r\n                  style={\r\n                    DateNow === newdate\r\n                      ? { border: \"5px solid red\", borderRadius: 5 }\r\n                      : { border: \"5px solid #f1f1f1\", borderRadius: 5 }\r\n                  }\r\n                >\r\n                  <ListItem\r\n                    style={{\r\n                      width: \"80%\",\r\n                      display: \"inline-block\",\r\n                    }}\r\n                  >\r\n                    <ListItemText\r\n                      className={classes.textContent}\r\n                      primary={TenTuyen}\r\n                      secondary={newdate}\r\n                    />\r\n                  </ListItem>\r\n                  {DateNow === newdate && (\r\n                    <img\r\n                      src={TodayIcon}\r\n                      alt=\"\"\r\n                      style={{\r\n                        width: \"50px\",\r\n                        top: 0,\r\n                        float: \"right\",\r\n                        marginRight: 5,\r\n                        borderRadius: 5,\r\n                      }}\r\n                    />\r\n                  )}\r\n                </List>\r\n              </>\r\n            }\r\n          >\r\n            {RenderListItem(Posts, post.ma_tuyen)}\r\n          </TreeItem>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div id=\"dotbay\" style={{ height: \"100%\", overflowY: \"scroll\" }}>\r\n      <div\r\n        style={{\r\n          margin: \"10px\",\r\n          display: \"flex\",\r\n          flexWrap: \"wrap\",\r\n          justifyContent: \"flex-start\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <FormControl\r\n          variant={\"outlined\"}\r\n          style={{\r\n            alignSelf: \"center\",\r\n            minWidth: \"25%\",\r\n            marginLeft: 10,\r\n          }}\r\n        >\r\n          <InputLabel id=\"demo-simple-select-outlined-label\">\r\n            Chọn Tuyến\r\n          </InputLabel>\r\n          <Select\r\n            width=\"100%\"\r\n            className={classes.select}\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            label={\"Chọn Tuyến\"}\r\n            value={Tuyen}\r\n            style={{ height: 40 }}\r\n            onChange={onChangeSelectTuyen}\r\n          >\r\n            <MenuItem value={null}>Trống</MenuItem>\r\n            {ListTuyen ? (\r\n              ListTuyen.map((item, index) => (\r\n                <MenuItem key={index} value={item.ma_tuyen}>\r\n                  {/*item.tt_tuyen*/}\r\n                  {item.ten_tuyen}\r\n                </MenuItem>\r\n              ))\r\n            ) : (\r\n              <Loading />\r\n            )}\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl\r\n          variant={\"outlined\"}\r\n          style={{\r\n            alignSelf: \"center\",\r\n            minWidth: \"19%\",\r\n            marginLeft: 10,\r\n          }}\r\n        >\r\n          <InputLabel id=\"demo-simple-select-outlined-label\">\r\n            Chọn ĐBĐ\r\n          </InputLabel>\r\n          <Select\r\n            width=\"100%\"\r\n            className={classes.select}\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            label={\"Chọn ĐBĐ\"}\r\n            value={BatDau}\r\n            style={{ height: 40 }}\r\n            onChange={onChangeSelectBatDau}\r\n          >\r\n            <MenuItem value={null}>Trống</MenuItem>\r\n            {ListVTT ? (\r\n              ListVTT.map((item, index) => (\r\n                <MenuItem key={index} value={item.ma_vi_tri}>\r\n                  {item.ten_vi_tri}\r\n                </MenuItem>\r\n              ))\r\n            ) : (\r\n              <Loading />\r\n            )}\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl\r\n          variant={\"outlined\"}\r\n          style={{\r\n            alignSelf: \"center\",\r\n            minWidth: \"19%\",\r\n            marginLeft: 10,\r\n            marginRight: 10,\r\n          }}\r\n        >\r\n          <InputLabel id=\"demo-simple-select-outlined-label\">\r\n            Chọn ĐKT\r\n          </InputLabel>\r\n          <Select\r\n            width=\"100%\"\r\n            className={classes.select}\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            label={\"Chọn ĐKT\"}\r\n            value={KetThuc}\r\n            style={{ height: 40 }}\r\n            onChange={onChangeSelectKetThuc}\r\n          >\r\n            <MenuItem value={null}>Trống</MenuItem>\r\n            {ListVTT ? (\r\n              ListVTT.map((item, index) => (\r\n                <MenuItem key={index} value={item.ma_vi_tri}>\r\n                  {item.ten_vi_tri}\r\n                </MenuItem>\r\n              ))\r\n            ) : (\r\n              <Loading />\r\n            )}\r\n          </Select>\r\n        </FormControl>\r\n        <DialogSavePopup reload={getdata} />\r\n        <Button\r\n          onClick={() => getdata()}\r\n          component={\"C\"}\r\n          title=\"Làm mới dữ liệu\"\r\n        >\r\n          <CachedIcon />\r\n        </Button>\r\n      </div>\r\n\r\n      <TreeView\r\n        className={classes.sizeIcon}\r\n        defaultCollapseIcon={<ExpandMoreIcon />}\r\n        defaultExpandIcon={<ChevronRightIcon />}\r\n        defaultExpanded={[1]}\r\n      >\r\n        {fetchedData ? (\r\n          fetchedData.map((post, index) =>\r\n            Tuyen === null && BatDau === null && KetThuc === null ? (\r\n              render(post, fetchedData)\r\n            ) : Tuyen !== null &&\r\n              BatDau !== null &&\r\n              KetThuc !== null &&\r\n              Tuyen === post.ma_tuyen &&\r\n              BatDau.split(\"|\")[0] === post.bat_dau_doan &&\r\n              KetThuc.split(\"|\")[0] === post.ket_thuc_doan ? (\r\n              render(post, fetchedData)\r\n            ) : Tuyen !== null &&\r\n              BatDau !== null &&\r\n              KetThuc === null &&\r\n              Tuyen === post.ma_tuyen &&\r\n              BatDau.split(\"|\")[0] === post.bat_dau_doan ? (\r\n              render(post, fetchedData)\r\n            ) : Tuyen !== null &&\r\n              BatDau === null &&\r\n              KetThuc !== null &&\r\n              Tuyen === post.ma_tuyen &&\r\n              KetThuc.split(\"|\")[0] === post.ket_thuc_doan ? (\r\n              render(post, fetchedData)\r\n            ) : Tuyen !== null &&\r\n              BatDau === null &&\r\n              KetThuc === null &&\r\n              Tuyen === post.ma_tuyen ? (\r\n              render(post, fetchedData)\r\n            ) : (\r\n              <>\r\n                <div key={post._id} style={{ display: \"none\" }}>\r\n                  {(count = count + 1)}\r\n                </div>\r\n                {count === fetchedData.length ? (\r\n                  <p\r\n                    style={{\r\n                      top: \"50%\",\r\n                      left: \"50%\",\r\n                      transform: \"translate(-50%,-50%)\",\r\n                      position: \"absolute\",\r\n                    }}\r\n                  >\r\n                    Không có dữ liệu bạn cần tìm, vui lòng trở lại sau!\r\n                  </p>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </>\r\n            )\r\n          )\r\n        ) : (\r\n          <Loading />\r\n        )}\r\n      </TreeView>\r\n      <DialogImageShow2 hidden={true} />\r\n      <DialogVideoShow />\r\n    </div>\r\n  );\r\n}\r\n","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\generalObject\\DialogBC.js",["704"],"import React, { useState, useRef } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\nimport BC from \"./BC\";\r\nimport BtnPrint from \"./BtnPrint\";\r\nimport XacThuc from \"./xacthucbc\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { FormControl, InputLabel, MenuItem, Select } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n  btnhover: {\r\n    border: \"2px solid white\",\r\n    \"&:hover\": {\r\n      background: \"#a5c2f0\",\r\n      border: \"2px solid rgb(25, 118, 210)\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function FullDialogBC(props) {\r\n  const classes = useStyles();\r\n  const post = props.data;\r\n  const [open, setOpen] = useState(false);\r\n  ///\r\n  const [open2, setOpen2] = useState(false);\r\n  const [obj1, setObj1] = useState({\r\n    name: \"KS. Nguyễn Duy Anh\",\r\n    chucdanh: \"\",\r\n    battho: \"5/7\",\r\n    batat: \"3/5\",\r\n  });\r\n  const [obj2, setObj2] = useState({\r\n    name: \"KS. Nguyễn Đức Hùng\",\r\n    chucdanh: \"\",\r\n    battho: \"7/7\",\r\n    batat: \"4/5\",\r\n  });\r\n  const [obj3, setObj3] = useState({\r\n    name: \"KS. Nguyễn Hữu Minh\",\r\n    chucdanh: \"\",\r\n    battho: \"5/7\",\r\n    batat: \"3/5\",\r\n  });\r\n  const [obj4, setObj4] = useState({\r\n    name: \"KS. Hoàng Văn Sơn\",\r\n    chucdanh: \"\",\r\n    battho: \"6/7\",\r\n    batat: \"5/5\",\r\n  });\r\n\r\n  ///\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  ////\r\n  const handleClickOpen2 = () => {\r\n    setOpen2(true);\r\n  };\r\n\r\n  const handleClose2 = () => {\r\n    setOpen2(false);\r\n  };\r\n  ////\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        component={\"C\"}\r\n        onClick={handleClickOpen}\r\n        className={classes.btnhover}\r\n      >\r\n        Xuất Báo Cáo <DescriptionIcon />\r\n      </Button>\r\n      <Dialog\r\n        fullScreen\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Chi tiết của {/*post.ma_dot_kiem_tra*/}\r\n              {post.ma_tuyen}_{post.bat_dau_doan}-{post.ket_thuc_doan}_\r\n              {post.ngay_kiem_tra}\r\n            </Typography>\r\n            <Button\r\n              component={\"C\"}\r\n              onClick={handleClickOpen2}\r\n              style={{ color: \"white\", marginRight: \"50px\" }}\r\n            >\r\n              Nhập danh sách kiểm tra\r\n            </Button>\r\n            <BtnPrint post={post} />\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n              aria-label=\"close\"\r\n              component={\"C\"}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Box style={{ height: \"88%\" }} display=\"flex\" p={0}>\r\n          <Box\r\n            style={{\r\n              height: \"100%\",\r\n              overflowY: \"scroll\",\r\n              overflowX: \"hidden\",\r\n              width: \"fit-content\",\r\n            }}\r\n            p={0}\r\n          >\r\n            <BC data={post} obj1={obj1} obj2={obj2} obj3={obj3} obj4={obj4} />\r\n          </Box>\r\n          <Box style={{ height: \"100%\", overflow: \"hidden\" }} p={0} flex=\"1\">\r\n            <XacThuc />\r\n          </Box>\r\n        </Box>\r\n      </Dialog>\r\n      {/**/}\r\n      <Dialog\r\n        open={open2}\r\n        onClose={handleClose2}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Danh sách kiểm tra\r\n            </Typography>\r\n            {/*<Button\r\n              onClick={handleClose2}\r\n              component={\"C\"}\r\n              style={{color:'white'}}\r\n            >\r\n              Lưu Danh Sách\r\n            </Button>  */}\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={handleClose2}\r\n              aria-label=\"close\"\r\n              component={\"C\"}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Box display=\"flex\" p={0}>\r\n          <div>\r\n            <TextField\r\n              id=\"standard-basic\"\r\n              label=\"STT\"\r\n              value=\"1\"\r\n              style={{ margin: \"10px\", width: \"25px\" }}\r\n              disabled\r\n            />\r\n            <TextField\r\n              id=\"standard-basic\"\r\n              label=\"STT\"\r\n              value=\"2\"\r\n              style={{ margin: \"10px\", width: \"25px\" }}\r\n              disabled\r\n            />\r\n            <TextField\r\n              id=\"standard-basic\"\r\n              label=\"STT\"\r\n              value=\"3\"\r\n              style={{ margin: \"10px\", width: \"25px\" }}\r\n              disabled\r\n            />\r\n            <TextField\r\n              id=\"standard-basic\"\r\n              label=\"STT\"\r\n              value=\"4\"\r\n              style={{ margin: \"10px\", width: \"25px\" }}\r\n              disabled\r\n            />\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              id=\"standard-basic\"\r\n              label=\"Họ Và Tên\"\r\n              value={obj1.name}\r\n              onChange={(e) => {\r\n                const value = e.target.value;\r\n                setObj1({ ...obj1, name: value });\r\n              }}\r\n              style={{ margin: \"10px\", width: \"200px\" }}\r\n            />\r\n            <TextField\r\n              id=\"standard-basic\"\r\n              label=\"Họ Và Tên\"\r\n              value={obj2.name}\r\n              onChange={(e) => {\r\n                const value = e.target.value;\r\n                setObj2({ ...obj2, name: value });\r\n              }}\r\n              style={{ margin: \"10px\", width: \"200px\" }}\r\n            />\r\n            <TextField\r\n              id=\"standard-basic\"\r\n              label=\"Họ Và Tên\"\r\n              value={obj3.name}\r\n              onChange={(e) => {\r\n                const value = e.target.value;\r\n                setObj3({ ...obj3, name: value });\r\n              }}\r\n              style={{ margin: \"10px\", width: \"200px\" }}\r\n            />\r\n            <TextField\r\n              id=\"standard-basic\"\r\n              label=\"Họ Và Tên\"\r\n              value={obj4.name}\r\n              onChange={(e) => {\r\n                const value = e.target.value;\r\n                setObj4({ ...obj4, name: value });\r\n              }}\r\n              style={{ margin: \"10px\", width: \"200px\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              id=\"standard-basic\"\r\n              label=\"Chức Danh\"\r\n              value={obj1.chucdanh}\r\n              onChange={(e) => {\r\n                const value = e.target.value;\r\n                setObj1({ ...obj1, chucdanh: value });\r\n              }}\r\n              style={{ margin: \"10px\" }}\r\n            />\r\n            <TextField\r\n              id=\"standard-basic\"\r\n              label=\"Chức Danh\"\r\n              value={obj2.chucdanh}\r\n              onChange={(e) => {\r\n                const value = e.target.value;\r\n                setObj2({ ...obj2, chucdanh: value });\r\n              }}\r\n              style={{ margin: \"10px\" }}\r\n            />\r\n            <TextField\r\n              id=\"standard-basic\"\r\n              label=\"Chức Danh\"\r\n              value={obj3.chucdanh}\r\n              onChange={(e) => {\r\n                const value = e.target.value;\r\n                setObj3({ ...obj3, chucdanh: value });\r\n              }}\r\n              style={{ margin: \"10px\" }}\r\n            />\r\n            <TextField\r\n              id=\"standard-basic\"\r\n              label=\"Chức Danh\"\r\n              value={obj4.chucdanh}\r\n              onChange={(e) => {\r\n                const value = e.target.value;\r\n                setObj4({ ...obj4, chucdanh: value });\r\n              }}\r\n              style={{ margin: \"10px\" }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <FormControl\r\n              style={{\r\n                width: \"64px\",\r\n                margin: \"10px\",\r\n                height: \"48px\",\r\n              }}\r\n            >\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                {\"Bậc Thợ\"}\r\n              </InputLabel>\r\n              <Select\r\n                width=\"100%\"\r\n                className={classes.select}\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                label={\"Bậc Thợ\"}\r\n                value={obj1.battho}\r\n                style={{ height: 40 }}\r\n                onChange={(e) => {\r\n                  const value = e.target.value;\r\n                  setObj1({ ...obj1, battho: value });\r\n                }}\r\n              >\r\n                <MenuItem value={null}>Trống</MenuItem>\r\n                <MenuItem value=\"1/7\">1/7</MenuItem>\r\n                <MenuItem value=\"2/7\">2/7</MenuItem>\r\n                <MenuItem value=\"3/7\">3/7</MenuItem>\r\n                <MenuItem value=\"4/7\">4/7</MenuItem>\r\n                <MenuItem value=\"5/7\">5/7</MenuItem>\r\n                <MenuItem value=\"6/7\">6/7</MenuItem>\r\n                <MenuItem value=\"7/7\">7/7</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <FormControl\r\n              style={{\r\n                width: \"64px\",\r\n                margin: \"10px\",\r\n                height: \"48px\",\r\n              }}\r\n            >\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                {\"Bậc Thợ\"}\r\n              </InputLabel>\r\n              <Select\r\n                width=\"100%\"\r\n                className={classes.select}\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                label={\"Bậc Thợ\"}\r\n                value={obj2.battho}\r\n                style={{ height: 40 }}\r\n                onChange={(e) => {\r\n                  const value = e.target.value;\r\n                  setObj2({ ...obj2, battho: value });\r\n                }}\r\n              >\r\n                <MenuItem value={null}>Trống</MenuItem>\r\n                <MenuItem value=\"1/7\">1/7</MenuItem>\r\n                <MenuItem value=\"2/7\">2/7</MenuItem>\r\n                <MenuItem value=\"3/7\">3/7</MenuItem>\r\n                <MenuItem value=\"4/7\">4/7</MenuItem>\r\n                <MenuItem value=\"5/7\">5/7</MenuItem>\r\n                <MenuItem value=\"6/7\">6/7</MenuItem>\r\n                <MenuItem value=\"7/7\">7/7</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <FormControl\r\n              style={{\r\n                width: \"64px\",\r\n                margin: \"10px\",\r\n                height: \"48px\",\r\n              }}\r\n            >\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                {\"Bậc Thợ\"}\r\n              </InputLabel>\r\n              <Select\r\n                width=\"100%\"\r\n                className={classes.select}\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                label={\"Bậc Thợ\"}\r\n                value={obj3.battho}\r\n                style={{ height: 40 }}\r\n                onChange={(e) => {\r\n                  const value = e.target.value;\r\n                  setObj3({ ...obj3, battho: value });\r\n                }}\r\n              >\r\n                <MenuItem value={null}>Trống</MenuItem>\r\n                <MenuItem value=\"1/7\">1/7</MenuItem>\r\n                <MenuItem value=\"2/7\">2/7</MenuItem>\r\n                <MenuItem value=\"3/7\">3/7</MenuItem>\r\n                <MenuItem value=\"4/7\">4/7</MenuItem>\r\n                <MenuItem value=\"5/7\">5/7</MenuItem>\r\n                <MenuItem value=\"6/7\">6/7</MenuItem>\r\n                <MenuItem value=\"7/7\">7/7</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <FormControl\r\n              style={{\r\n                width: \"64px\",\r\n                margin: \"10px\",\r\n                height: \"48px\",\r\n                marginBottom: 0,\r\n              }}\r\n            >\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                {\"Bậc Thợ\"}\r\n              </InputLabel>\r\n              <Select\r\n                width=\"100%\"\r\n                className={classes.select}\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                label={\"Bậc Thợ\"}\r\n                value={obj4.battho}\r\n                style={{ height: 40 }}\r\n                onChange={(e) => {\r\n                  const value = e.target.value;\r\n                  setObj4({ ...obj4, battho: value });\r\n                }}\r\n              >\r\n                <MenuItem value={null}>Trống</MenuItem>\r\n                <MenuItem value=\"1/7\">1/7</MenuItem>\r\n                <MenuItem value=\"2/7\">2/7</MenuItem>\r\n                <MenuItem value=\"3/7\">3/7</MenuItem>\r\n                <MenuItem value=\"4/7\">4/7</MenuItem>\r\n                <MenuItem value=\"5/7\">5/7</MenuItem>\r\n                <MenuItem value=\"6/7\">6/7</MenuItem>\r\n                <MenuItem value=\"7/7\">7/7</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n          <div>\r\n            <FormControl\r\n              style={{\r\n                width: \"64px\",\r\n                margin: \"10px\",\r\n                height: \"48px\",\r\n              }}\r\n            >\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                {\"Bậc AT\"}\r\n              </InputLabel>\r\n              <Select\r\n                width=\"100%\"\r\n                className={classes.select}\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                label={\"Bậc AT\"}\r\n                value={obj1.batat}\r\n                style={{ height: 40 }}\r\n                onChange={(e) => {\r\n                  const value = e.target.value;\r\n                  setObj1({ ...obj1, batat: value });\r\n                }}\r\n              >\r\n                <MenuItem value={null}>Trống</MenuItem>\r\n                <MenuItem value=\"1/5\">1/5</MenuItem>\r\n                <MenuItem value=\"2/5\">2/5</MenuItem>\r\n                <MenuItem value=\"3/5\">3/5</MenuItem>\r\n                <MenuItem value=\"4/5\">4/5</MenuItem>\r\n                <MenuItem value=\"5/5\">5/5</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <FormControl\r\n              style={{\r\n                width: \"64px\",\r\n                margin: \"10px\",\r\n                height: \"48px\",\r\n              }}\r\n            >\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                {\"Bậc AT\"}\r\n              </InputLabel>\r\n              <Select\r\n                width=\"100%\"\r\n                className={classes.select}\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                label={\"Bậc AT\"}\r\n                value={obj2.batat}\r\n                style={{ height: 40 }}\r\n                onChange={(e) => {\r\n                  const value = e.target.value;\r\n                  setObj2({ ...obj2, batat: value });\r\n                }}\r\n              >\r\n                <MenuItem value={null}>Trống</MenuItem>\r\n                <MenuItem value=\"1/5\">1/5</MenuItem>\r\n                <MenuItem value=\"2/5\">2/5</MenuItem>\r\n                <MenuItem value=\"3/5\">3/5</MenuItem>\r\n                <MenuItem value=\"4/5\">4/5</MenuItem>\r\n                <MenuItem value=\"5/5\">5/5</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <FormControl\r\n              style={{\r\n                width: \"64px\",\r\n                margin: \"10px\",\r\n                height: \"48px\",\r\n              }}\r\n            >\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                {\"Bậc AT\"}\r\n              </InputLabel>\r\n              <Select\r\n                width=\"100%\"\r\n                className={classes.select}\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                label={\"Bậc AT\"}\r\n                value={obj3.batat}\r\n                style={{ height: 40 }}\r\n                onChange={(e) => {\r\n                  const value = e.target.value;\r\n                  setObj3({ ...obj3, batat: value });\r\n                }}\r\n              >\r\n                <MenuItem value={null}>Trống</MenuItem>\r\n                <MenuItem value=\"1/5\">1/5</MenuItem>\r\n                <MenuItem value=\"2/5\">2/5</MenuItem>\r\n                <MenuItem value=\"3/5\">3/5</MenuItem>\r\n                <MenuItem value=\"4/5\">4/5</MenuItem>\r\n                <MenuItem value=\"5/5\">5/5</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <FormControl\r\n              style={{\r\n                width: \"64px\",\r\n                margin: \"10px\",\r\n                height: \"48px\",\r\n                marginBottom: 0,\r\n              }}\r\n            >\r\n              <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                {\"Bậc AT\"}\r\n              </InputLabel>\r\n              <Select\r\n                width=\"100%\"\r\n                className={classes.select}\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                label={\"Bậc AT\"}\r\n                value={obj4.batat}\r\n                style={{ height: 40 }}\r\n                onChange={(e) => {\r\n                  const value = e.target.value;\r\n                  setObj4({ ...obj4, batat: value });\r\n                }}\r\n              >\r\n                <MenuItem value={null}>Trống</MenuItem>\r\n                <MenuItem value=\"1/5\">1/5</MenuItem>\r\n                <MenuItem value=\"2/5\">2/5</MenuItem>\r\n                <MenuItem value=\"3/5\">3/5</MenuItem>\r\n                <MenuItem value=\"4/5\">4/5</MenuItem>\r\n                <MenuItem value=\"5/5\">5/5</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n        </Box>\r\n      </Dialog>\r\n      {/**/}\r\n    </>\r\n  );\r\n}\r\n","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\generalObject\\BtnPrint.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\util\\toado\\T8.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\util\\toado\\T7.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\util\\toado\\T6.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\util\\toado\\T2.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\generalObject\\slideshow-gallery\\SlideshowGallery.js",["705","706","707","708"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./slideshow-gallery.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../../redux/types\";\r\nimport { ChangerUrl } from \"../../../util/ChangeUrl\";\r\n\r\nconst SlideshowGallery = (props) => {\r\n  const [state, setState] = useState({ slideIndex: 0 });\r\n  const [containerElm, setcontainerElm] = useState(0);\r\n  const [containerBottomElm, setcontainerBottomElm] = useState(0);\r\n  const refcontainerElm = useRef(null);\r\n  const refcontainerBottomElm = useRef(null);\r\n  const ratioWHArray = props.ratio.split(\":\");\r\n  const ratioWH = ratioWHArray[0] / ratioWHArray[1];\r\n  const idx = useSelector((state) => state.slideIndex);\r\n  const type = props.type;\r\n\r\n  const TuyenGS = useSelector((state) => state.tuyengs);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const getNewSlideIndex = (step) => {\r\n    const slideIndex = state.slideIndex;\r\n    const numberSlide = props.input.length;\r\n\r\n    let newSlideIndex = slideIndex + step;\r\n\r\n    if (newSlideIndex >= numberSlide) newSlideIndex = 0;\r\n    else if (newSlideIndex < 0) newSlideIndex = numberSlide - 1;\r\n\r\n    return newSlideIndex;\r\n  };\r\n\r\n  const backward = () => {\r\n    setState({\r\n      slideIndex: getNewSlideIndex(-1),\r\n    });\r\n  };\r\n\r\n  const forward = () => {\r\n    setState({\r\n      slideIndex: getNewSlideIndex(1),\r\n    });\r\n  };\r\n\r\n  const setSlideIndex = (index) => {\r\n    setState({\r\n      slideIndex: index,\r\n    });\r\n\r\n    dispatch({\r\n      type: actions.SlideIndex,\r\n      data: parseInt(index),\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (idx && typeof idx === \"number\" && idx >= 0 && idx <= props.input.length)\r\n      setSlideIndex(idx);\r\n    else setSlideIndex(0);\r\n  }, [idx]);\r\n\r\n  const updateDimensions = () => {\r\n    if (refcontainerElm.current)\r\n      setcontainerElm(refcontainerElm.current.offsetWidth / ratioWH);\r\n    if (refcontainerBottomElm.current)\r\n      setcontainerBottomElm(\r\n        refcontainerBottomElm.current.offsetWidth / props.input.length / ratioWH\r\n      );\r\n  };\r\n\r\n  const runAutomatic = () => {\r\n    setState({\r\n      slideIndex: getNewSlideIndex(1),\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    updateDimensions();\r\n    window.addEventListener(\"resize\", updateDimensions);\r\n    let automaticInterval;\r\n    if (props.mode === \"automatic\") {\r\n      const timeout = props.timeout || 5000;\r\n\r\n      automaticInterval = setInterval(\r\n        () => runAutomatic(),\r\n        Number.parseInt(timeout)\r\n      );\r\n    }\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", updateDimensions);\r\n      if (automaticInterval) clearInterval(automaticInterval);\r\n    };\r\n  }, [props.input]);\r\n\r\n  useEffect(() => {\r\n    updateDimensions();\r\n    window.addEventListener(\"resize\", updateDimensions);\r\n    let automaticInterval;\r\n    if (props.mode === \"automatic\") {\r\n      const timeout = props.timeout || 5000;\r\n\r\n      automaticInterval = setInterval(\r\n        () => runAutomatic(),\r\n        Number.parseInt(timeout)\r\n      );\r\n    }\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", updateDimensions);\r\n      if (automaticInterval) clearInterval(automaticInterval);\r\n    };\r\n  }, []);\r\n\r\n  const imgclick = () => {\r\n    /*    dispatch({\r\n      type: actions.DIALOG_IMAGE,\r\n      data: { open: true, img: props.input[state.slideIndex].value },\r\n    });*/\r\n    /*  dispatch({\r\n      type: actions.SHOW_INFO_ERROR,\r\n      data: props.input[state.slideIndex],\r\n    });*/\r\n\r\n    if (type === \"base64\") {\r\n      dispatch({\r\n        type: actions.SlideImgShow,\r\n        data: { open: true, index: state.slideIndex, info: TuyenGS },\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: actions.SlideImgShow,\r\n        data: { open2: true, index: state.slideIndex, info: TuyenGS },\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"lp-slideshow-gallery\">\r\n      <div\r\n        className=\"container\"\r\n        style={{ height: containerElm }}\r\n        ref={refcontainerElm}\r\n      >\r\n        <div className=\"slide active\">\r\n          <div className=\"number-text\">\r\n            {`${state.slideIndex + 1} / ${props.input.length}`}\r\n          </div>\r\n          <img\r\n            onClick={() => imgclick()}\r\n            className=\"image\"\r\n            src={\r\n              type === \"base64\" && props.input\r\n                ? \"data:image/jpeg;base64,\" +\r\n                  props.input[state.slideIndex].value\r\n                : ChangerUrl(\r\n                    props.input[state.slideIndex] &&\r\n                      props.input[state.slideIndex].img\r\n                  )\r\n            }\r\n            alt=\"image\"\r\n          />\r\n        </div>\r\n\r\n        <span className=\"prev\" onClick={backward}>\r\n          ❮\r\n        </span>\r\n        <span className=\"next\" onClick={forward}>\r\n          ❯\r\n        </span>\r\n      </div>\r\n\r\n      {\r\n        <div\r\n          className=\"container-bottom\"\r\n          style={{ height: containerBottomElm }}\r\n          ref={refcontainerBottomElm}\r\n        >\r\n          {props.input.map((image, index) => {\r\n            return (\r\n              <img\r\n                key={index}\r\n                src={\r\n                  type === \"base64\"\r\n                    ? \"data:image/jpeg;base64,\" + image.value\r\n                    : ChangerUrl(image && image.img)\r\n                }\r\n                alt={index}\r\n                className={`image ${\r\n                  state.slideIndex === index ? \"active\" : \"\"\r\n                }`}\r\n                onClick={() => setSlideIndex(index)}\r\n                style={{\r\n                  width: `${(1 / props.input.length) * 100}%`,\r\n                  height: `100%`,\r\n                }}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n};\r\nexport default SlideshowGallery;\r\n","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\util\\toado\\T4.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\util\\toado\\T5.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\util\\toado\\T3.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\generalObject\\VideoDialog\\Dialog_Popup_Normal.js",["709","710","711","712","713"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\r\nimport ImageList from \"@material-ui/core/ImageList\";\r\nimport ImageListItem from \"@material-ui/core/ImageListItem\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../../redux/types\";\r\nimport VideoLibraryIcon from \"@material-ui/icons/VideoLibrary\";\r\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\r\nimport Loading from \"../Loading\";\r\n// data\r\nimport { T1 } from \"../../../util/toado/T1\";\r\nimport { T2 } from \"../../../util/toado/T2\";\r\nimport { T3 } from \"../../../util/toado/T3\";\r\nimport { T4 } from \"../../../util/toado/T4\";\r\nimport { T5 } from \"../../../util/toado/T5\";\r\nimport { T6 } from \"../../../util/toado/T6\";\r\nimport { T7 } from \"../../../util/toado/T7\";\r\nimport { T8 } from \"../../../util/toado/T8\";\r\n///////////////////////////////////////////\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n  imageList: {\r\n    width: \"50vw\",\r\n    height: \"90%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  lihover: {\r\n    wordBreak: \"break-word\",\r\n    fontFamily: \"-webkit-body\",\r\n    fontSize: \"1.1rem\",\r\n    boxshadow:\r\n      \"rgba(50, 50, 93, 0.25) 0px 2px 5px -1px, rgba(0, 0, 0, 0.3) 0px 1px 3px -1px;\",\r\n    border: \"solid 2px #f1f3f4\",\r\n    \"&:hover\": {\r\n      background: \"#a5c2f0\",\r\n      border: \"2px solid rgb(25, 118, 210)\",\r\n    },\r\n  },\r\n  btnhover: {\r\n    border: \"2px solid white\",\r\n    \"&:hover\": {\r\n      background: \"#a5c2f0\",\r\n      border: \"2px solid rgb(25, 118, 210)\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst DialogTitle = withStyles(useStyles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\" style={{ display: \"inline\" }}>\r\n        {children}\r\n      </Typography>\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          component={\"C\"}\r\n          className={classes.closeButton}\r\n          onClick={onClose}\r\n          style={{ float: \"right\" }}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nexport default function DialogPopupNormal(props) {\r\n  const urlanh = process.env.REACT_APP_API_URL + \"imagedkt/\";\r\n  const [ListCot, setListCot] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isError, setIsError] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n  const post = props.post;\r\n\r\n  const Resset_Cot = () => {\r\n    dispatch({ type: actions.ON_CURRENT_LIST_COT_CHANGE, data: [] });\r\n  };\r\n\r\n  const Change_List_Cot = (value) => {\r\n    Resset_Cot();\r\n    switch (value) {\r\n      case \"T1\":\r\n        setListCot(T1);\r\n        break;\r\n      case \"T2\":\r\n        setListCot(T2);\r\n        break;\r\n      case \"T3\":\r\n        setListCot(T3);\r\n        break;\r\n      case \"T4\":\r\n        setListCot(T4);\r\n        break;\r\n      case \"T5\":\r\n        setListCot(T5);\r\n        break;\r\n      case \"T6\":\r\n        setListCot(T6);\r\n        break;\r\n      case \"T7\":\r\n        setListCot(T7);\r\n        break;\r\n      case \"T8\":\r\n        setListCot(T8);\r\n        break;\r\n      default:\r\n        setListCot(T1);\r\n        break;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let componentMounted = true;\r\n    const fetchData = async () => {\r\n      if (componentMounted && open) {\r\n        Change_List_Cot(post.ma_tuyen);\r\n      }\r\n    };\r\n    fetchData();\r\n    return () => {\r\n      componentMounted = false;\r\n    };\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    let componentMounted = true;\r\n    const fetchData = async () => {\r\n      if (componentMounted && open) {\r\n        try {\r\n          var pluginArrayArg = new Array();\r\n          let BatDau = ListCot\r\n            ? ListCot.find((o) => o.cot === post.bat_dau_doan)\r\n            : null;\r\n          let KetThuc = ListCot\r\n            ? ListCot.find((o) => o.cot === post.ket_thuc_doan)\r\n            : null;\r\n          if (BatDau !== null) {\r\n            var jsonArg1 = new Object();\r\n            jsonArg1.cot = BatDau.cot;\r\n            jsonArg1.toa_do_vi_tri = BatDau.x + \",\" + BatDau.y;\r\n            pluginArrayArg.push(jsonArg1);\r\n          }\r\n          if (KetThuc !== null) {\r\n            var jsonArg2 = new Object();\r\n            jsonArg2.cot = KetThuc.cot;\r\n            jsonArg2.toa_do_vi_tri = KetThuc.x + \",\" + KetThuc.y;\r\n            pluginArrayArg.push(jsonArg2);\r\n          }\r\n          var jsonArray = JSON.parse(JSON.stringify(pluginArrayArg));\r\n          dispatch({\r\n            type: actions.ON_CURRENT_TUYEN_CHANGE,\r\n            data: post.ma_tuyen,\r\n          });\r\n          dispatch({\r\n            type: actions.ON_CURRENT_LIST_COT_CHANGE,\r\n            data: jsonArray,\r\n          });\r\n        } catch (e) {\r\n          //console.log(e);\r\n        }\r\n      }\r\n    };\r\n    fetchData();\r\n    return () => {\r\n      componentMounted = false;\r\n    };\r\n  }, [ListCot]);\r\n\r\n  const GetImg = () => {\r\n    async function getDataListImg() {\r\n      let urlg = urlanh + props.id + \"/\";\r\n      try {\r\n        setIsLoading(true);\r\n        setIsError(false);\r\n        dispatch({\r\n          type: actions.CURRENT_VIDEO_NORMAL,\r\n          data: [],\r\n        });\r\n        let res = await axios({\r\n          url: urlg,\r\n          method: \"get\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        });\r\n        if (res.status === 200) {\r\n          //   console.log(res.status);\r\n        }\r\n        return res.data;\r\n      } catch (err) {\r\n        console.error(err);\r\n        setIsError(true);\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n\r\n    getDataListImg().then((res) => {\r\n      if (res) {\r\n        //console.log(res);\r\n        dispatch({\r\n          type: actions.CURRENT_VIDEO_NORMAL,\r\n          data: res && res,\r\n        });\r\n        setIsLoading(false);\r\n      }\r\n    });\r\n  };\r\n\r\n  // ------------ Redux Start ------------\r\n  const currentVideoNormal = useSelector((state) => state.currentVideoNormal);\r\n\r\n  const dispatch = useDispatch();\r\n  // ------------ Redux End ------------\r\n  const classes = useStyles();\r\n\r\n  const handleClickOpen = () => {\r\n    GetImg();\r\n    dispatch({\r\n      type: actions.MODE_SHOW_VIDEO,\r\n      data: \"Normal\",\r\n    });\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const getid = (data) => {\r\n    var x = \"_\";\r\n    var y = \".\";\r\n    var id =\r\n      data.indexOf(x) >= 0 && data.indexOf(y) >= 0\r\n        ? data.substring(\r\n            data.indexOf(x) + x && undefined !== x && x.length,\r\n            data.indexOf(y)\r\n          )\r\n        : data;\r\n    return id;\r\n  };\r\n\r\n  const setIdVideo = (id) => {\r\n    dispatch({\r\n      type: actions.ON_CURRENT_ID_VIDEO_CHANGE,\r\n      data: id,\r\n    });\r\n    handleClose();\r\n  };\r\n\r\n  let ListVideo = [];\r\n\r\n  const renderListVideo = (item, index) => {\r\n    if (item) {\r\n      const id = getid(item.img_name);\r\n      const ru = ListVideo.indexOf(id);\r\n      if (ru === -1) ListVideo.push(id);\r\n      return (\r\n        <ImageListItem key={index} cols={1}>\r\n          <img\r\n            src={\"data:image/jpeg;base64,\" + item.img_data}\r\n            alt={item.img_name}\r\n            style={{\r\n              objectFit: \"cover\",\r\n            }}\r\n          />\r\n          <p\r\n            style={{\r\n              position: \"absolute\",\r\n              top: 15,\r\n              left: 15,\r\n              color: \"white\",\r\n              fontSize: \"25px\",\r\n            }}\r\n          >\r\n            {\"Video: \" + index}{\" \"}\r\n            <Button\r\n              component={\"C\"}\r\n              onClick={() => setIdVideo(getid(id))}\r\n              style={{\r\n                color: \"white\",\r\n              }}\r\n            >\r\n              <PlayCircleFilledIcon style={{ color: \"blue\", fontSize: 95 }} />\r\n            </Button>\r\n          </p>\r\n        </ImageListItem>\r\n      );\r\n    }\r\n  };\r\n\r\n  const rernder = () => {\r\n    try {\r\n      return (\r\n        <>\r\n          {currentVideoNormal && undefined !== currentVideoNormal ? (\r\n            <ImageList rowHeight={160} className={classes.imageList} cols={4}>\r\n              {currentVideoNormal.map((item, index) =>\r\n                renderListVideo(item, index)\r\n              )}\r\n            </ImageList>\r\n          ) : !isError ? (\r\n            \"Không có dữ liệu\"\r\n          ) : (\r\n            \"Lỗi khi thực hiện lấy dữ liệu\"\r\n          )}\r\n        </>\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        component={\"C\"}\r\n        onClick={() => handleClickOpen()}\r\n        className={classes.btnhover}\r\n      >\r\n        Xem video <VideoLibraryIcon style={{ color: \"black\" }} />\r\n      </Button>\r\n      <Dialog\r\n        onClose={handleClose}\r\n        maxWidth={false}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={open}\r\n      >\r\n        <DialogTitle\r\n          id=\"customized-dialog-title\"\r\n          atyle={{ color: \"black\" }}\r\n          onClose={handleClose}\r\n        >\r\n          Lựa chọn video hiện thị\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          {open && <>{isLoading ? <Loading /> : rernder()} </>}\r\n        </DialogContent>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\util\\toado\\T1.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\generalObject\\ListImg.js",["714","715","716","717","718","719"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport WarningIcon from \"@material-ui/icons/Warning\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport * as actions from \"../../redux/types\";\r\nimport { TransformComponent, TransformWrapper } from \"react-zoom-pan-pinch\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport UndoIcon from \"@material-ui/icons/Undo\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DialogImageShow3 from \"./slideshow-gallery/DialogImageShow3\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"&::-webkit-scrollbar\": {\r\n      width: 20,\r\n    },\r\n    \"&::-webkit-scrollbar-track\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n    \"&::-webkit-scrollbar-thumb\": {\r\n      backgroundColor: \"#1976d2\",\r\n      borderRadius: 20,\r\n      border: \"6px solid transparent\",\r\n      backgroundClip: \"content-box\",\r\n    },\r\n    \"&::-webkit-scrollbar-thumb:hover\": {\r\n      backgroundColor: \"rgb(17, 82, 147)\",\r\n    },\r\n  },\r\n  lihover: {\r\n    wordBreak: \"break-word\",\r\n    fontFamily: \"-webkit-body\",\r\n    fontSize: \"1.1rem\",\r\n    marginBottom: 5,\r\n    border: \"1px solid #d6dee1\",\r\n    padding: \"1rem\",\r\n    background: \"#fdfdfd\",\r\n    borderRadius: 10,\r\n    marginLeft: 5,\r\n    boxshadow:\r\n      \"rgba(50, 50, 93, 0.25) 0px 2px 5px -1px, rgba(0, 0, 0, 0.3) 0px 1px 3px -1px;\",\r\n    height: 80,\r\n    width: \"98%\",\r\n    whiteSpace: \"nowrap\",\r\n    overflow: \"hidden\",\r\n    textOverflow: \"ellipsis\",\r\n    // color: \"red\",\r\n    \"&:hover\": {\r\n      background: \"#a5c2f0\",\r\n      border: \"2px solid rgb(25, 118, 210)\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function ListImg() {\r\n  //-------------------------------------------------\r\n  const Toado = useSelector((state) => state.wstoado);\r\n  const InfoError = useSelector((state) => state.showinfoerror);\r\n  const TuyenGS = useSelector((state) => state.tuyengs);\r\n  const [Mode, setMode] = useState(0);\r\n  const messagesEndRef = useRef(null);\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  /*useEffect(() => {\r\n    if (InfoError && InfoError.value) {\r\n      setMode(1);\r\n    } else {\r\n      setMode(0);\r\n    }\r\n  }, [InfoError]);*/\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current &&\r\n      messagesEndRef.current.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"start\",\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      scrollToBottom();\r\n    }, 50);\r\n    let temparr = [];\r\n    Toado &&\r\n      Toado.map((key, index) => {\r\n        let tempobj = new Object();\r\n        tempobj.name = Toado[index].name;\r\n        tempobj.img = Toado[index].value;\r\n        temparr.push(tempobj);\r\n      });\r\n    dispatch({\r\n      type: actions.AllSlideShowData,\r\n      data: temparr,\r\n    });\r\n  }, [Toado]);\r\n\r\n  const SetInfo = (index, item) => {\r\n    dispatch({\r\n      type: actions.SlideIndex,\r\n      data: parseInt(index),\r\n    });\r\n\r\n    /* dispatch({\r\n      type: actions.SHOW_INFO_ERROR,\r\n      data: item,\r\n    });*/\r\n\r\n    dispatch({\r\n      type: actions.SlideImgShow,\r\n      data: { open: true, index, info: TuyenGS },\r\n    });\r\n  };\r\n\r\n  const Close = () => {\r\n    setMode(0);\r\n    dispatch({\r\n      type: actions.SHOW_INFO_ERROR,\r\n      data: null,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {Mode === 0 ? (\r\n        <>\r\n          <ul\r\n            id=\"img\"\r\n            className={classes.root}\r\n            style={{\r\n              color: \"black\",\r\n              height: \"55vh\",\r\n              maxHeight: \"55vh\",\r\n              overflow: \"scroll\",\r\n              overflowX: \"hidden\",\r\n              borderTop: \"solid 5px #1976d2\",\r\n              boxShadow:\r\n                \"inset 0px 11px 8px -10px #CCC, inset 0px -11px 8px -10px #CCC\",\r\n              background: \"#f0f2f5\",\r\n              paddingTop: 5,\r\n            }}\r\n          >\r\n            {Toado &&\r\n              Toado.length !== 0 &&\r\n              Toado.map((item, index) => {\r\n                return (\r\n                  <li\r\n                    className={classes.lihover}\r\n                    key={index}\r\n                    onClick={() => SetInfo(index, item)}\r\n                  >\r\n                    <img\r\n                      src={\r\n                        item &&\r\n                        item.value &&\r\n                        \"data:image/png;base64,\" + item.value\r\n                      }\r\n                      style={{\r\n                        width: \"50px\",\r\n                        height: \"50px\",\r\n                        objectFit: \"cover\",\r\n                      }}\r\n                    />{\" \"}\r\n                    <p style={{ color: \"black\", display: \"inline\" }}>\r\n                      {item.name}\r\n                    </p>\r\n                  </li>\r\n                );\r\n              })}\r\n            <li ref={messagesEndRef} />\r\n          </ul>\r\n          <DialogImageShow3 />\r\n        </>\r\n      ) : (\r\n        <div\r\n          style={{\r\n            color: \"black\",\r\n            height: \"55vh\",\r\n            maxHeight: \"55vh\",\r\n            boxShadow:\r\n              \"inset 0px 11px 8px -10px #CCC, inset 0px -11px 8px -10px #CCC\",\r\n            background: \"#f0f2f5\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              wordBreak: \"break-word\",\r\n              fontFamily: \"-webkit-body\",\r\n              fontSize: \"1.1rem\",\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              flexWrap: \"nowrap\",\r\n              alignContent: \"center\",\r\n              // justifyContent: \"center\",\r\n              // alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Button\r\n              onClick={() => Close()}\r\n              component={\"C\"}\r\n              style={{\r\n                background: \"#f1f1f1\",\r\n                borderRadius: \"0px 5px 5px 0px\",\r\n                boxShadow:\r\n                  \"rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px\",\r\n                marginRight: 5,\r\n              }}\r\n            >\r\n              <ArrowBackIcon style={{ fill: \"#1976d2\" }} />\r\n            </Button>\r\n            <b style={{ paddingRight: 5 }}>{InfoError && InfoError.name}</b>\r\n          </div>\r\n\r\n          <div\r\n            className={classes.root}\r\n            style={{\r\n              marginTop: 5,\r\n              overflow: \"auto\",\r\n              height: \"48vh\",\r\n              maxHeight: \"48vh\",\r\n              position: \"relative\",\r\n            }}\r\n          >\r\n            {InfoError && InfoError.value && (\r\n              <TransformWrapper defaultScale={1}>\r\n                {({ zoomIn, zoomOut, resetTransform, ...rest }) => (\r\n                  <React.Fragment>\r\n                    <center>\r\n                      <IconButton\r\n                        component={\"C\"}\r\n                        onClick={zoomIn}\r\n                        aria-label=\"delete\"\r\n                      >\r\n                        <AddIcon />\r\n                      </IconButton>\r\n                      <IconButton\r\n                        component={\"C\"}\r\n                        onClick={zoomOut}\r\n                        aria-label=\"delete\"\r\n                      >\r\n                        <RemoveIcon />\r\n                      </IconButton>\r\n                      <IconButton\r\n                        component={\"C\"}\r\n                        onClick={resetTransform}\r\n                        aria-label=\"delete\"\r\n                      >\r\n                        <UndoIcon />\r\n                      </IconButton>\r\n                    </center>\r\n                    <div className=\"box-img\">\r\n                      <TransformComponent>\r\n                        <img\r\n                          src={\r\n                            InfoError &&\r\n                            \"data:image/png;base64,\" + InfoError.value\r\n                          }\r\n                        />\r\n                      </TransformComponent>\r\n                    </div>\r\n                  </React.Fragment>\r\n                )}\r\n              </TransformWrapper>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\generalObject\\xacthucbc.js",["720","721","722","723"],"import React, { useState } from \"react\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport PhotoIcon from \"@material-ui/icons/Photo\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport { Button } from \"@material-ui/core\";\r\n//---------------------------------------------------\r\nimport Waiting from \"../generalObject/Waiting\";\r\nimport ImageList from \"@material-ui/core/ImageList\";\r\nimport ImageListItem from \"@material-ui/core/ImageListItem\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport itemData from \"../photoms/itemData\";\r\nimport WarningIcon from \"@material-ui/icons/Warning\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport { TransformComponent, TransformWrapper } from \"react-zoom-pan-pinch\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport UndoIcon from \"@material-ui/icons/Undo\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../redux/types\";\r\nimport { ChangerUrl } from \"../../util/ChangeUrl\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n  imageList: {\r\n    width: \"100%\",\r\n    //height: \"90%\",\r\n  },\r\n  fontSize: {\r\n    \"& span:last-child\": {\r\n      fontSize: 15,\r\n    },\r\n  },\r\n}));\r\n\r\nconst XacThuc = () => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = useState(\"none\");\r\n  const [view, setView] = useState(true);\r\n  const [img, setImg] = useState();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    // alert(value);\r\n    dispatch({ type: actions.Temp_value, data: value });\r\n  };\r\n\r\n  const handleClick = (item) => {\r\n    setView(!view);\r\n    setImg(item.img);\r\n    setValue(item.type);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box id=\"detail\" style={{ height: \"100%\" }} p={0}>\r\n        {view ? (\r\n          <Box\r\n            style={{\r\n              height: \"100%\",\r\n              width: \"100%\",\r\n              overflowY: \"scroll\",\r\n              objectFit: \"cover\",\r\n            }}\r\n            bgcolor=\"#ffffff\"\r\n            position=\"relative\"\r\n            p={0}\r\n          >\r\n            <>\r\n              <ImageList\r\n                rowHeight={160}\r\n                className={classes.imageList}\r\n                cols={4}\r\n                style={{ margin: 0 }}\r\n              >\r\n                {itemData.map((item, index) => (\r\n                  <ImageListItem\r\n                    key={index}\r\n                    cols={1}\r\n                    style={\r\n                      item.type !== \"none\"\r\n                        ? { border: \"1px solid red\" }\r\n                        : { border: \"1px solid green\" }\r\n                    }\r\n                    onClick={() => handleClick(item)}\r\n                  >\r\n                    <img\r\n                      src={ChangerUrl(item.img)}\r\n                      style={{\r\n                        height: \"85%\",\r\n                        width: \"100%\",\r\n                        marginBottom: \"2px\",\r\n                        top: 0,\r\n                        transform: \"translateY(0%)\",\r\n                        objectFit: \"cover\",\r\n                      }}\r\n                      id=\"main\"\r\n                    />\r\n                    <p>\r\n                      {item.type != \"none\" ? (\r\n                        <WarningIcon style={{ color: \"red\" }} />\r\n                      ) : (\r\n                        <CheckCircleIcon style={{ color: \"green\" }} />\r\n                      )}\r\n                      {item.type != \"none\" ? (\r\n                        <p\r\n                          style={{\r\n                            color: \"red\",\r\n                            width: \"fit-content\",\r\n                            display: \"inline-flex\",\r\n                            marginLeft: \"5px\",\r\n                            fontWeight: \"bold\",\r\n                          }}\r\n                        >\r\n                          {item.type}\r\n                        </p>\r\n                      ) : (\r\n                        <p\r\n                          style={{\r\n                            color: \"green\",\r\n                            width: \"fit-content\",\r\n                            display: \"inline-flex\",\r\n                            marginLeft: \"5px\",\r\n                            fontWeight: \"bold\",\r\n                          }}\r\n                        >\r\n                          {item.type}\r\n                        </p>\r\n                      )}\r\n                    </p>\r\n                  </ImageListItem>\r\n                ))}\r\n              </ImageList>\r\n            </>\r\n          </Box>\r\n        ) : (\r\n          <Box\r\n            style={{\r\n              height: \"100%\",\r\n              width: \"100%\",\r\n              overflowY: \"scroll\",\r\n              objectFit: \"cover\",\r\n            }}\r\n            bgcolor=\"#ffffff\"\r\n            position=\"relative\"\r\n            p={0}\r\n          >\r\n            {img ? (\r\n              <>\r\n                <Button\r\n                  style={{ float: \"right\" }}\r\n                  onClick={() => setView(!view)}\r\n                  component={\"C\"}\r\n                >\r\n                  Quay lại\r\n                </Button>\r\n                <p\r\n                  style={{\r\n                    color: \"black\",\r\n                    padding: \"10px\",\r\n                    paddingBottom: \"0px\",\r\n                    marginBottom: \"0px\",\r\n                  }}\r\n                >\r\n                  Thông tin chi tiết:\r\n                </p>\r\n                <center style={{ marginLeft: \"90px\", paddingBottom: \"5px\" }}>\r\n                  {/*<img src={img} style={{  height: \"300px\" , objectFit: 'cover'}} alt=\"\" />*/}\r\n                  <TransformWrapper\r\n                    defaultScale={1}\r\n                    defaultPositionX={200}\r\n                    defaultPositionY={100}\r\n                  >\r\n                    {({ zoomIn, zoomOut, resetTransform, ...rest }) => (\r\n                      <React.Fragment>\r\n                        <Box style={{ float: \"right\", width: \"40px\" }}>\r\n                          <IconButton\r\n                            component={\"C\"}\r\n                            onClick={zoomIn}\r\n                            aria-label=\"delete\"\r\n                          >\r\n                            <AddIcon />\r\n                          </IconButton>\r\n                          <IconButton\r\n                            component={\"C\"}\r\n                            onClick={zoomOut}\r\n                            aria-label=\"delete\"\r\n                          >\r\n                            <RemoveIcon />\r\n                          </IconButton>\r\n                          <IconButton\r\n                            component={\"C\"}\r\n                            onClick={resetTransform}\r\n                            aria-label=\"delete\"\r\n                          >\r\n                            <UndoIcon />\r\n                          </IconButton>\r\n                        </Box>\r\n                        <Box>\r\n                          <div className=\"box-img\">\r\n                            <TransformComponent>\r\n                              <img\r\n                                id=\"view_img\"\r\n                                src={ChangerUrl(img)}\r\n                                style={{ height: \"320px\", objectFit: \"cover\" }}\r\n                                alt=\"view_img\"\r\n                              />\r\n                            </TransformComponent>\r\n                          </div>\r\n                        </Box>\r\n                      </React.Fragment>\r\n                    )}\r\n                  </TransformWrapper>\r\n                </center>\r\n                <div\r\n                  style={{\r\n                    padding: \"10px\",\r\n                    color: \"black\",\r\n                    width: \"100%\",\r\n                    height: \"149px\",\r\n                    overflow: \"hidden\",\r\n                    borderTop: \"3px solid black\",\r\n                  }}\r\n                >\r\n                  <FormControl component=\"fieldset\" style={{ width: \"100%\" }}>\r\n                    <FormLabel component=\"legend\" style={{ color: \"black\" }}>\r\n                      Xác nhận lỗi:\r\n                      <Button component={\"C\"} onClick={handleUpdate}>\r\n                        Cập nhật\r\n                      </Button>\r\n                    </FormLabel>\r\n                    <div style={{ height: \"105px\", overflow: \"scroll\" }}>\r\n                      <RadioGroup\r\n                        aria-label=\"Lỗi\"\r\n                        name=\"error\"\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                      >\r\n                        <FormControlLabel\r\n                          className={classes.fontSize}\r\n                          value=\"none\"\r\n                          control={<Radio />}\r\n                          label=\"Bình thường\"\r\n                        />\r\n                        <FormControlLabel\r\n                          className={classes.fontSize}\r\n                          value=\"1\"\r\n                          control={<Radio />}\r\n                          label=\"Vật thể lạ mắc vào đường dây\"\r\n                        />\r\n                        <FormControlLabel\r\n                          className={classes.fontSize}\r\n                          value=\"2\"\r\n                          control={<Radio />}\r\n                          label=\"Dây dẫn bị tưa (đứt sợi)\"\r\n                        />\r\n                        <FormControlLabel\r\n                          className={classes.fontSize}\r\n                          value=\"3\"\r\n                          control={<Radio />}\r\n                          label=\"Quá nhiệt mối nối\"\r\n                        />\r\n                        <FormControlLabel\r\n                          className={classes.fontSize}\r\n                          value=\"4\"\r\n                          control={<Radio />}\r\n                          label=\"Trôi tạ chống rung\"\r\n                        />\r\n                        <FormControlLabel\r\n                          className={classes.fontSize}\r\n                          value=\"5\"\r\n                          control={<Radio />}\r\n                          label=\"Cách điện thủy tinh bị mất (vỡ) bát\"\r\n                        />\r\n                        <FormControlLabel\r\n                          className={classes.fontSize}\r\n                          value=\"6\"\r\n                          control={<Radio />}\r\n                          label=\"Cách điện silicon bị rách tán\"\r\n                        />\r\n                        <FormControlLabel\r\n                          className={classes.fontSize}\r\n                          value=\"7\"\r\n                          control={<Radio />}\r\n                          label=\"Cách điện bị bám vật lạ\"\r\n                        />\r\n                        <FormControlLabel\r\n                          className={classes.fontSize}\r\n                          value=\"8\"\r\n                          control={<Radio />}\r\n                          label=\"Tuột hãm dây trên chuỗi cách điện\"\r\n                        />\r\n                        <FormControlLabel\r\n                          className={classes.fontSize}\r\n                          value=\"9\"\r\n                          control={<Radio />}\r\n                          label=\"Cột điện bị bám vật lạ\"\r\n                        />\r\n                        <FormControlLabel\r\n                          className={classes.fontSize}\r\n                          value=\"10\"\r\n                          control={<Radio />}\r\n                          label=\" Cột điện bị han rỉ\"\r\n                        />\r\n                        <FormControlLabel\r\n                          className={classes.fontSize}\r\n                          value=\"11\"\r\n                          control={<Radio />}\r\n                          label=\"Móng cột bị nứt bê tông\"\r\n                        />\r\n                        <FormControlLabel\r\n                          className={classes.fontSize}\r\n                          value=\"12\"\r\n                          control={<Radio />}\r\n                          label=\"Sạt lở đất xung quanh móng cột\"\r\n                        />\r\n                      </RadioGroup>\r\n                    </div>\r\n                  </FormControl>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <Waiting\r\n                color=\"#abdbe3\"\r\n                icon={<PhotoIcon style={{ fontSize: \"100\" }} />}\r\n              />\r\n            )}\r\n          </Box>\r\n        )}\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default XacThuc;\r\n","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\generalObject\\BC.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\generalObject\\slideshow-gallery\\DialogImageShow3.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\generalObject\\slideshow-gallery\\DialogVideoShow.js",["724"],"import React, { useRef } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../../redux/types\";\r\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\r\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\r\nimport { ChangerUrl } from \"../../../util/ChangeUrl\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n  imageList: {\r\n    width: \"50vw\",\r\n    height: \"90%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  boximg: {\r\n    background: \"#f1f0f5\",\r\n  },\r\n  Iconlarge: {\r\n    \"& svg\": {\r\n      fontSize: 35,\r\n    },\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function DialogVideoShow() {\r\n  const classes = useStyles();\r\n  const resetTransformEl = useRef(null);\r\n  const SlideVideoShow = useSelector((state) => state.SlideVideoShow);\r\n  const CurrentVideo = useSelector((state) => state.currentVideo);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClose = () => {\r\n    dispatch({\r\n      type: actions.SlideVideoShow,\r\n      data: { open: false, index: 0 },\r\n    });\r\n  };\r\n\r\n  const Next = () => {\r\n    let next = parseInt(SlideVideoShow.index + 1);\r\n    if (next < Object.keys(CurrentVideo).length) {\r\n      dispatch({\r\n        type: actions.SlideVideoShow,\r\n        data: { open: true, index: next },\r\n      });\r\n    }\r\n  };\r\n\r\n  const Prev = () => {\r\n    let prev = parseInt(SlideVideoShow.index - 1);\r\n    if (prev >= 0) {\r\n      dispatch({\r\n        type: actions.SlideVideoShow,\r\n        data: { open: true, index: prev },\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        maxWidth=\"md\"\r\n        open={SlideVideoShow && SlideVideoShow.open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              {SlideVideoShow && SlideVideoShow.index + 1}/\r\n              {CurrentVideo && Object.keys(CurrentVideo).length}\r\n            </Typography>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n              aria-label=\"close\"\r\n              component={\"C\"}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </Toolbar>\r\n          <Box\r\n            display=\"flex\"\r\n            bgcolor=\"background.paper\"\r\n            style={{\r\n              flexWrap: \"wrap\",\r\n            }}\r\n          >\r\n            <Box\r\n              style={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"space-between\",\r\n                position: \"relative\",\r\n                borderBottom: \"solid 5px #1976d2\",\r\n              }}\r\n            >\r\n              <div>\r\n                {SlideVideoShow.index > 0 ? (\r\n                  <IconButton\r\n                    component={\"C\"}\r\n                    onClick={Prev}\r\n                    aria-label=\"prev\"\r\n                    className={classes.Iconlarge}\r\n                  >\r\n                    <NavigateBeforeIcon />\r\n                  </IconButton>\r\n                ) : (\r\n                  <IconButton\r\n                    component={\"C\"}\r\n                    aria-label=\"prev\"\r\n                    disabled={true}\r\n                    className={classes.Iconlarge}\r\n                  >\r\n                    <NavigateBeforeIcon />\r\n                  </IconButton>\r\n                )}\r\n              </div>\r\n              <div\r\n                style={{\r\n                  marginTop: \"10px\",\r\n                  marginBottom: \"10px\",\r\n                }}\r\n              >\r\n                <video\r\n                  style={{ width: \"100%\" }}\r\n                  controls\r\n                  autoPlay\r\n                  type=\"video/mp4\"\r\n                  src={ChangerUrl(\r\n                    CurrentVideo[\r\n                      Object.keys(CurrentVideo)[\r\n                        SlideVideoShow.index ? SlideVideoShow.index : 0\r\n                      ]\r\n                    ]\r\n                  )}\r\n                ></video>\r\n              </div>\r\n              <div>\r\n                {SlideVideoShow.index < Object.keys(CurrentVideo).length - 1 ? (\r\n                  <IconButton\r\n                    component={\"C\"}\r\n                    onClick={Next}\r\n                    aria-label=\"next\"\r\n                    className={classes.Iconlarge}\r\n                  >\r\n                    <NavigateNextIcon />\r\n                  </IconButton>\r\n                ) : (\r\n                  <IconButton\r\n                    component={\"C\"}\r\n                    aria-label=\"next\"\r\n                    disabled={true}\r\n                    className={classes.Iconlarge}\r\n                  >\r\n                    <NavigateNextIcon />\r\n                  </IconButton>\r\n                )}\r\n              </div>\r\n            </Box>\r\n          </Box>\r\n        </AppBar>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\generalObject\\slideshow-gallery\\DialogImageShow2.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\generalObject\\Dialog_Save_Popup 2.js",["725","726","727","728","729","730","731","732","733","734","735","736","737"],"import React, { useState, useEffect, useContext } from \"react\";\r\n//-----------------------------------------\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\r\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ImportExportIcon from \"@material-ui/icons/ImportExport\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\n//-----------------------------------------\r\n// data\r\nimport { T1 } from \"../../util/toado/T1\";\r\nimport { T2 } from \"../../util/toado/T2\";\r\nimport { T3 } from \"../../util/toado/T3\";\r\nimport { T4 } from \"../../util/toado/T4\";\r\nimport { T5 } from \"../../util/toado/T5\";\r\nimport { T6 } from \"../../util/toado/T6\";\r\nimport { T7 } from \"../../util/toado/T7\";\r\nimport { T8 } from \"../../util/toado/T8\";\r\n///////////////////////////////////////////\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../redux/types\";\r\nimport { WSContext } from \"../main/contexts/WSContext\";\r\nimport { getTextDisplay } from \"../../util/GetTenTuyen\";\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n  btnhover: {\r\n    border: \"2px solid white\",\r\n    \"&:hover\": {\r\n      background: \"#a5c2f0\",\r\n      border: \"2px solid rgb(25, 118, 210)\",\r\n    },\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  btnhover: {\r\n    border: \"2px solid white\",\r\n    \"&:hover\": {\r\n      background: \"#a5c2f0\",\r\n      border: \"2px solid rgb(25, 118, 210)\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          component={\"C\"}\r\n          className={classes.closeButton}\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function DialogSavePopup2(props) {\r\n  const [open, setOpen] = useState(false);\r\n  const [SelectForder, setSelectForder] = useState(false);\r\n  const [selectedFile, SetSelectedFile] = useState(null);\r\n  const [SelectIMG, setSelectIMG] = useState(false);\r\n  const [Srt, setSrt] = useState(null);\r\n  const [ListCot, setListCot] = useState([]);\r\n  const dispatch = useDispatch();\r\n\r\n  const classes = useStyles();\r\n\r\n  const post = props.post;\r\n\r\n  const { ws, connect, disconnect, connectIMG } = useContext(WSContext);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    disconnect();\r\n  };\r\n\r\n  const Resset_Cot = () => {\r\n    dispatch({ type: actions.ON_CURRENT_LIST_COT_CHANGE, data: [] });\r\n  };\r\n\r\n  const Change_List_Cot = (value) => {\r\n    Resset_Cot();\r\n    switch (value) {\r\n      case \"T1\":\r\n        setListCot(T1);\r\n        break;\r\n      case \"T2\":\r\n        setListCot(T2);\r\n        break;\r\n      case \"T3\":\r\n        setListCot(T3);\r\n        break;\r\n      case \"T4\":\r\n        setListCot(T4);\r\n        break;\r\n      case \"T5\":\r\n        setListCot(T5);\r\n        break;\r\n      case \"T6\":\r\n        setListCot(T6);\r\n        break;\r\n      case \"T7\":\r\n        setListCot(T7);\r\n        break;\r\n      case \"T8\":\r\n        setListCot(T8);\r\n        break;\r\n      default:\r\n        setListCot(T1);\r\n        break;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // disconnect();\r\n    if (open == true && !SelectIMG) {\r\n      connect();\r\n    } else if (open == true && SelectIMG) {\r\n      connectIMG();\r\n    } else {\r\n      disconnect();\r\n    }\r\n  }, [open, SelectIMG]);\r\n\r\n  useEffect(() => {\r\n    let componentMounted = true;\r\n    const fetchData = async () => {\r\n      if (componentMounted && open) {\r\n        Change_List_Cot(post.ma_tuyen);\r\n      }\r\n    };\r\n    fetchData();\r\n    return () => {\r\n      componentMounted = false;\r\n    };\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    let componentMounted = true;\r\n    const fetchData = async () => {\r\n      if (componentMounted && open) {\r\n        try {\r\n          var pluginArrayArg = new Array();\r\n          let BatDau = ListCot\r\n            ? ListCot.find((o) => o.cot === post.bat_dau_doan)\r\n            : \"\";\r\n          let KetThuc = ListCot\r\n            ? ListCot.find((o) => o.cot === post.ket_thuc_doan)\r\n            : \"\";\r\n          if (BatDau !== null) {\r\n            var jsonArg1 = new Object();\r\n            jsonArg1.cot = BatDau.cot;\r\n            jsonArg1.toa_do_vi_tri = BatDau.x + \",\" + BatDau.y;\r\n            pluginArrayArg.push(jsonArg1);\r\n          }\r\n          if (KetThuc !== null) {\r\n            var jsonArg2 = new Object();\r\n            jsonArg2.cot = KetThuc.cot;\r\n            jsonArg2.toa_do_vi_tri = KetThuc.x + \",\" + KetThuc.y;\r\n            pluginArrayArg.push(jsonArg2);\r\n          }\r\n          var jsonArray = JSON.parse(JSON.stringify(pluginArrayArg));\r\n          dispatch({\r\n            type: actions.ON_CURRENT_TUYEN_CHANGE,\r\n            data: post.ma_tuyen,\r\n          });\r\n          dispatch({\r\n            type: actions.ON_CURRENT_LIST_COT_CHANGE,\r\n            data: jsonArray,\r\n          });\r\n        } catch (e) {\r\n          //console.log(e);\r\n        }\r\n      }\r\n    };\r\n    fetchData();\r\n    return () => {\r\n      componentMounted = false;\r\n    };\r\n  }, [ListCot]);\r\n\r\n  const onChangeSelectOptions = (e) => {\r\n    e.target.checked ? setSelectForder(true) : setSelectForder(false);\r\n  };\r\n\r\n  const onChangeSelect2Options = (e) => {\r\n    e.target.checked ? setSelectIMG(true) : setSelectIMG(false);\r\n    SetSelectedFile(null);\r\n  };\r\n\r\n  const convertBase64 = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n      const fileReader = new FileReader();\r\n      fileReader.readAsDataURL(file);\r\n\r\n      fileReader.onload = () => {\r\n        resolve(fileReader.result);\r\n      };\r\n\r\n      fileReader.onerror = (error) => {\r\n        reject(error);\r\n      };\r\n    });\r\n  };\r\n\r\n  function getExtension(filename) {\r\n    var parts = filename.split(\".\");\r\n    return parts[parts.length - 1];\r\n  }\r\n\r\n  function isImage(file) {\r\n    if (file.size > 0) {\r\n      var ext = getExtension(file.name);\r\n      switch (ext.toLowerCase()) {\r\n        case \"jpg\":\r\n        case \"jpeg\":\r\n        case \"gif\":\r\n        case \"png\":\r\n        case \"tiff\":\r\n        case \"bmp\":\r\n        case \"pjp\":\r\n        case \"pjpeg\":\r\n          return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  async function onChangeHandler2(e) {\r\n    var temp = [];\r\n    var tempname = [];\r\n    const file = e.target.files;\r\n    var count = 0;\r\n    var erorrlist = \"\";\r\n    for (let i = 0; i < file.length; i++) {\r\n      if (isImage(file[i])) {\r\n        if (file[i]) {\r\n          const base64 = await convertBase64(file[i]);\r\n          temp.push(base64.split(\"base64,\")[1]);\r\n          tempname.push(\r\n            `${i}_${file[i].name\r\n              .normalize(\"NFD\")\r\n              .replace(/[\\u0300-\\u036f]/g, \"\")\r\n              .replace(/\\s/g, \"\")}`\r\n          );\r\n        }\r\n      } else {\r\n        erorrlist += \"\\n\" + file[i].name;\r\n        count++;\r\n      }\r\n    }\r\n    const obj = {};\r\n    let i = 0;\r\n    for (const key of tempname) {\r\n      obj[key] = temp[i];\r\n      i++;\r\n    }\r\n    if (temp.length !== 0) {\r\n      SetSelectedFile(obj);\r\n    }\r\n    // console.log(obj);\r\n    //var str = \"Có \" + count + \" tệp tin không hợp lệ trên tổng số \" + file.length + \" tệp tin đã chọn để tải lên:\";\r\n    //count  === 0 ? alert(\"Thành công tải \" + file.length +\" tệp tin lên.\") : alert(str + erorrlist);\r\n  }\r\n\r\n  async function onChangeHandler(event) {\r\n    var file = await convertBase64(event.target.files[0]);\r\n    //console.log(file);\r\n    if (file) SetSelectedFile(file);\r\n    // alert(\"video ok\");\r\n  }\r\n\r\n  async function onChangeHandlerSRT(event) {\r\n    var file = await convertBase64(event.target.files[0]);\r\n    //console.log(file);\r\n    if (file) setSrt(file);\r\n    //alert(\"srt ok\");\r\n  }\r\n\r\n  const sendvideo = (madkt) => {\r\n    if (!ws.current) return;\r\n    ws.current.send(\r\n      JSON.stringify({\r\n        ma_dot_kiem_tra: madkt,\r\n        video_data: selectedFile,\r\n        gis_data: Srt,\r\n      })\r\n    );\r\n    dispatch({\r\n      type: actions.MODE_SHOW_VIDEO,\r\n      data: \"LIVE\",\r\n    });\r\n\r\n    dispatch({\r\n      type: actions.TYPE_WS_DATA,\r\n      data: \"VIDEO\",\r\n    });\r\n    dispatch({\r\n      type: actions.TUYEN_GS,\r\n      data: `${getTextDisplay(post.ma_tuyen)} ( \r\n      ${post.bat_dau_doan}\r\n      -\r\n      ${post.ket_thuc_doan} )`,\r\n    });\r\n    //handleClose();\r\n    setOpen(false);\r\n  };\r\n\r\n  const sendIMG = (madkt) => {\r\n    if (!ws.current) return;\r\n\r\n    ws.current.send(\r\n      JSON.stringify({\r\n        ma_dot_kiem_tra: madkt,\r\n        multi_images_data: selectedFile,\r\n      })\r\n    );\r\n    dispatch({\r\n      type: actions.MODE_SHOW_VIDEO,\r\n      data: \"LIVE\",\r\n    });\r\n    dispatch({\r\n      type: actions.TYPE_WS_DATA,\r\n      data: \"IMG\",\r\n    });\r\n    dispatch({\r\n      type: actions.TUYEN_GS,\r\n      data: `${getTextDisplay(post.ma_tuyen)} ( \r\n        ${post.bat_dau_doan}\r\n        -\r\n        ${post.ket_thuc_doan} )`,\r\n    });\r\n    // handleClose();\r\n    setOpen(false);\r\n  };\r\n\r\n  const handelsubumit = async () => {\r\n    !SelectIMG\r\n      ? sendvideo(post.ma_dot_kiem_tra)\r\n      : sendIMG(post.ma_dot_kiem_tra);\r\n  };\r\n\r\n  const renderchoice = () => {\r\n    return (\r\n      <>\r\n        <div style={{ margin: \"10px\", width: \"25vw\" }}>\r\n          {SelectForder ? (\r\n            <>\r\n              {\" \"}\r\n              {/* \r\n              <FormControlLabel\r\n                    value=\"end\"\r\n                    control={<Checkbox color=\"primary\" />}\r\n                    label=\"Chọn thư mục\"\r\n                    labelPlacement=\"end\"\r\n                    checked=\"true\"\r\n                    style={{ marginBottom: 0, marginRight: 15 }}\r\n                    onChange={(e) => {\r\n                      onChangeSelectOptions(e);\r\n                    }}\r\n                  />\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    component=\"label\"\r\n                    htmlFor=\"folder\"\r\n                    startIcon={<SaveIcon />}\r\n                  >\r\n                    Chọn thư mục\r\n                    <input\r\n                      id=\"folder\"\r\n                      directory=\"\"\r\n                      webkitdirectory=\"\"\r\n                      style={{ display: \"none\" }}\r\n                      type=\"file\"\r\n                    />\r\n                  </Button>*/}\r\n            </>\r\n          ) : (\r\n            <>\r\n              {/*\r\n              <FormControlLabel\r\n                    value=\"end\"\r\n                    control={<Checkbox color=\"primary\" />}\r\n                    label=\"Chọn thư mục\"\r\n                    labelPlacement=\"end\"\r\n                    style={{ marginBottom: 0, marginRight: 15 }}\r\n                    onChange={(e) => {\r\n                      onChangeSelectOptions(e);\r\n                    }}\r\n                  />*/}\r\n              {!SelectIMG ? (\r\n                <>\r\n                  <FormControlLabel\r\n                    value=\"end\"\r\n                    control={<Checkbox color=\"primary\" />}\r\n                    label=\"Video\"\r\n                    labelPlacement=\"end\"\r\n                    style={{ marginBottom: 0, marginRight: 15 }}\r\n                    onChange={(e) => {\r\n                      onChangeSelect2Options(e);\r\n                    }}\r\n                  />\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    component=\"label\"\r\n                    htmlFor=\"files\"\r\n                    startIcon={<SaveIcon />}\r\n                  >\r\n                    Video\r\n                    <input\r\n                      id=\"files\"\r\n                      //  multiple\r\n                      name=\"file\"\r\n                      accept=\"video/*\"\r\n                      style={{ display: \"none\" }}\r\n                      type=\"file\"\r\n                      onChange={(e) => onChangeHandler(e)}\r\n                    />\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    component=\"label\"\r\n                    htmlFor=\"srt\"\r\n                    startIcon={<SaveIcon />}\r\n                    style={{ marginLeft: 10 }}\r\n                  >\r\n                    SRT\r\n                    <input\r\n                      id=\"srt\"\r\n                      name=\"srt\"\r\n                      accept=\".srt\"\r\n                      style={{ display: \"none\" }}\r\n                      type=\"file\"\r\n                      onChange={(e) => onChangeHandlerSRT(e)}\r\n                    />\r\n                  </Button>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  {\" \"}\r\n                  <FormControlLabel\r\n                    value=\"end\"\r\n                    control={<Checkbox color=\"primary\" />}\r\n                    label=\"Ảnh\"\r\n                    labelPlacement=\"end\"\r\n                    style={{ marginBottom: 0, marginRight: 15 }}\r\n                    checked=\"true\"\r\n                    onChange={(e) => {\r\n                      onChangeSelect2Options(e);\r\n                    }}\r\n                  />\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    component=\"label\"\r\n                    htmlFor=\"files\"\r\n                    startIcon={<SaveIcon />}\r\n                  >\r\n                    Ảnh\r\n                    <input\r\n                      id=\"files\"\r\n                      multiple\r\n                      name=\"file\"\r\n                      accept=\"image/*\"\r\n                      style={{ display: \"none\" }}\r\n                      type=\"file\"\r\n                      onChange={(e) => onChangeHandler2(e)}\r\n                    />\r\n                  </Button>\r\n                </>\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        component={\"C\"}\r\n        onClick={handleClickOpen}\r\n        style={{ float: \"right\" }}\r\n        className={classes.btnhover}\r\n      >\r\n        Thêm dữ liệu <ImportExportIcon style={{ color: \"black\" }} />\r\n      </Button>\r\n      <Dialog\r\n        onClose={handleClose}\r\n        maxWidth={false}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={open}\r\n      >\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n          Thêm dữ liệu video {post.ma_tuyen}_{post.bat_dau_doan}-\r\n          {post.ket_thuc_doan}_{post.ngay_kiem_tra}\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <form noValidate autoComplete=\"off\">\r\n            {renderchoice()}\r\n          </form>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          {(!SelectIMG && selectedFile !== null && Srt !== null) ||\r\n          (SelectIMG && selectedFile !== null) ? (\r\n            <Button\r\n              autoFocus\r\n              component={\"C\"}\r\n              onClick={handelsubumit}\r\n              color=\"primary\"\r\n            >\r\n              Gửi tệp tin\r\n            </Button>\r\n          ) : (\r\n            <Button autoFocus component={\"C\"} color=\"primary\">\r\n              ...\r\n            </Button>\r\n          )}\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\generalObject\\VideoDialog\\Dialog_Popup_Image.js",["738","739","740","741","742","743","744","745"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../../redux/types\";\r\nimport VideoLibraryIcon from \"@material-ui/icons/VideoLibrary\";\r\nimport DialogImageShow from \"../slideshow-gallery/DialogImageShow\";\r\nimport Loading from \"../Loading\";\r\nimport { ChangerUrl } from \"../../../util/ChangeUrl\";\r\n// data\r\nimport { T1 } from \"../../../util/toado/T1\";\r\nimport { T2 } from \"../../../util/toado/T2\";\r\nimport { T3 } from \"../../../util/toado/T3\";\r\nimport { T4 } from \"../../../util/toado/T4\";\r\nimport { T5 } from \"../../../util/toado/T5\";\r\nimport { T6 } from \"../../../util/toado/T6\";\r\nimport { T7 } from \"../../../util/toado/T7\";\r\nimport { T8 } from \"../../../util/toado/T8\";\r\n///////////////////////////////////////////\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n  imageList: {\r\n    width: \"50vw\",\r\n    height: \"90%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  lihover: {\r\n    wordBreak: \"break-word\",\r\n    fontFamily: \"-webkit-body\",\r\n    fontSize: \"1.1rem\",\r\n    boxshadow:\r\n      \"rgba(50, 50, 93, 0.25) 0px 2px 5px -1px, rgba(0, 0, 0, 0.3) 0px 1px 3px -1px;\",\r\n    border: \"solid 2px #f1f3f4\",\r\n    \"&:hover\": {\r\n      background: \"#a5c2f0\",\r\n      border: \"2px solid rgb(25, 118, 210)\",\r\n    },\r\n  },\r\n  btnhover: {\r\n    border: \"2px solid white\",\r\n    \"&:hover\": {\r\n      background: \"#a5c2f0\",\r\n      border: \"2px solid rgb(25, 118, 210)\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst DialogTitle = withStyles(useStyles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\" style={{ display: \"inline\" }}>\r\n        {children}\r\n      </Typography>\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          component={\"C\"}\r\n          className={classes.closeButton}\r\n          onClick={onClose}\r\n          style={{ float: \"right\" }}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nexport default function DialogPopupImage(props) {\r\n  const urllistanh = process.env.REACT_APP_API_URL + \"getimagesdetectimport/\";\r\n  const [ListCot, setListCot] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isError, setIsError] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n  const post = props.post;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const Resset_Cot = () => {\r\n    dispatch({ type: actions.ON_CURRENT_LIST_COT_CHANGE, data: [] });\r\n  };\r\n\r\n  const Change_List_Cot = (value) => {\r\n    Resset_Cot();\r\n    switch (value) {\r\n      case \"T1\":\r\n        setListCot(T1);\r\n        break;\r\n      case \"T2\":\r\n        setListCot(T2);\r\n        break;\r\n      case \"T3\":\r\n        setListCot(T3);\r\n        break;\r\n      case \"T4\":\r\n        setListCot(T4);\r\n        break;\r\n      case \"T5\":\r\n        setListCot(T5);\r\n        break;\r\n      case \"T6\":\r\n        setListCot(T6);\r\n        break;\r\n      case \"T7\":\r\n        setListCot(T7);\r\n        break;\r\n      case \"T8\":\r\n        setListCot(T8);\r\n        break;\r\n      default:\r\n        setListCot(T1);\r\n        break;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let componentMounted = true;\r\n    const fetchData = async () => {\r\n      if (componentMounted && open) {\r\n        Change_List_Cot(post.ma_tuyen);\r\n      }\r\n    };\r\n    fetchData();\r\n    return () => {\r\n      componentMounted = false;\r\n    };\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    let componentMounted = true;\r\n    const fetchData = async () => {\r\n      if (componentMounted && open) {\r\n        try {\r\n          var pluginArrayArg = new Array();\r\n          let BatDau = ListCot\r\n            ? ListCot.find((o) => o.cot === post.bat_dau_doan)\r\n            : null;\r\n          let KetThuc = ListCot\r\n            ? ListCot.find((o) => o.cot === post.ket_thuc_doan)\r\n            : null;\r\n          if (BatDau !== null) {\r\n            var jsonArg1 = new Object();\r\n            jsonArg1.cot = BatDau.cot;\r\n            jsonArg1.toa_do_vi_tri = BatDau.x + \",\" + BatDau.y;\r\n            pluginArrayArg.push(jsonArg1);\r\n          }\r\n          if (KetThuc !== null) {\r\n            var jsonArg2 = new Object();\r\n            jsonArg2.cot = KetThuc.cot;\r\n            jsonArg2.toa_do_vi_tri = KetThuc.x + \",\" + KetThuc.y;\r\n            pluginArrayArg.push(jsonArg2);\r\n          }\r\n          var jsonArray = JSON.parse(JSON.stringify(pluginArrayArg));\r\n          dispatch({\r\n            type: actions.ON_CURRENT_TUYEN_CHANGE,\r\n            data: post.ma_tuyen,\r\n          });\r\n          dispatch({\r\n            type: actions.ON_CURRENT_LIST_COT_CHANGE,\r\n            data: jsonArray,\r\n          });\r\n        } catch (e) {\r\n          //console.log(e);\r\n        }\r\n      }\r\n    };\r\n    fetchData();\r\n    return () => {\r\n      componentMounted = false;\r\n    };\r\n  }, [ListCot]);\r\n\r\n  // ------------ Redux Start ------------\r\n  const currentVideoImage = useSelector((state) => state.currentVideoImage);\r\n\r\n  const GetListIMG = () => {\r\n    async function getDataListImg() {\r\n      let urlg = urllistanh + props.id;\r\n      try {\r\n        setIsLoading(true);\r\n        setIsError(false);\r\n        dispatch({\r\n          type: actions.CURRENT_VIDEO_IMAGE,\r\n          data: [],\r\n        });\r\n        let res = await axios({\r\n          url: urlg,\r\n          method: \"get\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        });\r\n        if (res.status === 200) {\r\n          //   console.log(res.status);\r\n        }\r\n        return res.data;\r\n\r\n        //   return res.data;\r\n      } catch (err) {\r\n        console.error(err);\r\n        setIsError(true);\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n\r\n    getDataListImg().then((res) => {\r\n      if (res) {\r\n        // console.log(res);\r\n        dispatch({\r\n          type: actions.CURRENT_VIDEO_IMAGE,\r\n          data: res && res,\r\n        });\r\n        let temparr = [];\r\n        res &&\r\n          undefined !== res &&\r\n          res.length !== 0 &&\r\n          Object.keys(res) &&\r\n          undefined !== Object.keys(res) &&\r\n          Object.keys(res).length !== 0 &&\r\n          Object.keys(res).map((key, index) => {\r\n            let tempobj = new Object();\r\n            tempobj.name = key;\r\n            tempobj.img = res[key];\r\n            temparr.push(tempobj);\r\n          });\r\n        dispatch({\r\n          type: actions.AllSlideShowData,\r\n          data: temparr,\r\n        });\r\n\r\n        setIsLoading(false);\r\n      }\r\n    });\r\n  };\r\n\r\n  // ------------ Redux End ------------\r\n  const classes = useStyles();\r\n\r\n  const handleClickOpen = () => {\r\n    GetListIMG();\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const imgclick = (index) => {\r\n    dispatch({\r\n      type: actions.SlideImgShow,\r\n      data: { open: true, index, info: props.info },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        component={\"C\"}\r\n        onClick={() => handleClickOpen()}\r\n        className={classes.btnhover}\r\n      >\r\n        Xem ảnh <VideoLibraryIcon style={{ color: \"black\" }} />\r\n      </Button>\r\n      <Dialog\r\n        onClose={handleClose}\r\n        maxWidth={false}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={open}\r\n      >\r\n        <DialogTitle\r\n          id=\"customized-dialog-title\"\r\n          atyle={{ color: \"black\" }}\r\n          onClose={handleClose}\r\n        >\r\n          Lựa chọn ảnh hiện thị\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          {open && (\r\n            <>\r\n              {isLoading ? (\r\n                <Loading />\r\n              ) : (\r\n                <>\r\n                  <ul\r\n                    style={{\r\n                      listStyle: \"none\",\r\n                    }}\r\n                  >\r\n                    {currentVideoImage &&\r\n                    undefined !== currentVideoImage &&\r\n                    Object.keys(currentVideoImage) &&\r\n                    undefined !== Object.keys(currentVideoImage) &&\r\n                    Object.keys(currentVideoImage).length !== 0\r\n                      ? Object.keys(currentVideoImage).map((key, index) => (\r\n                          <>\r\n                            <li\r\n                              key={index}\r\n                              className={classes.lihover}\r\n                              onClick={() => imgclick(index)}\r\n                            >\r\n                              <img\r\n                                src={ChangerUrl(currentVideoImage[key])}\r\n                                style={{ width: \"100px\", objectFit: \"cover\" }}\r\n                              />\r\n                              <b style={{ margin: 5 }}>\r\n                                {key.replace(\".jpg\", \"\")}\r\n                              </b>\r\n                            </li>\r\n                          </>\r\n                        ))\r\n                      : !isError\r\n                      ? \"Không có dữ liệu\"\r\n                      : \"Lỗi khi thực hiện lấy dữ liệu\"}\r\n                  </ul>\r\n                  <DialogImageShow />\r\n                </>\r\n              )}\r\n            </>\r\n          )}\r\n        </DialogContent>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\generalObject\\VideoDialog\\Dialog_Popup.js",["746","747","748","749","750"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\r\nimport ImageList from \"@material-ui/core/ImageList\";\r\nimport ImageListItem from \"@material-ui/core/ImageListItem\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../../redux/types\";\r\nimport VideoLibraryIcon from \"@material-ui/icons/VideoLibrary\";\r\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\r\nimport Loading from \"../Loading\";\r\n// data\r\nimport { T1 } from \"../../../util/toado/T1\";\r\nimport { T2 } from \"../../../util/toado/T2\";\r\nimport { T3 } from \"../../../util/toado/T3\";\r\nimport { T4 } from \"../../../util/toado/T4\";\r\nimport { T5 } from \"../../../util/toado/T5\";\r\nimport { T6 } from \"../../../util/toado/T6\";\r\nimport { T7 } from \"../../../util/toado/T7\";\r\nimport { T8 } from \"../../../util/toado/T8\";\r\n///////////////////////////////////////////\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n  imageList: {\r\n    width: \"50vw\",\r\n    height: \"90%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  lihover: {\r\n    wordBreak: \"break-word\",\r\n    fontFamily: \"-webkit-body\",\r\n    fontSize: \"1.1rem\",\r\n    boxshadow:\r\n      \"rgba(50, 50, 93, 0.25) 0px 2px 5px -1px, rgba(0, 0, 0, 0.3) 0px 1px 3px -1px;\",\r\n    border: \"solid 2px #f1f3f4\",\r\n    \"&:hover\": {\r\n      background: \"#a5c2f0\",\r\n      border: \"2px solid rgb(25, 118, 210)\",\r\n    },\r\n  },\r\n  btnhover: {\r\n    border: \"2px solid white\",\r\n    \"&:hover\": {\r\n      background: \"#a5c2f0\",\r\n      border: \"2px solid rgb(25, 118, 210)\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst DialogTitle = withStyles(useStyles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\" style={{ display: \"inline\" }}>\r\n        {children}\r\n      </Typography>\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          component={\"C\"}\r\n          className={classes.closeButton}\r\n          onClick={onClose}\r\n          style={{ float: \"right\" }}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nexport default function DialogPopup(props) {\r\n  const urllistvideo = process.env.REACT_APP_API_URL + \"getvideodetectimport/\";\r\n  const [ListCot, setListCot] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isError, setIsError] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n  const post = props.post;\r\n\r\n  const Resset_Cot = () => {\r\n    dispatch({ type: actions.ON_CURRENT_LIST_COT_CHANGE, data: [] });\r\n  };\r\n\r\n  const Change_List_Cot = (value) => {\r\n    Resset_Cot();\r\n    switch (value) {\r\n      case \"T1\":\r\n        setListCot(T1);\r\n        break;\r\n      case \"T2\":\r\n        setListCot(T2);\r\n        break;\r\n      case \"T3\":\r\n        setListCot(T3);\r\n        break;\r\n      case \"T4\":\r\n        setListCot(T4);\r\n        break;\r\n      case \"T5\":\r\n        setListCot(T5);\r\n        break;\r\n      case \"T6\":\r\n        setListCot(T6);\r\n        break;\r\n      case \"T7\":\r\n        setListCot(T7);\r\n        break;\r\n      case \"T8\":\r\n        setListCot(T8);\r\n        break;\r\n      default:\r\n        setListCot(T1);\r\n        break;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let componentMounted = true;\r\n    const fetchData = async () => {\r\n      if (componentMounted && open) {\r\n        Change_List_Cot(post.ma_tuyen);\r\n      }\r\n    };\r\n    fetchData();\r\n    return () => {\r\n      componentMounted = false;\r\n    };\r\n  }, [open]);\r\n  useEffect(() => {\r\n    let componentMounted = true;\r\n    const fetchData = async () => {\r\n      if (componentMounted && open) {\r\n        try {\r\n          var pluginArrayArg = new Array();\r\n          let BatDau = ListCot\r\n            ? ListCot.find((o) => o.cot === post.bat_dau_doan)\r\n            : null;\r\n          let KetThuc = ListCot\r\n            ? ListCot.find((o) => o.cot === post.ket_thuc_doan)\r\n            : null;\r\n          if (BatDau !== null) {\r\n            var jsonArg1 = new Object();\r\n            jsonArg1.cot = BatDau.cot;\r\n            jsonArg1.toa_do_vi_tri = BatDau.x + \",\" + BatDau.y;\r\n            pluginArrayArg.push(jsonArg1);\r\n          }\r\n          if (KetThuc !== null) {\r\n            var jsonArg2 = new Object();\r\n            jsonArg2.cot = KetThuc.cot;\r\n            jsonArg2.toa_do_vi_tri = KetThuc.x + \",\" + KetThuc.y;\r\n            pluginArrayArg.push(jsonArg2);\r\n          }\r\n          var jsonArray = JSON.parse(JSON.stringify(pluginArrayArg));\r\n          dispatch({\r\n            type: actions.ON_CURRENT_TUYEN_CHANGE,\r\n            data: post.ma_tuyen,\r\n          });\r\n          dispatch({\r\n            type: actions.ON_CURRENT_LIST_COT_CHANGE,\r\n            data: jsonArray,\r\n          });\r\n        } catch (e) {\r\n          //console.log(e);\r\n        }\r\n      }\r\n    };\r\n    fetchData();\r\n    return () => {\r\n      componentMounted = false;\r\n    };\r\n  }, [ListCot]);\r\n\r\n  const GetListVideo = () => {\r\n    async function getDataListImg() {\r\n      let urlg = urllistvideo + props.id;\r\n      try {\r\n        setIsLoading(true);\r\n        setIsError(false);\r\n\r\n        dispatch({\r\n          type: actions.CURRENT_VIDEO,\r\n          data: [],\r\n        });\r\n        let res = await axios({\r\n          url: urlg,\r\n          method: \"get\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        });\r\n        if (res.status === 200) {\r\n          //   console.log(res.status);\r\n          return res.data;\r\n        }\r\n        return undefined;\r\n      } catch (err) {\r\n        console.error(err);\r\n        setIsError(true);\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n\r\n    getDataListImg().then((res) => {\r\n      if (res) {\r\n        // console.log(res);\r\n\r\n        dispatch({\r\n          type: actions.CURRENT_VIDEO,\r\n          data: res && res,\r\n        });\r\n        setIsLoading(false);\r\n      }\r\n    });\r\n  };\r\n\r\n  // ------------ Redux Start ------------\r\n  const CurrentVideo = useSelector((state) => state.currentVideo);\r\n\r\n  const dispatch = useDispatch();\r\n  // ------------ Redux End ------------\r\n  const classes = useStyles();\r\n\r\n  const handleClickOpen = () => {\r\n    GetListVideo();\r\n    dispatch({\r\n      type: actions.MODE_SHOW_VIDEO,\r\n      data: \"Video\",\r\n    });\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const setIdVideo = (id) => {\r\n    dispatch({\r\n      type: actions.ON_CURRENT_ID_VIDEO_CHANGE,\r\n      data: id,\r\n    });\r\n    handleClose();\r\n  };\r\n\r\n  const renderListVideo = (item, index, name = \"\") => {\r\n    return (\r\n      <ImageListItem\r\n        key={index}\r\n        cols={1}\r\n        style={{\r\n          borderRadius: \"15px\",\r\n          marginRight: \"10px\",\r\n          paddingRight: \"10px\",\r\n          background: \"blue\",\r\n          margin: \"10px\",\r\n        }}\r\n      >\r\n        <p\r\n          style={{\r\n            position: \"absolute\",\r\n            top: 15,\r\n            left: 12,\r\n            color: \"white\",\r\n            fontSize: \"25px\",\r\n            wordBreak: \"break-all\",\r\n          }}\r\n        >\r\n          {name.replace(\".mp4\", \"\")}\r\n\r\n          <Button\r\n            component={\"C\"}\r\n            onClick={() => setIdVideo(item)}\r\n            style={{\r\n              color: \"black\",\r\n              left: 6,\r\n            }}\r\n          >\r\n            <PlayCircleFilledIcon\r\n              style={{ color: \"lightblue\", fontSize: 95 }}\r\n            />\r\n          </Button>\r\n        </p>\r\n      </ImageListItem>\r\n    );\r\n  };\r\n\r\n  const handleClickbtn = () => {\r\n    dispatch({\r\n      type: actions.SlideVideoShow,\r\n      data: { open: true, index: 0 },\r\n    });\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        component={\"C\"}\r\n        onClick={() => handleClickOpen()}\r\n        className={classes.btnhover}\r\n      >\r\n        Xem video <VideoLibraryIcon style={{ color: \"black\" }} />\r\n      </Button>\r\n      <Dialog\r\n        onClose={handleClose}\r\n        maxWidth={false}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={open}\r\n      >\r\n        <DialogTitle\r\n          id=\"customized-dialog-title\"\r\n          atyle={{ color: \"black\" }}\r\n          onClose={handleClose}\r\n        >\r\n          Lựa chọn video hiện thị\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          {CurrentVideo &&\r\n            undefined !== CurrentVideo &&\r\n            Object.keys(CurrentVideo) &&\r\n            undefined !== Object.keys(CurrentVideo) &&\r\n            Object.keys(CurrentVideo).length !== 0 && (\r\n              <Button\r\n                component={\"C\"}\r\n                onClick={() => handleClickbtn()}\r\n                className={classes.btnhover}\r\n              >\r\n                Xem nhanh\r\n              </Button>\r\n            )}\r\n          {open && (\r\n            <>\r\n              {isLoading ? (\r\n                <Loading />\r\n              ) : (\r\n                <>\r\n                  {CurrentVideo &&\r\n                  undefined !== CurrentVideo &&\r\n                  Object.keys(CurrentVideo).length !== 0 ? (\r\n                    <ImageList\r\n                      rowHeight={160}\r\n                      className={classes.imageList}\r\n                      cols={4}\r\n                    >\r\n                      {Object.keys(CurrentVideo).map((key, index) =>\r\n                        renderListVideo(CurrentVideo[key], index, key)\r\n                      )}\r\n                    </ImageList>\r\n                  ) : !isError ? (\r\n                    \"Không có dữ liệu\"\r\n                  ) : (\r\n                    \"Lỗi khi thực hiện lấy dữ liệu\"\r\n                  )}\r\n                </>\r\n              )}\r\n            </>\r\n          )}\r\n        </DialogContent>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\generalObject\\BCNgay.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\photoms\\itemData.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\generalObject\\Log.js",["751"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport WarningIcon from \"@material-ui/icons/Warning\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport * as actions from \"../../redux/types\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"&::-webkit-scrollbar\": {\r\n      width: 20,\r\n    },\r\n    \"&::-webkit-scrollbar-track\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n    \"&::-webkit-scrollbar-thumb\": {\r\n      backgroundColor: \"#1976d2\",\r\n      borderRadius: 20,\r\n      border: \"6px solid transparent\",\r\n      backgroundClip: \"content-box\",\r\n    },\r\n    \"&::-webkit-scrollbar-thumb:hover\": {\r\n      backgroundColor: \"rgb(17, 82, 147)\",\r\n    },\r\n  },\r\n  lihover: {\r\n    wordBreak: \"break-word\",\r\n    fontFamily: \"-webkit-body\",\r\n    fontSize: \"1.1rem\",\r\n    marginBottom: 5,\r\n    border: \"1px solid #d6dee1\",\r\n    padding: \"1rem\",\r\n    background: \"#fdfdfd\",\r\n    borderRadius: 10,\r\n    marginLeft: 5,\r\n    boxshadow:\r\n      \"rgba(50, 50, 93, 0.25) 0px 2px 5px -1px, rgba(0, 0, 0, 0.3) 0px 1px 3px -1px;\",\r\n    height: 80,\r\n    width: \"98%\",\r\n    whiteSpace: \"nowrap\",\r\n    overflow: \"hidden\",\r\n    textOverflow: \"ellipsis\",\r\n    color: \"red\",\r\n    \"&:hover\": {\r\n      background: \"#a5c2f0\",\r\n      border: \"2px solid rgb(25, 118, 210)\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Log() {\r\n  //-------------------------------------------------\r\n  const Toado = useSelector((state) => state.wstoado);\r\n  const InfoError = useSelector((state) => state.showinfoerror);\r\n  const [Mode, setMode] = useState(0);\r\n  const messagesEndRef = useRef(null);\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (InfoError && InfoError.value) {\r\n      setMode(1);\r\n    } else {\r\n      setMode(0);\r\n    }\r\n  }, [InfoError]);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current &&\r\n      messagesEndRef.current.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"start\",\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      scrollToBottom();\r\n    }, 50);\r\n  }, [Toado]);\r\n\r\n  const SetInfo = (data) => {\r\n    setMode(1);\r\n    dispatch({\r\n      type: actions.SHOW_INFO_ERROR,\r\n      data: data,\r\n    });\r\n  };\r\n\r\n  const Close = () => {\r\n    setMode(0);\r\n    dispatch({\r\n      type: actions.SHOW_INFO_ERROR,\r\n      data: null,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {Mode === 0 ? (\r\n        <ul\r\n          className={classes.root}\r\n          style={{\r\n            color: \"black\",\r\n            height: \"55vh\",\r\n            maxHeight: \"55vh\",\r\n            overflow: \"scroll\",\r\n            overflowX: \"hidden\",\r\n            borderTop: \"solid 5px #1976d2\",\r\n            boxShadow:\r\n              \"inset 0px 11px 8px -10px #CCC, inset 0px -11px 8px -10px #CCC\",\r\n            background: \"#f0f2f5\",\r\n            paddingTop: 5,\r\n          }}\r\n        >\r\n          {Toado &&\r\n            Toado.length !== 0 &&\r\n            Toado.map((item, index) => {\r\n              return (\r\n                <li\r\n                  className={classes.lihover}\r\n                  key={index}\r\n                  onClick={() => SetInfo(item)}\r\n                >\r\n                  <p style={{ color: \"black\", display: \"inline\" }}>Tọa độ </p>\r\n                  <b style={{ color: \"black\", display: \"inline\" }}>\r\n                    {item.latitude && item.latitude},{\" \"}\r\n                    {item.longtitude && item.longtitude}\r\n                  </b>\r\n                  <br />\r\n                  <WarningIcon style={{ fill: \"red\" }} />\r\n                  <p style={{ color: \"black\", display: \"inline\" }}>\r\n                    Bất thường:{\" \"}\r\n                  </p>\r\n                  {item.error &&\r\n                    item.error.map((value, idx) => {\r\n                      return item.error.length < idx ? (\r\n                        <b key={idx} style={{ color: \"red\" }}>\r\n                          {value.error_label},{\" \"}\r\n                        </b>\r\n                      ) : (\r\n                        <b key={idx} style={{ color: \"red\" }}>\r\n                          {value.error_label}{\" \"}\r\n                        </b>\r\n                      );\r\n                    })}\r\n                </li>\r\n              );\r\n            })}\r\n          <li ref={messagesEndRef} />\r\n        </ul>\r\n      ) : (\r\n        <div\r\n          style={{\r\n            color: \"black\",\r\n            height: \"55vh\",\r\n            maxHeight: \"55vh\",\r\n            boxShadow:\r\n              \"inset 0px 11px 8px -10px #CCC, inset 0px -11px 8px -10px #CCC\",\r\n            background: \"#f0f2f5\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              wordBreak: \"break-word\",\r\n              fontFamily: \"-webkit-body\",\r\n              fontSize: \"1.1rem\",\r\n            }}\r\n          >\r\n            <Button\r\n              onClick={() => Close()}\r\n              component={\"C\"}\r\n              style={{\r\n                background: \"#f1f1f1\",\r\n                borderRadius: \"0px 5px 5px 0px\",\r\n                boxShadow:\r\n                  \"rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px\",\r\n              }}\r\n            >\r\n              <ArrowBackIcon style={{ fill: \"#1976d2\" }} />\r\n            </Button>{\" \"}\r\n            Vị trí:{\" \"}\r\n            <b>\r\n              {InfoError && InfoError.latitude},{\" \"}\r\n              {InfoError && InfoError.longtitude}\r\n            </b>\r\n          </div>\r\n          <div\r\n            className={classes.root}\r\n            style={{\r\n              marginTop: 5,\r\n              overflow: \"auto\",\r\n              height: \"48vh\",\r\n              maxHeight: \"48vh\",\r\n              position: \"relative\",\r\n            }}\r\n          >\r\n            <b\r\n              style={{\r\n                padding: 5,\r\n                paddingBottom: 0,\r\n                wordBreak: \"break-word\",\r\n                fontFamily: \"-webkit-body\",\r\n                fontSize: \"1.1rem\",\r\n              }}\r\n            >\r\n              Chi tiết bất thường:\r\n            </b>\r\n            <br />\r\n            {InfoError &&\r\n              InfoError.error &&\r\n              InfoError.error.length !== 0 &&\r\n              InfoError.error.map((value, idx) => {\r\n                return (\r\n                  <div\r\n                    style={{\r\n                      wordBreak: \"break-word\",\r\n                      fontFamily: \"-webkit-body\",\r\n                      fontSize: \"1.1rem\",\r\n                      marginBottom: 5,\r\n                      border: \"3px solid red\",\r\n                      padding: \"1rem\",\r\n                      background: \"#fdfdfd\",\r\n                      marginLeft: 5,\r\n                      marginRight: 5,\r\n                      borderRadius: 10,\r\n                      boxshadow:\r\n                        \"rgba(50, 50, 93, 0.25) 0px 2px 5px -1px, rgba(0, 0, 0, 0.3) 0px 1px 3px -1px;\",\r\n                    }}\r\n                  >\r\n                    <img\r\n                      src={\r\n                        value && \"data:image/png;base64,\" + value.error_img_dtls\r\n                      }\r\n                      style={{\r\n                        width: \"50%\",\r\n                        objectFit: \"cover\",\r\n                        marginLeft: 10,\r\n                        border: \"2px solid red\",\r\n                        verticalAlign: \"middle\",\r\n                      }}\r\n                    />\r\n\r\n                    <p\r\n                      style={{\r\n                        padding: \"1px 10px 0\",\r\n                        wordBreak: \"break-word\",\r\n                        fontFamily: \"-webkit-body\",\r\n                        fontSize: \"1.1rem\",\r\n                        verticalAlign: \"middle\",\r\n                        display: \"inline\",\r\n                      }}\r\n                    >\r\n                      <b style={{ color: \"red\" }}>{value.error_label} </b>\r\n                    </p>\r\n                  </div>\r\n                );\r\n              })}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\generalObject\\slideshow-gallery\\DialogImageShow.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\generalObject\\VideoSaveDialog\\Dialog_Save_Popup.js",["752","753","754","755","756","757","758","759","760","761","762","763","764","765","766"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\n//-----------------------------------------\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\r\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ImportExportIcon from \"@material-ui/icons/ImportExport\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport { FormControl, InputLabel, MenuItem, Select } from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n//-----------------------------------------\r\nimport Loading from \"../../generalObject/Loading\";\r\n// data\r\n/*import { T1 } from \"../../../util/toado/T1\";\r\nimport { T2 } from \"../../../util/toado/T2\";\r\nimport { T3 } from \"../../../util/toado/T3\";\r\nimport { T4 } from \"../../../util/toado/T4\";\r\nimport { T5 } from \"../../../util/toado/T5\";\r\nimport { T6 } from \"../../../util/toado/T6\";\r\nimport { T7 } from \"../../../util/toado/T7\";\r\nimport { T8 } from \"../../../util/toado/T8\";*/\r\n///////////////////////////////////////////\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../../redux/types\";\r\nimport { WSContext } from \"../../main/contexts/WSContext\";\r\nimport { getTextDisplay } from \"../../../util/GetTenTuyen\";\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    display: \"flex\",\r\n    borderRadius: 0,\r\n  },\r\n  details: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  content: {\r\n    flex: \"1 0 auto\",\r\n  },\r\n  cover: {\r\n    objectFit: \"cover\",\r\n    width: \"200px\",\r\n    height: 100,\r\n    marginTop: \"20px\",\r\n    marginLeft: \"10px\",\r\n  },\r\n}));\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          component={\"C\"}\r\n          className={classes.closeButton}\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function DialogSavePopup(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  // const urltb = process.env.REACT_APP_API_URL + \"dotkiemtras/\";\r\n  // const urlt = process.env.REACT_APP_API_URL + \"tuyens/\";\r\n  // const urlv = process.env.REACT_APP_API_URL + \"videoimports/\";\r\n  const urltdkt = process.env.REACT_APP_API_URL + \"dotkiemtraimports\";\r\n  const classes = useStyles();\r\n  //const [ListTuyen, setListTuyen] = useState([]);\r\n  //const [fetchedData, setFetchedData] = useState([]);\r\n  const fetchedData = useSelector((state) => state.dbtc);\r\n  const ListTuyen = useSelector((state) => state.listtuyen);\r\n  const [ListCot, setListCot] = useState([]);\r\n  const [Srt, setSrt] = useState(null);\r\n  var dt = new Date();\r\n  var date = `${dt.getFullYear().toString().padStart(4, \"0\")}-${(\r\n    dt.getMonth() + 1\r\n  )\r\n    .toString()\r\n    .padStart(2, \"0\")}-${dt.getDate().toString().padStart(2, \"0\")}`;\r\n  const values = {\r\n    someDate: date,\r\n  };\r\n  const [DateDB, setDateDB] = useState(date);\r\n  const [Dot, setDot] = useState(null);\r\n  const [Tuyen, setTuyen] = useState(null);\r\n  const [BatDau, setBatDau] = useState(null);\r\n  const [KetThuc, setKetThuc] = useState(null);\r\n  const [SelectForder, setSelectForder] = useState(false);\r\n  const [SelectIMG, setSelectIMG] = useState(false);\r\n  const [New, setNew] = useState(true);\r\n  const [Done, setDone] = useState(false);\r\n  const [ThisDot, setThisDot] = useState(null);\r\n  const [selectedFile, SetSelectedFile] = useState(null);\r\n  const urlvt = `${process.env.REACT_APP_API_URL}getallvitribytuyens?${\r\n    Tuyen ? \"&ma_tuyen=\" + Tuyen : \"&none=0\"\r\n  }`;\r\n  const [ListVTT, setListVTT] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n  const [oldDB, setOldDb] = useState(null);\r\n  const { ws, connect, disconnect, connectIMG } = useContext(WSContext);\r\n\r\n  useEffect(() => {\r\n    handleInfo();\r\n  }, [DateDB, Dot, Tuyen, BatDau, KetThuc, New]);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    disconnect();\r\n  };\r\n\r\n  const onChange = (event, setFunction) => {\r\n    event.preventDefault();\r\n    const target = event.target;\r\n    const value = target.value;\r\n    setFunction(value);\r\n    setDone(false);\r\n    setThisDot(null);\r\n  };\r\n\r\n  const onChangeDateDB = (event) => {\r\n    onChange(event, setDateDB);\r\n  };\r\n\r\n  const Resset_Cot = () => {\r\n    setBatDau(null);\r\n    setKetThuc(null);\r\n    dispatch({ type: actions.ON_CURRENT_LIST_COT_CHANGE, data: [] });\r\n  };\r\n\r\n  const Change_List_Cot = (value) => {\r\n    Resset_Cot();\r\n    /* switch (value) {\r\n      case \"T1\":\r\n        setListCot(T1);\r\n        break;\r\n      case \"T2\":\r\n        setListCot(T2);\r\n        break;\r\n      case \"T3\":\r\n        setListCot(T3);\r\n        break;\r\n      case \"T4\":\r\n        setListCot(T4);\r\n        break;\r\n      case \"T5\":\r\n        setListCot(T5);\r\n        break;\r\n      case \"T6\":\r\n        setListCot(T6);\r\n        break;\r\n      case \"T7\":\r\n        setListCot(T7);\r\n        break;\r\n      case \"T8\":\r\n        setListCot(T8);\r\n        break;\r\n      default:\r\n        setListCot(T1);\r\n        break;\r\n    }*/\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function getDatavtt() {\r\n      try {\r\n        let res = await axios({\r\n          url: urlvt,\r\n          method: \"get\",\r\n          timeout: 8000,\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        });\r\n        if (res.status === 200) {\r\n          //  console.log(res.status);\r\n        }\r\n        return res.data;\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    }\r\n\r\n    getDatavtt().then((res) => setListVTT(res));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    async function getDatavtt() {\r\n      try {\r\n        let res = await axios({\r\n          url: urlvt,\r\n          method: \"get\",\r\n          timeout: 8000,\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        });\r\n        if (res.status === 200) {\r\n          //  console.log(res.status);\r\n        }\r\n        return res.data;\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    }\r\n\r\n    getDatavtt().then((res) => setListVTT(res));\r\n  }, [Tuyen]);\r\n\r\n  const resetvaluedf = () => {\r\n    setDateDB(values.someDate);\r\n    setBatDau(null);\r\n    setKetThuc(null);\r\n    setTuyen(null);\r\n    setOldDb(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    waitListcot();\r\n  }, [Tuyen]);\r\n\r\n  useEffect(() => {\r\n    // disconnect();\r\n    if (open === true && !SelectIMG) {\r\n      connect();\r\n    } else if (open === true && SelectIMG) {\r\n      connectIMG();\r\n    } else {\r\n      disconnect();\r\n    }\r\n  }, [open, SelectIMG]);\r\n\r\n  const waitListcot = () => {\r\n    if (oldDB) {\r\n      let objbd = ListCot\r\n        ? ListCot.find((o) => o.cot === oldDB.bat_dau_doan)\r\n        : null;\r\n      if (objbd) setBatDau(objbd.cot + \"|\" + objbd.x + \",\" + objbd.y);\r\n      let objkt = ListCot\r\n        ? ListCot.find((o) => o.cot === oldDB.ket_thuc_doan)\r\n        : null;\r\n      if (objkt) setKetThuc(objkt.cot + \"|\" + objkt.x + \",\" + objkt.y);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    waitDot();\r\n  }, [Dot]);\r\n\r\n  const waitDot = () => {\r\n    if (Dot) {\r\n      let obj = fetchedData\r\n        ? fetchedData.find((o) => o.ma_dot_kiem_tra === Dot)\r\n        : null;\r\n      setOldDb(obj);\r\n      setTuyen(obj.ma_tuyen);\r\n      Change_List_Cot(obj.ma_tuyen);\r\n      setDateDB(obj.ngay_kiem_tra);\r\n    }\r\n  };\r\n\r\n  const onChangeSelectDot = (event) => {\r\n    ///\r\n    event.preventDefault();\r\n    const target = event.target;\r\n    const value = target.value;\r\n    if (value === null) {\r\n      resetvaluedf();\r\n    }\r\n    ///\r\n    onChange(event, setDot);\r\n  };\r\n\r\n  const onChangeSelectTuyen = (event) => {\r\n    onChange(event, setTuyen);\r\n    Change_List_Cot(event.target.value);\r\n  };\r\n\r\n  const onChangeSelectBatDau = (event) => {\r\n    onChange(event, setBatDau);\r\n  };\r\n\r\n  const onChangeSelectKetThuc = (event) => {\r\n    onChange(event, setKetThuc);\r\n  };\r\n\r\n  /*const onChangeSelectOptions = (e) => {\r\n    e.target.checked ? setSelectForder(true) : setSelectForder(false);\r\n  };*/\r\n\r\n  const onChangeSelect2Options = (e) => {\r\n    e.target.checked ? setSelectIMG(true) : setSelectIMG(false);\r\n    SetSelectedFile(null);\r\n  };\r\n\r\n  const onChangeChecked = (e) => {\r\n    setDone(false);\r\n    e.target.checked ? setNew(true) : setNew(false);\r\n  };\r\n\r\n  const handleInfo = () => {\r\n    if (New) {\r\n      if (\r\n        DateDB !== null &&\r\n        Tuyen !== null &&\r\n        BatDau !== null &&\r\n        KetThuc !== null\r\n      ) {\r\n        setDone(true);\r\n      } else {\r\n        setDone(false);\r\n      }\r\n    } else {\r\n      if (\r\n        DateDB !== null &&\r\n        Dot !== null &&\r\n        Tuyen !== null &&\r\n        BatDau !== null &&\r\n        KetThuc !== null\r\n      ) {\r\n        setDone(true);\r\n      } else {\r\n        setDone(false);\r\n      }\r\n    }\r\n    var pluginArrayArg = new Array();\r\n    if (BatDau !== null) {\r\n      var jsonArg1 = new Object();\r\n      jsonArg1.cot = BatDau.split(\"|\")[0];\r\n      jsonArg1.toa_do_vi_tri = BatDau.split(\"|\")[1];\r\n      pluginArrayArg.push(jsonArg1);\r\n    }\r\n    if (KetThuc !== null) {\r\n      var jsonArg2 = new Object();\r\n      jsonArg2.cot = KetThuc.split(\"|\")[0];\r\n      jsonArg2.toa_do_vi_tri = KetThuc.split(\"|\")[1];\r\n      pluginArrayArg.push(jsonArg2);\r\n    }\r\n    var jsonArray = JSON.parse(JSON.stringify(pluginArrayArg));\r\n    dispatch({ type: actions.ON_CURRENT_LIST_COT_CHANGE, data: jsonArray });\r\n    dispatch({ type: actions.ON_CURRENT_TUYEN_CHANGE, data: Tuyen });\r\n  };\r\n\r\n  const convertBase64 = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n      const fileReader = new FileReader();\r\n      fileReader.readAsDataURL(file);\r\n\r\n      fileReader.onload = () => {\r\n        resolve(fileReader.result);\r\n      };\r\n\r\n      fileReader.onerror = (error) => {\r\n        reject(error);\r\n      };\r\n    });\r\n  };\r\n\r\n  async function onChangeHandler(event) {\r\n    var file = await convertBase64(event.target.files[0]);\r\n    //console.log(file);\r\n    if (file) SetSelectedFile(file);\r\n    //alert(\"video ok\");\r\n  }\r\n\r\n  function getExtension(filename) {\r\n    var parts = filename.split(\".\");\r\n    return parts[parts.length - 1];\r\n  }\r\n\r\n  function isImage(file) {\r\n    if (file.size > 0) {\r\n      var ext = getExtension(file.name);\r\n      switch (ext.toLowerCase()) {\r\n        case \"jpg\":\r\n        case \"jpeg\":\r\n        case \"gif\":\r\n        case \"png\":\r\n        case \"tiff\":\r\n        case \"bmp\":\r\n        case \"pjp\":\r\n        case \"pjpeg\":\r\n          return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  async function onChangeHandler2(e) {\r\n    var temp = [];\r\n    var tempname = [];\r\n    const file = e.target.files;\r\n    var count = 0;\r\n    var erorrlist = \"\";\r\n    for (let i = 0; i < file.length; i++) {\r\n      if (isImage(file[i])) {\r\n        if (file[i]) {\r\n          const base64 = await convertBase64(file[i]);\r\n          temp.push(base64.split(\"base64,\")[1]);\r\n          tempname.push(\r\n            `${i}_${file[i].name\r\n              .normalize(\"NFD\")\r\n              .replace(/[\\u0300-\\u036f]/g, \"\")\r\n              .replace(/\\s/g, \"\")}`\r\n          );\r\n        }\r\n      } else {\r\n        erorrlist += \"\\n\" + file[i].name;\r\n        count++;\r\n      }\r\n    }\r\n    const obj = {};\r\n    let i = 0;\r\n    for (const key of tempname) {\r\n      obj[key] = temp[i];\r\n      i++;\r\n    }\r\n    if (temp.length !== 0) {\r\n      SetSelectedFile(obj);\r\n    }\r\n    // console.log(obj);\r\n    //var str = \"Có \" + count + \" tệp tin không hợp lệ trên tổng số \" + file.length + \" tệp tin đã chọn để tải lên:\";\r\n    //count  === 0 ? alert(\"Thành công tải \" + file.length +\" tệp tin lên.\") : alert(str + erorrlist);\r\n  }\r\n\r\n  async function onChangeHandlerSRT(event) {\r\n    var file = await convertBase64(event.target.files[0]);\r\n    //console.log(file);\r\n    if (file) setSrt(file);\r\n    //alert(\"srt ok\");\r\n  }\r\n\r\n  function formatDate(date) {\r\n    var d = new Date(date),\r\n      month = \"\" + (d.getMonth() + 1),\r\n      day = \"\" + d.getDate(),\r\n      year = d.getFullYear();\r\n\r\n    if (month.length < 2) month = \"0\" + month;\r\n    if (day.length < 2) day = \"0\" + day;\r\n    //yyyy-mm-dd format\r\n    return [year, month, day].join(\"-\");\r\n  }\r\n\r\n  const getcot = (str) => {\r\n    var temp = str.toString();\r\n    var cot = temp.split(\"|\");\r\n    return cot[0];\r\n  };\r\n\r\n  const sendvideo = (madkt) => {\r\n    if (!ws.current) return;\r\n    ws.current.send(\r\n      JSON.stringify({\r\n        ma_dot_kiem_tra: madkt,\r\n        video_data: selectedFile,\r\n        gis_data: Srt,\r\n      })\r\n    );\r\n    dispatch({\r\n      type: actions.MODE_SHOW_VIDEO,\r\n      data: \"LIVE\",\r\n    });\r\n    dispatch({\r\n      type: actions.TYPE_WS_DATA,\r\n      data: \"VIDEO\",\r\n    });\r\n    dispatch({\r\n      type: actions.TUYEN_GS,\r\n      data: `${getTextDisplay(Tuyen)} ( \r\n      ${BatDau.split(\"|\")[0]}\r\n      -\r\n      ${KetThuc.split(\"|\")[0]} )`,\r\n    });\r\n    // handleClose();\r\n    setOpen(false);\r\n  };\r\n\r\n  const sendIMG = (madkt) => {\r\n    if (!ws.current) return;\r\n    ws.current.send(\r\n      JSON.stringify({\r\n        ma_dot_kiem_tra: madkt,\r\n        multi_images_data: selectedFile,\r\n      })\r\n    );\r\n    dispatch({\r\n      type: actions.MODE_SHOW_VIDEO,\r\n      data: \"LIVE\",\r\n    });\r\n    dispatch({\r\n      type: actions.TYPE_WS_DATA,\r\n      data: \"IMG\",\r\n    });\r\n    dispatch({\r\n      type: actions.TUYEN_GS,\r\n      data: `${getTextDisplay(Tuyen)} ( \r\n    ${BatDau.split(\"|\")[0]}\r\n    -\r\n    ${KetThuc.split(\"|\")[0]} )`,\r\n    });\r\n    // handleClose();\r\n    setOpen(false);\r\n  };\r\n\r\n  const handelsubumit = async () => {\r\n    let batdau = await getcot(BatDau);\r\n    let ketthuc = await getcot(KetThuc);\r\n    if (ThisDot || Dot != null) {\r\n      Dot\r\n        ? !SelectIMG\r\n          ? sendvideo(Dot)\r\n          : sendIMG(Dot)\r\n        : !SelectIMG\r\n        ? sendvideo(ThisDot)\r\n        : sendIMG(Dot);\r\n    } else {\r\n      axios\r\n        .post(urltdkt, {\r\n          ma_tuyen: Tuyen,\r\n          bat_dau_doan: batdau,\r\n          ket_thuc_doan: ketthuc,\r\n          ngay_kiem_tra: formatDate(DateDB),\r\n          hinh_thuc_kiem_tra: \"ngay\",\r\n        })\r\n        .then(\r\n          (response) => {\r\n            props.reload();\r\n            setThisDot(response.data.ma_dot_kiem_tra);\r\n            !SelectIMG\r\n              ? sendvideo(response.data.ma_dot_kiem_tra)\r\n              : sendIMG(response.data.ma_dot_kiem_tra);\r\n          },\r\n          (error) => {\r\n            console.log(error);\r\n          }\r\n        );\r\n    }\r\n  };\r\n\r\n  const renderchoice = () => {\r\n    return (\r\n      <>\r\n        <div style={{ margin: \"10px\", width: \"90vw\" }}>\r\n          <FormControl\r\n            variant={\"outlined\"}\r\n            style={{\r\n              alignSelf: \"center\",\r\n              minWidth: \"25%\",\r\n              marginLeft: 10,\r\n            }}\r\n          >\r\n            <InputLabel id=\"demo-simple-select-outlined-label\">\r\n              {New ? \"Chọn tuyến\" : \"\"}\r\n            </InputLabel>\r\n            <Select\r\n              width=\"100%\"\r\n              className={classes.select}\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              label={\"Chọn tuyến\"}\r\n              value={Tuyen}\r\n              style={{ height: 40 }}\r\n              onChange={onChangeSelectTuyen}\r\n            >\r\n              <MenuItem value={null}>Trống</MenuItem>\r\n              {ListTuyen ? (\r\n                ListTuyen.map((item, index) => (\r\n                  <MenuItem key={index} value={item.ma_tuyen}>\r\n                    {/*item.tt_tuyen*/}\r\n                    {item.ten_tuyen}\r\n                  </MenuItem>\r\n                ))\r\n              ) : (\r\n                <Loading />\r\n              )}\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl\r\n            variant={\"outlined\"}\r\n            style={{\r\n              alignSelf: \"center\",\r\n              minWidth: \"23%\",\r\n              marginLeft: 10,\r\n            }}\r\n          >\r\n            <InputLabel id=\"demo-simple-select-outlined-label\">\r\n              {New ? \"Chọn Điểm Bắt Đầu\" : \"\"}\r\n            </InputLabel>\r\n            <Select\r\n              width=\"100%\"\r\n              className={classes.select}\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              label={\"Chọn Tuyến\"}\r\n              value={BatDau}\r\n              style={{ height: 40 }}\r\n              onChange={onChangeSelectBatDau}\r\n            >\r\n              <MenuItem value={null}>Trống</MenuItem>\r\n              {ListVTT ? (\r\n                ListVTT.map((item, index) => (\r\n                  <MenuItem\r\n                    key={index}\r\n                    value={item.ma_vi_tri + \"|\" + item.toa_do}\r\n                    disabled={\r\n                      item.ma_vi_tri + \"|\" + item.toa_do === KetThuc\r\n                        ? true\r\n                        : false\r\n                    }\r\n                  >\r\n                    {item.ten_vi_tri}\r\n                  </MenuItem>\r\n                ))\r\n              ) : (\r\n                <Loading />\r\n              )}\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl\r\n            variant={\"outlined\"}\r\n            style={{\r\n              alignSelf: \"center\",\r\n              minWidth: \"23%\",\r\n              marginLeft: 10,\r\n              marginRight: 10,\r\n            }}\r\n          >\r\n            <InputLabel id=\"demo-simple-select-outlined-label\">\r\n              {New ? \"Chọn Điểm Kết Thúc\" : \"\"}\r\n            </InputLabel>\r\n            <Select\r\n              width=\"100%\"\r\n              className={classes.select}\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              label={\"Chọn Tuyến\"}\r\n              value={KetThuc}\r\n              style={{ height: 40 }}\r\n              onChange={onChangeSelectKetThuc}\r\n            >\r\n              <MenuItem value={null}>Trống</MenuItem>\r\n              {ListVTT ? (\r\n                ListVTT.map((item, index) => (\r\n                  <MenuItem\r\n                    key={index}\r\n                    value={item.ma_vi_tri + \"|\" + item.toa_do}\r\n                    disabled={\r\n                      item.ma_vi_tri + \"|\" + item.toa_do === BatDau\r\n                        ? true\r\n                        : false\r\n                    }\r\n                  >\r\n                    {item.ten_vi_tri}\r\n                  </MenuItem>\r\n                ))\r\n              ) : (\r\n                <Loading />\r\n              )}\r\n            </Select>\r\n          </FormControl>\r\n          <>\r\n            {/*Check box checked + button folder*/}\r\n            {Done ? (\r\n              <>\r\n                {!SelectIMG ? (\r\n                  <>\r\n                    <FormControlLabel\r\n                      value=\"end\"\r\n                      control={<Checkbox color=\"primary\" />}\r\n                      label=\"Video\"\r\n                      labelPlacement=\"end\"\r\n                      style={{ marginBottom: 0, marginRight: 15 }}\r\n                      onChange={(e) => {\r\n                        onChangeSelect2Options(e);\r\n                      }}\r\n                    />\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      size=\"small\"\r\n                      component=\"label\"\r\n                      htmlFor=\"files\"\r\n                      startIcon={<SaveIcon />}\r\n                    >\r\n                      Video\r\n                      <input\r\n                        id=\"files\"\r\n                        // multiple\r\n                        name=\"file\"\r\n                        accept=\"video/*\"\r\n                        style={{ display: \"none\" }}\r\n                        type=\"file\"\r\n                        onChange={(e) => onChangeHandler(e)}\r\n                      />\r\n                    </Button>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      size=\"small\"\r\n                      component=\"label\"\r\n                      htmlFor=\"srt\"\r\n                      startIcon={<SaveIcon />}\r\n                      style={{ marginLeft: 10 }}\r\n                    >\r\n                      SRT\r\n                      <input\r\n                        id=\"srt\"\r\n                        name=\"srt\"\r\n                        accept=\".srt\"\r\n                        style={{ display: \"none\" }}\r\n                        type=\"file\"\r\n                        onChange={(e) => onChangeHandlerSRT(e)}\r\n                      />\r\n                    </Button>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <FormControlLabel\r\n                      value=\"end\"\r\n                      control={<Checkbox color=\"primary\" />}\r\n                      label=\"Ảnh\"\r\n                      labelPlacement=\"end\"\r\n                      style={{ marginBottom: 0, marginRight: 15 }}\r\n                      checked=\"true\"\r\n                      onChange={(e) => {\r\n                        onChangeSelect2Options(e);\r\n                      }}\r\n                    />\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      size=\"small\"\r\n                      component=\"label\"\r\n                      htmlFor=\"files\"\r\n                      startIcon={<SaveIcon />}\r\n                    >\r\n                      Ảnh\r\n                      <input\r\n                        id=\"files\"\r\n                        multiple\r\n                        name=\"file\"\r\n                        accept=\"image/*\"\r\n                        style={{ display: \"none\" }}\r\n                        type=\"file\"\r\n                        onChange={(e) => onChangeHandler2(e)}\r\n                      />\r\n                    </Button>\r\n                  </>\r\n                )}\r\n              </>\r\n            ) : (\r\n              <>\r\n                {!SelectIMG ? (\r\n                  <>\r\n                    <FormControlLabel\r\n                      value=\"end\"\r\n                      control={<Checkbox color=\"primary\" />}\r\n                      label=\"Video\"\r\n                      labelPlacement=\"end\"\r\n                      style={{ marginBottom: 0, marginRight: 15 }}\r\n                      onChange={(e) => {\r\n                        onChangeSelect2Options(e);\r\n                      }}\r\n                    />\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      size=\"small\"\r\n                      component=\"label\"\r\n                      htmlFor=\"files\"\r\n                      startIcon={<SaveIcon />}\r\n                      disabled=\"true\"\r\n                    >\r\n                      Video\r\n                    </Button>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      size=\"small\"\r\n                      component=\"label\"\r\n                      htmlFor=\"srt\"\r\n                      startIcon={<SaveIcon />}\r\n                      style={{ marginLeft: 10 }}\r\n                      disabled=\"true\"\r\n                    >\r\n                      SRT\r\n                    </Button>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <FormControlLabel\r\n                      value=\"end\"\r\n                      control={<Checkbox color=\"primary\" />}\r\n                      label=\"Ảnh\"\r\n                      labelPlacement=\"end\"\r\n                      style={{ marginBottom: 0, marginRight: 15 }}\r\n                      checked=\"true\"\r\n                      onChange={(e) => {\r\n                        onChangeSelect2Options(e);\r\n                      }}\r\n                    />\r\n\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      size=\"small\"\r\n                      component=\"label\"\r\n                      htmlFor=\"files\"\r\n                      startIcon={<SaveIcon />}\r\n                      disabled=\"true\"\r\n                    >\r\n                      Ảnh\r\n                    </Button>\r\n                  </>\r\n                )}\r\n              </>\r\n            )}\r\n            {/*Check box checked + button folder*/}\r\n          </>\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        component={\"C\"}\r\n        onClick={handleClickOpen}\r\n        style={{ float: \"right\" }}\r\n      >\r\n        Thêm ĐKTM <ImportExportIcon style={{ color: \"black\" }} />\r\n      </Button>\r\n      <Dialog\r\n        onClose={handleClose}\r\n        maxWidth={false}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={open}\r\n      >\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n          Bộ lọc dữ liệu đầu vào\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <form noValidate autoComplete=\"off\">\r\n            {New ? (\r\n              <>\r\n                <FormControlLabel\r\n                  value=\"end\"\r\n                  control={<Checkbox color=\"primary\" />}\r\n                  label=\"Dữ liệu mới\"\r\n                  labelPlacement=\"end\"\r\n                  checked=\"true\"\r\n                  style={{ marginBottom: 0, marginRight: 15, marginLeft: 8 }}\r\n                  onChange={(e) => {\r\n                    onChangeChecked(e);\r\n                  }}\r\n                />\r\n                <TextField\r\n                  id=\"date\"\r\n                  label=\"Ngày quay\"\r\n                  type=\"date\"\r\n                  value={DateDB}\r\n                  defaultValue={values.someDate}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  style={{ marginLeft: \"10px\" }}\r\n                  onChange={onChangeDateDB}\r\n                />\r\n                {renderchoice()}\r\n              </>\r\n            ) : (\r\n              <>\r\n                <FormControlLabel\r\n                  value=\"end\"\r\n                  control={<Checkbox color=\"primary\" />}\r\n                  label=\"Chọn đợt bay\"\r\n                  labelPlacement=\"end\"\r\n                  style={{ marginBottom: 0, marginRight: 15, marginLeft: 8 }}\r\n                  onChange={(e) => {\r\n                    onChangeChecked(e);\r\n                  }}\r\n                />\r\n                <TextField\r\n                  id=\"date\"\r\n                  label=\"Ngày quay\"\r\n                  type=\"date\"\r\n                  value={DateDB}\r\n                  style={{ marginLeft: \"10px\" }}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  onChange={onChangeDateDB}\r\n                />\r\n                <FormControl\r\n                  variant={\"outlined\"}\r\n                  style={{\r\n                    alignSelf: \"center\",\r\n                    minWidth: \"25%\",\r\n                    marginLeft: 10,\r\n                  }}\r\n                >\r\n                  <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                    Chọn đợt bay cần bổ sung dữ liệu\r\n                  </InputLabel>\r\n                  <Select\r\n                    width=\"100%\"\r\n                    className={classes.select}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={Dot}\r\n                    style={{ height: 40 }}\r\n                    onChange={onChangeSelectDot}\r\n                  >\r\n                    <MenuItem value={null}>Trống</MenuItem>\r\n                    {fetchedData ? (\r\n                      fetchedData.map((item, index) => (\r\n                        <MenuItem key={index} value={item.ma_dot_kiem_tra}>\r\n                          {/*item.ma_dot_kiem_tra*/}\r\n                          {item.ma_tuyen}_{item.bat_dau_doan}-\r\n                          {item.ket_thuc_doan}_{item.ngay_kiem_tra}\r\n                        </MenuItem>\r\n                      ))\r\n                    ) : (\r\n                      <Loading />\r\n                    )}\r\n                  </Select>\r\n                </FormControl>\r\n                {renderchoice()}\r\n              </>\r\n            )}\r\n          </form>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          {(Done && selectedFile != null && Srt != null && !SelectIMG) ||\r\n          (Done && selectedFile != null && SelectIMG) ? (\r\n            <Button\r\n              autoFocus\r\n              component={\"C\"}\r\n              onClick={handelsubumit}\r\n              color=\"primary\"\r\n            >\r\n              Gửi tệp tin\r\n            </Button>\r\n          ) : (\r\n            <Button autoFocus component={\"C\"} color=\"primary\">\r\n              ...\r\n            </Button>\r\n          )}\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\nhapdulieu\\VideoWS.js",["767","768","769","770","771"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport Loading from \"../generalObject/Loading\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../redux/types\";\r\nimport { WSContext } from \"../main/contexts/WSContext\";\r\nimport SlideshowGallery from \"../generalObject/slideshow-gallery/SlideshowGallery\";\r\n\r\nconst VideoWS = () => {\r\n  const [Lists, setLists] = useState([]);\r\n  const [Listtd, setListtd] = useState([]);\r\n  const [MainIMG, setMainIMG] = useState(null);\r\n  const [Count, setCount] = useState(0);\r\n  const [FirstError, setFirstError] = useState(0);\r\n\r\n  const Typewsdata = useSelector((state) => state.typewsdata);\r\n\r\n  const { ws } = useContext(WSContext);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const getstt = (str) => {\r\n    var STT = str.substring(str.lastIndexOf(\"_\") + 1, str.lastIndexOf(\".\"));\r\n    return STT;\r\n  };\r\n\r\n  const getsttimgshow = (str) => {\r\n    var STT = str.substring(0, str.indexOf(\"_\"));\r\n    return STT;\r\n  };\r\n\r\n  const sleep = (milliseconds) => {\r\n    return new Promise((resolve) => setTimeout(resolve, milliseconds));\r\n  };\r\n\r\n  useEffect(() => {\r\n    try {\r\n      if (!ws.current) return;\r\n      ws.current.onmessage = (e) => {\r\n        const data = JSON.parse(e.data);\r\n        let temparr = [];\r\n        let toadoarr = [];\r\n        for (var k in data.data) {\r\n          let tempobj = new Object();\r\n          tempobj.name = k;\r\n          tempobj.value = data.data[k][0];\r\n          let obj2 = new Object();\r\n          //\r\n          obj2.value = data.data[k][0];\r\n          //\r\n          obj2.latitude = data.data[k][1].latitude;\r\n          obj2.longtitude = data.data[k][1].longtitude;\r\n          obj2.error = data.data[k][2];\r\n          temparr.push(tempobj);\r\n          // temp\r\n          if (obj2.error && obj2.error.length !== 0 && toadoarr.length === 0) {\r\n            toadoarr.push(obj2);\r\n          }\r\n        }\r\n        if (Typewsdata !== \"IMG\") {\r\n          temparr.sort((a, b) =>\r\n            parseInt(getstt(a.name)) > parseInt(getstt(b.name))\r\n              ? 1\r\n              : parseInt(getstt(b.name)) > parseInt(getstt(a.name))\r\n              ? -1\r\n              : 0\r\n          );\r\n        }\r\n\r\n        if (Typewsdata !== \"IMG\") {\r\n          setLists(temparr);\r\n        } else {\r\n          let tmpmerge = [...Lists, ...temparr];\r\n          tmpmerge.sort((a, b) =>\r\n            parseInt(getsttimgshow(a.name)) >\r\n            parseInt(getsttimgshow(getstt(b.name)))\r\n              ? 1\r\n              : parseInt(getsttimgshow(b.name)) >\r\n                parseInt(getsttimgshow(getstt(a.name)))\r\n              ? -1\r\n              : 0\r\n          );\r\n          setLists(tmpmerge);\r\n        }\r\n\r\n        let tempCount = Count + temparr.length;\r\n        let Stock_FPS = 12;\r\n        let mergearr = [...Listtd];\r\n        if (\r\n          (FirstError + tempCount) % (Stock_FPS * 2) === 0 ||\r\n          FirstError === 0\r\n        ) {\r\n          const unique = Array.from(new Set(toadoarr.map(JSON.stringify))).map(\r\n            JSON.parse\r\n          );\r\n          if (toadoarr.length !== 0 && FirstError === 0) {\r\n            setFirstError(tempCount);\r\n          }\r\n          dispatch({\r\n            type: actions.WS_TOA_DO2,\r\n            data: unique,\r\n          });\r\n\r\n          mergearr = [...Listtd, ...toadoarr];\r\n        }\r\n\r\n        const uniquelog = Array.from(new Set(mergearr.map(JSON.stringify))).map(\r\n          JSON.parse\r\n        );\r\n\r\n        setListtd(uniquelog);\r\n\r\n        setCount(tempCount);\r\n      };\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (Typewsdata !== \"IMG\") {\r\n      dispatch({\r\n        type: actions.WS_TOA_DO,\r\n        data: Listtd,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: actions.WS_TOA_DO,\r\n        data: Lists,\r\n      });\r\n    }\r\n  }, [Listtd]);\r\n\r\n  async function RunImg(start) {\r\n    for (let i = start; i < Lists.length; i++) {\r\n      setMainIMG(Lists[i].value);\r\n\r\n      await sleep(1000 / 3);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (Typewsdata !== \"IMG\") {\r\n      RunImg(0);\r\n    }\r\n  }, [Lists]);\r\n\r\n  return (\r\n    <>\r\n      {Lists.length !== 0 ? (\r\n        Typewsdata !== \"IMG\" ? (\r\n          <img\r\n            src={\"data:image/jpeg;base64,\" + MainIMG}\r\n            style={{\r\n              /*height: \"100%\",*/ width: \"100%\",\r\n              objectFit: \"cover\",\r\n              position: \"relative\",\r\n              top: \"50%\",\r\n              transform: \"translateY(-50%)\",\r\n            }}\r\n          />\r\n        ) : (\r\n          <>\r\n            {/* <img\r\n              src={\"data:image/jpeg;base64,\" + MainIMG}\r\n              style={{\r\n                width: \"100%\",\r\n                objectFit: \"cover\",\r\n              }}\r\n            /> \r\n            <DialogImageShow />*/}\r\n            <SlideshowGallery\r\n              input={Lists}\r\n              // ratio={`3:2`}\r\n              ratio={`5:2`}\r\n              // mode={`automatic`}\r\n              // timeout={`3000`}\r\n              type={\"base64\"}\r\n            />\r\n          </>\r\n        )\r\n      ) : (\r\n        <Loading />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VideoWS;\r\n","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\account\\AccountProfileDetails.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\account\\AccountProfile.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\home\\dotbayhome.js",["772","773","774","775","776"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Loading from \"../generalObject/Loading\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FullDialogBC from \"../generalObject/DialogBC\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { getTextDisplay } from \"../../util/GetTenTuyen\";\r\nimport { FormatDate } from \"../../util/formatDate\";\r\nimport TreeView from \"@material-ui/lab/TreeView\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport CachedIcon from \"@material-ui/icons/Cached\";\r\nimport TreeItem from \"@material-ui/lab/TreeItem\";\r\nimport * as actions from \"../../redux/types\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport DialogPopupNormal from \"../generalObject/VideoDialog/Dialog_Popup_Normal\";\r\nimport FiberNewIcon from \"@material-ui/icons/FiberNew\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    display: \"flex\",\r\n    borderRadius: 0,\r\n    width: \"100%\",\r\n  },\r\n  details: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  content: {\r\n    flex: \"1 0 auto\",\r\n  },\r\n  textContent: {\r\n    \"& span\": {\r\n      fontSize: \"1.25rem\",\r\n      color: \"black\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    \"& p\": {\r\n      fontSize: \"1.15rem\",\r\n    },\r\n  },\r\n  sizeIcon: {\r\n    \"& svg\": {\r\n      fontSize: \"35px\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function DotBay() {\r\n  const dispatch = useDispatch();\r\n  const urltb = process.env.REACT_APP_API_URL + \"dotkiemtras/\";\r\n  const urlanh = process.env.REACT_APP_API_URL + \"imagedkt/\";\r\n  const urlt = process.env.REACT_APP_API_URL + \"tuyens/\";\r\n  // const [fetchedData, setFetchedData] = useState([]);\r\n  const Today = new Date();\r\n  const DateNow1 =\r\n    (Today.getMonth() > 8\r\n      ? Today.getMonth() + 1\r\n      : \"0\" + (Today.getMonth() + 1)) +\r\n    \"/\" +\r\n    Today.getFullYear();\r\n  const DateNow =\r\n    Today.getDate().toString().padStart(2, \"0\") +\r\n    \"/\" +\r\n    (Today.getMonth() + 1).toString().padStart(2, \"0\") +\r\n    \"/\" +\r\n    Today.getFullYear();\r\n  const [Year, setYear] = useState(Today.getFullYear());\r\n  const [Month, setMonth] = useState(Today.getMonth());\r\n  const classes = useStyles();\r\n  const fetchedData = useSelector((state) => state.dbauto);\r\n  const ListTuyens = useSelector((state) => state.listtuyen);\r\n  let ListTuyen = [];\r\n  let NodeIdx = 0;\r\n\r\n  const sort = (str) => {\r\n    var mySubString = str.substring(\r\n      str.lastIndexOf(\"_\") + 1,\r\n      str.lastIndexOf(\".\")\r\n    );\r\n    return mySubString;\r\n  };\r\n\r\n  async function getDataDB() {\r\n    try {\r\n      let res = await axios({\r\n        url: urltb,\r\n        method: \"get\",\r\n        timeout: 8000,\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      if (res.status === 200) {\r\n        //console.log(res.status);\r\n      }\r\n      return res.data;\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }\r\n\r\n  const GetImg = (str) => {\r\n    async function getDataListImg() {\r\n      dispatch({\r\n        type: actions.CURRENT_VIDEO_NORMAL,\r\n        data: [],\r\n      });\r\n      let urlg = urlanh + str + \"/\";\r\n      try {\r\n        let res = await axios({\r\n          url: urlg,\r\n          method: \"get\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        });\r\n        if (res.status === 200) {\r\n          //   console.log(res.status);\r\n        }\r\n        return res.data;\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    }\r\n\r\n    getDataListImg().then((res) => {\r\n      if (res) {\r\n        dispatch({\r\n          type: actions.CURRENT_VIDEO_NORMAL,\r\n          data:\r\n            res &&\r\n            res.sort(function (a, b) {\r\n              return sort(a.img_name) - sort(b.img_name);\r\n            }),\r\n        });\r\n        dispatch({\r\n          type: actions.ON_CURRENT_ID_VIDEO_CHANGE,\r\n          data: \"ALL\",\r\n        });\r\n        dispatch({\r\n          type: actions.MODE_SHOW_VIDEO,\r\n          data: \"Normal\",\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let componentMounted = true;\r\n    const fetchData = async () => {\r\n      if (componentMounted && !fetchedData && fetchedData?.length !== 0) {\r\n        getDataDB().then((res) => {\r\n          if (res) {\r\n            let data = res.sort(function (a, b) {\r\n              return new Date(b.ngay_kiem_tra) - new Date(a.ngay_kiem_tra);\r\n            });\r\n            dispatch({\r\n              type: actions.Db_Auto,\r\n              data,\r\n            });\r\n\r\n            GetImg(data[0].ma_dot_kiem_tra);\r\n          }\r\n        });\r\n      }\r\n    };\r\n    fetchData();\r\n    return () => {\r\n      componentMounted = false;\r\n    };\r\n  }, []);\r\n\r\n  const getdata = () => {\r\n    getDataDB().then((res) => {\r\n      if (res) {\r\n        dispatch({\r\n          type: actions.Db_Auto,\r\n          data: res.sort(function (a, b) {\r\n            return new Date(b.ngay_kiem_tra) - new Date(a.ngay_kiem_tra);\r\n          }),\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let componentMounted = true;\r\n    const Find = async () => {\r\n      if (componentMounted) {\r\n        if (fetchedData) FindMonth(fetchedData, Month);\r\n      }\r\n    };\r\n    Find();\r\n    return () => {\r\n      componentMounted = false;\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let componentMounted = true;\r\n    const Find = async () => {\r\n      if (componentMounted) {\r\n        if (fetchedData) FindMonth(fetchedData, Month);\r\n      }\r\n    };\r\n    Find();\r\n    return () => {\r\n      componentMounted = false;\r\n    };\r\n  }, [fetchedData]);\r\n\r\n  useEffect(() => {\r\n    let componentMounted = true;\r\n    const fetchData = async () => {\r\n      if (componentMounted && fetchedData && fetchedData?.length !== 0) {\r\n        GetImg(fetchedData[0].ma_dot_kiem_tra);\r\n      }\r\n    };\r\n    fetchData();\r\n\r\n    return () => {\r\n      componentMounted = false;\r\n    };\r\n  }, [fetchedData]);\r\n\r\n  async function getDatatuyen() {\r\n    try {\r\n      let res = await axios({\r\n        url: urlt,\r\n        method: \"get\",\r\n        timeout: 8000,\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      if (res.status === 200) {\r\n        //console.log(res.status);\r\n      }\r\n      return res.data;\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    let componentMounted = true;\r\n    const fetchData = async () => {\r\n      if (componentMounted && ListTuyens.length === 0) {\r\n        getDatatuyen().then((res) => {\r\n          if (res) {\r\n            dispatch({\r\n              type: actions.List_Tuyen,\r\n              data: res,\r\n            });\r\n          }\r\n        });\r\n      }\r\n    };\r\n    fetchData();\r\n    return () => {\r\n      componentMounted = false;\r\n    };\r\n  }, []);\r\n\r\n  const renderCard = (post) => {\r\n    var newdate = FormatDate(post.ngay_kiem_tra);\r\n    return (\r\n      <TreeItem\r\n        onLabelClick={() => {\r\n          /* GetImg(post.ma_dot_kiem_tra)*/\r\n        }}\r\n        label={\r\n          <Card className={classes.root} key={post.ma_dot_kiem_tra}>\r\n            <div className={classes.details}>\r\n              <CardContent className={classes.content}>\r\n                <Typography component=\"h5\" variant=\"h5\">\r\n                  Đợt kiểm tra: {/*post.ma_dot_kiem_tra*/}\r\n                  {post.ma_tuyen}_{post.bat_dau_doan}-{post.ket_thuc_doan}_\r\n                  {post.ngay_kiem_tra}\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                  Bắt đầu: {post.bat_dau_doan} - Kết thúc: {post.ket_thuc_doan}{\" \"}\r\n                  <br />\r\n                  Ngày kiểm tra: {newdate} {\" | \"} Mã tuyến: {post.ma_tuyen}\r\n                  <br />\r\n                  <FullDialogBC data={post} />\r\n                  {/*<BtnPrint post={post} />*/}\r\n                  <DialogPopupNormal id={post.ma_dot_kiem_tra} post={post} />\r\n                </Typography>\r\n              </CardContent>\r\n            </div>\r\n          </Card>\r\n        }\r\n      />\r\n    );\r\n  };\r\n\r\n  const renderitem = (post, list) => {\r\n    const ru = ListTuyen.indexOf(post.ma_tuyen);\r\n    if (ru === -1) ListTuyen.push(post.ma_tuyen);\r\n    NodeIdx++;\r\n    var newdate = FormatDate(post.ngay_kiem_tra);\r\n    var TenTuyen = getTextDisplay(post.ma_tuyen, ListTuyens);\r\n    return (\r\n      <>\r\n        {ru === -1 ? (\r\n          <TreeItem\r\n            nodeId={NodeIdx}\r\n            onLabelClick={() => {\r\n              /* GetImg(post.ma_dot_kiem_tra)*/\r\n            }}\r\n            label={\r\n              <List\r\n                component=\"nav\"\r\n                style={{ borderBottom: \"1px solid #f1f1f1\" }}\r\n              >\r\n                <ListItem\r\n                  style={{\r\n                    width: \"80%\",\r\n                    display: \"inline-block\",\r\n                  }}\r\n                >\r\n                  <ListItemText\r\n                    className={classes.textContent}\r\n                    primary={TenTuyen}\r\n                    secondary={newdate}\r\n                  />\r\n                </ListItem>\r\n                {DateNow === newdate && (\r\n                  <FiberNewIcon style={{ color: \"red\" }} />\r\n                )}\r\n              </List>\r\n            }\r\n          >\r\n            {RenderListItem(list, post.ma_tuyen)}\r\n          </TreeItem>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n\r\n  const CheckDate = (ngaykt, post) => {\r\n    var d = new Date(ngaykt);\r\n    return d.getFullYear() === Year && d.getMonth() === Month ? true : false;\r\n  };\r\n\r\n  const RenderListItem = (list, tuyen) => {\r\n    return (\r\n      <>\r\n        {list\r\n          ? list.map((post) =>\r\n              CheckDate(post.ngay_kiem_tra, post) && post.ma_tuyen === tuyen\r\n                ? renderCard(post)\r\n                : \"\"\r\n            )\r\n          : \"\"}\r\n      </>\r\n    );\r\n  };\r\n\r\n  const FindMonth = (list, month) => {\r\n    if (list.length !== 0) {\r\n      var d = new Date(list[0].ngay_kiem_tra);\r\n      if (d.getMonth() === Month && d.getFullYear() === Year) {\r\n        return;\r\n      } else {\r\n        for (let j = 0; j < 100; j++) {\r\n          for (var i = 11; i >= 0; i--) {\r\n            if (d.getMonth() === i && d.getFullYear() === parseInt(Year - j)) {\r\n              setYear(parseInt(Year - j));\r\n              setMonth(i);\r\n              return;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const render = (post, list) => {\r\n    var d = new Date(post.ngay_kiem_tra);\r\n    return (\r\n      <>\r\n        {ListTuyen.indexOf(post.ma_tuyen) === -1 && CheckDate(d, post)\r\n          ? renderitem(post, list)\r\n          : \"\"}\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ height: \"100%\", overflowY: \"scroll\" }}>\r\n        <div\r\n          style={{\r\n            margin: 10,\r\n            color: \"black\",\r\n            fontWeight: \"bold\",\r\n            display: \"flex\",\r\n            flexWrap: \"wrap\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          {DateNow1}\r\n          <Button\r\n            onClick={() => getdata()}\r\n            component={\"C\"}\r\n            title=\"Làm mới dữ liệu\"\r\n          >\r\n            <CachedIcon />\r\n          </Button>\r\n        </div>\r\n        <TreeView\r\n          className={classes.sizeIcon}\r\n          defaultCollapseIcon={<ExpandMoreIcon />}\r\n          defaultExpandIcon={<ChevronRightIcon />}\r\n          defaultExpanded={[1]}\r\n        >\r\n          {fetchedData ? (\r\n            fetchedData.map((post) => render(post, fetchedData))\r\n          ) : (\r\n            <Loading />\r\n          )}\r\n        </TreeView>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\util\\optionloaitb.js",[],"E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\main\\MainAppBar.js",["777","778"],"import React, { useEffect, useContext } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport {\r\n  AppBar,\r\n  IconButton,\r\n  makeStyles,\r\n  Toolbar,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { AuthenContext } from \"./contexts/AuthenContext\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  tab: {\r\n    padding: 0,\r\n    margin: 0,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n    justifyContent: \"flex-end\",\r\n    display: \"flex\",\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    color: \"white\",\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"block\",\r\n    },\r\n    maxWidth: \"80%\",\r\n  },\r\n  sectionDesktop: {\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"flex\",\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: \"flex\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  labelContainer: {\r\n    width: \"auto\",\r\n    backgroundColor: \"black\",\r\n  },\r\n  iconLabelWrapper: {\r\n    flexDirection: \"row\",\r\n    minHeight: \"auto\",\r\n    padding: 0,\r\n    margin: 0,\r\n  },\r\n  labelIcon: {\r\n    padding: 3,\r\n    minHeight: \"auto\",\r\n  },\r\n  LinkTab: {\r\n    padding: 0,\r\n    margin: 0,\r\n  },\r\n  LinkTab1: {\r\n    height: 1,\r\n    minHeight: 50,\r\n  },\r\n  square: {\r\n    height: 100,\r\n    width: 100,\r\n  },\r\n}));\r\n\r\nexport default function MainAppBar(props) {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const { LogOut } = useContext(AuthenContext);\r\n  // const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const ModeShowVideo = useSelector((state) => state.modeshowvideo);\r\n\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const handleClick = () => {\r\n    handleMenuClose();\r\n    navigate(\"/app/thongtincanhan\");\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const menuId = \"primary-search-account-menu\";\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={() => handleClick()}>Thông tin cá nhân</MenuItem>\r\n      <MenuItem onClick={() => LogOut()}>Đăng Xuất</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  // ẩn thanh active khi không liên quan\r\n\r\n  useEffect(() => {\r\n    var falsecolor = \"RGB(193, 197, 221)\";\r\n    var truecolor = \"RGB(255, 255, 255)\";\r\n    var path = window.location.pathname;\r\n    if (path === \"/app/thongtincanhan\" || path === \"/app/\") {\r\n      if (document.querySelector(\"[aria-selected=true]\")) {\r\n        document.querySelector(\"[aria-selected=true]\").style.color = falsecolor;\r\n        document.getElementsByClassName(\"MuiTabs-indicator\")[0].style.display =\r\n          \"none\";\r\n      }\r\n    } else {\r\n      if (document.querySelector(\"[aria-selected=true]\")) {\r\n        document.querySelector(\"[aria-selected=true]\").style.color = truecolor;\r\n        document.getElementsByClassName(\"MuiTabs-indicator\")[0].style.display =\r\n          \"block\";\r\n      }\r\n    }\r\n    // chuyển hướng ra trang chủ nếu ở app\r\n    if (path === \"/app/\") {\r\n      navigate(\"/app/trangchu\", { replace: true });\r\n    }\r\n  });\r\n\r\n  //---------------------------------------------\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>\r\n          Hệ thống kiểm tra, giám sát và phát hiện bất thường TB, ĐZ lưới cao\r\n          thế 110 kV\r\n        </title>\r\n      </Helmet>\r\n      {ModeShowVideo !== \"LIVE\" && (\r\n        <div id={\"main_title\"} className={classes.grow}>\r\n          <AppBar position=\"static\">\r\n            <Toolbar>\r\n              <Typography className={classes.title} variant=\"h3\" Wrap>\r\n                Hệ thống kiểm tra, giám sát và phát hiện bất thường TB, ĐZ lưới\r\n                cao thế 110 kV\r\n              </Typography>\r\n              <div className={classes.grow}>\r\n                <>\r\n                  <IconButton\r\n                    aria-label=\"show 17 new notifications\"\r\n                    color=\"inherit\"\r\n                    component={\"C\"}\r\n                  >\r\n                    <Badge badgeContent={17} color=\"secondary\">\r\n                      <NotificationsIcon />\r\n                    </Badge>\r\n                  </IconButton>\r\n                  <IconButton\r\n                    edge=\"end\"\r\n                    aria-label=\"account of current user\"\r\n                    aria-controls={menuId}\r\n                    aria-haspopup=\"true\"\r\n                    onClick={handleProfileMenuOpen}\r\n                    color=\"inherit\"\r\n                    component={\"C\"}\r\n                  >\r\n                    <AccountCircle />\r\n                  </IconButton>{\" \"}\r\n                </>\r\n              </div>\r\n              {/*\r\n            <div className={classes.sectionDesktop}>\r\n              {ModeShowVideo !== \"LIVE\" ? (\r\n                <>\r\n                  <IconButton\r\n                    aria-label=\"show 17 new notifications\"\r\n                    color=\"inherit\"\r\n                    component={\"C\"}\r\n                  >\r\n                    <Badge badgeContent={17} color=\"secondary\">\r\n                      <NotificationsIcon />\r\n                    </Badge>\r\n                  </IconButton>\r\n                  <IconButton\r\n                    edge=\"end\"\r\n                    aria-label=\"account of current user\"\r\n                    aria-controls={menuId}\r\n                    aria-haspopup=\"true\"\r\n                    onClick={handleProfileMenuOpen}\r\n                    color=\"inherit\"\r\n                    component={\"C\"}\r\n                  >\r\n                    <AccountCircle />\r\n                  </IconButton>{\" \"}\r\n                </>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </div>*/}\r\n            </Toolbar>\r\n          </AppBar>\r\n          {renderMenu}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","E:\\1-Quang\\Rebuild\\testt\\plisystem\\src\\component\\generalObject\\slideshow-gallery\\SlideshowGallery2.js",["779","780","781","782","783","784","785"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./slideshow-gallery.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as actions from \"../../../redux/types\";\r\nimport { ChangerUrl } from \"../../../util/ChangeUrl\";\r\n\r\nconst SlideshowGallery = (props) => {\r\n  const [state, setState] = useState({ slideIndex: 0 });\r\n  const [containerElm, setcontainerElm] = useState(0);\r\n  const [containerBottomElm, setcontainerBottomElm] = useState(0);\r\n  const refcontainerElm = useRef(null);\r\n  const refcontainerBottomElm = useRef(null);\r\n  const ratioWHArray = props.ratio.split(\":\");\r\n  const ratioWH = ratioWHArray[0] / ratioWHArray[1];\r\n  const idx = useSelector((state) => state.slideIndex);\r\n  const type = props.type;\r\n\r\n  const getNewSlideIndex = (step) => {\r\n    const slideIndex = state.slideIndex;\r\n    const numberSlide = props.input.length;\r\n\r\n    let newSlideIndex = slideIndex + step;\r\n\r\n    if (newSlideIndex >= numberSlide) newSlideIndex = 0;\r\n    else if (newSlideIndex < 0) newSlideIndex = numberSlide - 1;\r\n\r\n    return newSlideIndex;\r\n  };\r\n\r\n  const backward = () => {\r\n    setState({\r\n      slideIndex: getNewSlideIndex(-1),\r\n    });\r\n  };\r\n\r\n  const forward = () => {\r\n    setState({\r\n      slideIndex: getNewSlideIndex(1),\r\n    });\r\n  };\r\n\r\n  const setSlideIndex = (index) => {\r\n    setState({\r\n      slideIndex: index,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (idx && typeof idx === \"number\" && idx >= 0 && idx <= props.input.length)\r\n      setSlideIndex(idx);\r\n    else setSlideIndex(0);\r\n  }, [idx]);\r\n\r\n  const updateDimensions = () => {\r\n    if (refcontainerElm.current)\r\n      setcontainerElm(refcontainerElm.current.offsetWidth / ratioWH);\r\n    if (refcontainerBottomElm.current)\r\n      setcontainerBottomElm(\r\n        refcontainerBottomElm.current.offsetWidth / props.input.length / ratioWH\r\n      );\r\n  };\r\n\r\n  const runAutomatic = () => {\r\n    setState({\r\n      slideIndex: getNewSlideIndex(1),\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    updateDimensions();\r\n    window.addEventListener(\"resize\", updateDimensions);\r\n    let automaticInterval;\r\n    if (props.mode === \"automatic\") {\r\n      const timeout = props.timeout || 5000;\r\n\r\n      automaticInterval = setInterval(\r\n        () => runAutomatic(),\r\n        Number.parseInt(timeout)\r\n      );\r\n    }\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", updateDimensions);\r\n      if (automaticInterval) clearInterval(automaticInterval);\r\n    };\r\n  }, [props.input]);\r\n\r\n  useEffect(() => {\r\n    updateDimensions();\r\n    window.addEventListener(\"resize\", updateDimensions);\r\n    let automaticInterval;\r\n    if (props.mode === \"automatic\") {\r\n      const timeout = props.timeout || 5000;\r\n\r\n      automaticInterval = setInterval(\r\n        () => runAutomatic(),\r\n        Number.parseInt(timeout)\r\n      );\r\n    }\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", updateDimensions);\r\n      if (automaticInterval) clearInterval(automaticInterval);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"lp-slideshow-gallery\">\r\n      <div\r\n        className=\"container\"\r\n        style={{ height: containerElm }}\r\n        ref={refcontainerElm}\r\n      >\r\n        <div className=\"slide active\">\r\n          <div className=\"number-text\">\r\n            {`${state.slideIndex + 1} / ${props.input.length}`}\r\n          </div>\r\n          <img\r\n            className=\"image\"\r\n            src={ChangerUrl(props.input[state.slideIndex])}\r\n            alt=\"image\"\r\n          />\r\n        </div>\r\n\r\n        <span className=\"prev\" onClick={backward}>\r\n          ❮\r\n        </span>\r\n        <span className=\"next\" onClick={forward}>\r\n          ❯\r\n        </span>\r\n      </div>\r\n\r\n      {\r\n        <div\r\n          className=\"container-bottom\"\r\n          style={{ height: containerBottomElm }}\r\n          ref={refcontainerBottomElm}\r\n        >\r\n          {props.input.map((image, index) => {\r\n            return (\r\n              <img\r\n                key={index}\r\n                src={ChangerUrl(image)}\r\n                alt={index}\r\n                className={`image ${\r\n                  state.slideIndex === index ? \"active\" : \"\"\r\n                }`}\r\n                onClick={() => setSlideIndex(index)}\r\n                style={{\r\n                  width: `${(1 / props.input.length) * 100}%`,\r\n                  height: `100%`,\r\n                }}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n};\r\nexport default SlideshowGallery;\r\n",{"ruleId":"786","replacedBy":"787"},{"ruleId":"788","replacedBy":"789"},{"ruleId":"790","severity":1,"message":"791","line":14,"column":8,"nodeType":"792","messageId":"793","endLine":14,"endColumn":12},{"ruleId":"790","severity":1,"message":"794","line":19,"column":8,"nodeType":"792","messageId":"793","endLine":19,"endColumn":21},{"ruleId":"790","severity":1,"message":"795","line":9,"column":9,"nodeType":"792","messageId":"793","endLine":9,"endColumn":25},{"ruleId":"796","severity":1,"message":"797","line":50,"column":6,"nodeType":"798","endLine":50,"endColumn":8,"suggestions":"799"},{"ruleId":"800","severity":1,"message":"801","line":60,"column":16,"nodeType":"802","messageId":"803","endLine":60,"endColumn":18},{"ruleId":"796","severity":1,"message":"804","line":69,"column":6,"nodeType":"798","endLine":69,"endColumn":17,"suggestions":"805"},{"ruleId":"796","severity":1,"message":"806","line":104,"column":6,"nodeType":"798","endLine":104,"endColumn":8,"suggestions":"807"},{"ruleId":"808","severity":1,"message":"809","line":19,"column":17,"nodeType":"810","endLine":19,"endColumn":50},{"ruleId":"796","severity":1,"message":"811","line":260,"column":6,"nodeType":"798","endLine":260,"endColumn":8,"suggestions":"812"},{"ruleId":"796","severity":1,"message":"813","line":301,"column":6,"nodeType":"798","endLine":301,"endColumn":8,"suggestions":"814"},{"ruleId":"796","severity":1,"message":"815","line":328,"column":6,"nodeType":"798","endLine":328,"endColumn":8,"suggestions":"816"},{"ruleId":"790","severity":1,"message":"817","line":6,"column":8,"nodeType":"792","messageId":"793","endLine":6,"endColumn":17},{"ruleId":"790","severity":1,"message":"818","line":21,"column":10,"nodeType":"792","messageId":"793","endLine":21,"endColumn":20},{"ruleId":"800","severity":1,"message":"801","line":94,"column":36,"nodeType":"802","messageId":"803","endLine":94,"endColumn":38},{"ruleId":"796","severity":1,"message":"819","line":96,"column":6,"nodeType":"798","endLine":96,"endColumn":8,"suggestions":"820"},{"ruleId":"800","severity":1,"message":"801","line":120,"column":36,"nodeType":"802","messageId":"803","endLine":120,"endColumn":38},{"ruleId":"796","severity":1,"message":"819","line":122,"column":6,"nodeType":"798","endLine":122,"endColumn":30,"suggestions":"821"},{"ruleId":"796","severity":1,"message":"822","line":145,"column":6,"nodeType":"798","endLine":145,"endColumn":8,"suggestions":"823"},{"ruleId":"796","severity":1,"message":"824","line":168,"column":6,"nodeType":"798","endLine":168,"endColumn":8,"suggestions":"825"},{"ruleId":"796","severity":1,"message":"824","line":191,"column":6,"nodeType":"798","endLine":191,"endColumn":13,"suggestions":"826"},{"ruleId":"796","severity":1,"message":"827","line":33,"column":6,"nodeType":"798","endLine":33,"endColumn":8,"suggestions":"828"},{"ruleId":"790","severity":1,"message":"829","line":2,"column":10,"nodeType":"792","messageId":"793","endLine":2,"endColumn":19},{"ruleId":"790","severity":1,"message":"830","line":3,"column":8,"nodeType":"792","messageId":"793","endLine":3,"endColumn":16},{"ruleId":"790","severity":1,"message":"831","line":35,"column":3,"nodeType":"792","messageId":"793","endLine":35,"endColumn":14},{"ruleId":"790","severity":1,"message":"832","line":36,"column":3,"nodeType":"792","messageId":"793","endLine":36,"endColumn":13},{"ruleId":"790","severity":1,"message":"833","line":37,"column":3,"nodeType":"792","messageId":"793","endLine":37,"endColumn":12},{"ruleId":"790","severity":1,"message":"834","line":111,"column":9,"nodeType":"792","messageId":"793","endLine":111,"endColumn":16},{"ruleId":"796","severity":1,"message":"835","line":141,"column":6,"nodeType":"798","endLine":141,"endColumn":48,"suggestions":"836"},{"ruleId":"796","severity":1,"message":"819","line":161,"column":6,"nodeType":"798","endLine":161,"endColumn":8,"suggestions":"837"},{"ruleId":"796","severity":1,"message":"822","line":181,"column":6,"nodeType":"798","endLine":181,"endColumn":8,"suggestions":"838"},{"ruleId":"839","severity":1,"message":"840","line":288,"column":26,"nodeType":"841","messageId":"842","endLine":288,"endColumn":37},{"ruleId":"843","severity":1,"message":"844","line":290,"column":22,"nodeType":"841","messageId":"842","endLine":290,"endColumn":34},{"ruleId":"843","severity":1,"message":"844","line":296,"column":22,"nodeType":"841","messageId":"842","endLine":296,"endColumn":34},{"ruleId":"790","severity":1,"message":"845","line":678,"column":12,"nodeType":"792","messageId":"793","endLine":678,"endColumn":24},{"ruleId":"790","severity":1,"message":"846","line":686,"column":9,"nodeType":"792","messageId":"793","endLine":686,"endColumn":18},{"ruleId":"790","severity":1,"message":"847","line":708,"column":7,"nodeType":"792","messageId":"793","endLine":708,"endColumn":17},{"ruleId":"790","severity":1,"message":"848","line":710,"column":10,"nodeType":"792","messageId":"793","endLine":710,"endColumn":15},{"ruleId":"790","severity":1,"message":"849","line":710,"column":17,"nodeType":"792","messageId":"793","endLine":710,"endColumn":25},{"ruleId":"790","severity":1,"message":"850","line":712,"column":12,"nodeType":"792","messageId":"793","endLine":712,"endColumn":24},{"ruleId":"790","severity":1,"message":"851","line":712,"column":26,"nodeType":"792","messageId":"793","endLine":712,"endColumn":37},{"ruleId":"790","severity":1,"message":"852","line":712,"column":41,"nodeType":"792","messageId":"793","endLine":712,"endColumn":60},{"ruleId":"790","severity":1,"message":"853","line":1,"column":9,"nodeType":"792","messageId":"793","endLine":1,"endColumn":15},{"ruleId":"790","severity":1,"message":"854","line":517,"column":19,"nodeType":"792","messageId":"793","endLine":517,"endColumn":29},{"ruleId":"790","severity":1,"message":"855","line":518,"column":10,"nodeType":"792","messageId":"793","endLine":518,"endColumn":19},{"ruleId":"790","severity":1,"message":"856","line":518,"column":21,"nodeType":"792","messageId":"793","endLine":518,"endColumn":33},{"ruleId":"790","severity":1,"message":"857","line":519,"column":9,"nodeType":"792","messageId":"793","endLine":519,"endColumn":13},{"ruleId":"790","severity":1,"message":"858","line":521,"column":10,"nodeType":"792","messageId":"793","endLine":521,"endColumn":17},{"ruleId":"790","severity":1,"message":"859","line":522,"column":22,"nodeType":"792","messageId":"793","endLine":522,"endColumn":35},{"ruleId":"860","severity":1,"message":"861","line":591,"column":35,"nodeType":"862","messageId":"863","endLine":591,"endColumn":37},{"ruleId":"796","severity":1,"message":"864","line":594,"column":6,"nodeType":"798","endLine":594,"endColumn":8,"suggestions":"865"},{"ruleId":"790","severity":1,"message":"866","line":604,"column":12,"nodeType":"792","messageId":"793","endLine":604,"endColumn":27},{"ruleId":"860","severity":1,"message":"867","line":616,"column":50,"nodeType":"862","messageId":"868","endLine":616,"endColumn":52},{"ruleId":"790","severity":1,"message":"853","line":1,"column":10,"nodeType":"792","messageId":"793","endLine":1,"endColumn":16},{"ruleId":"790","severity":1,"message":"869","line":8,"column":3,"nodeType":"792","messageId":"793","endLine":8,"endColumn":6},{"ruleId":"790","severity":1,"message":"870","line":10,"column":3,"nodeType":"792","messageId":"793","endLine":10,"endColumn":12},{"ruleId":"790","severity":1,"message":"871","line":24,"column":10,"nodeType":"792","messageId":"793","endLine":24,"endColumn":26},{"ruleId":"790","severity":1,"message":"872","line":24,"column":28,"nodeType":"792","messageId":"793","endLine":24,"endColumn":46},{"ruleId":"790","severity":1,"message":"818","line":30,"column":10,"nodeType":"792","messageId":"793","endLine":30,"endColumn":20},{"ruleId":"790","severity":1,"message":"873","line":47,"column":10,"nodeType":"792","messageId":"793","endLine":47,"endColumn":21},{"ruleId":"790","severity":1,"message":"874","line":51,"column":9,"nodeType":"792","messageId":"793","endLine":51,"endColumn":16},{"ruleId":"790","severity":1,"message":"875","line":67,"column":9,"nodeType":"792","messageId":"793","endLine":67,"endColumn":23},{"ruleId":"796","severity":1,"message":"822","line":85,"column":6,"nodeType":"798","endLine":85,"endColumn":8,"suggestions":"876"},{"ruleId":"796","severity":1,"message":"877","line":122,"column":6,"nodeType":"798","endLine":122,"endColumn":19,"suggestions":"878"},{"ruleId":"800","severity":1,"message":"879","line":126,"column":36,"nodeType":"802","messageId":"803","endLine":126,"endColumn":38},{"ruleId":"796","severity":1,"message":"880","line":144,"column":6,"nodeType":"798","endLine":144,"endColumn":13,"suggestions":"881"},{"ruleId":"790","severity":1,"message":"882","line":4,"column":3,"nodeType":"792","messageId":"793","endLine":4,"endColumn":9},{"ruleId":"790","severity":1,"message":"883","line":11,"column":17,"nodeType":"792","messageId":"793","endLine":11,"endColumn":26},{"ruleId":"790","severity":1,"message":"884","line":12,"column":10,"nodeType":"792","messageId":"793","endLine":12,"endColumn":15},{"ruleId":"790","severity":1,"message":"885","line":12,"column":17,"nodeType":"792","messageId":"793","endLine":12,"endColumn":21},{"ruleId":"790","severity":1,"message":"886","line":12,"column":23,"nodeType":"792","messageId":"793","endLine":12,"endColumn":30},{"ruleId":"790","severity":1,"message":"887","line":17,"column":10,"nodeType":"792","messageId":"793","endLine":17,"endColumn":15},{"ruleId":"790","severity":1,"message":"888","line":17,"column":17,"nodeType":"792","messageId":"793","endLine":17,"endColumn":25},{"ruleId":"790","severity":1,"message":"874","line":20,"column":9,"nodeType":"792","messageId":"793","endLine":20,"endColumn":16},{"ruleId":"790","severity":1,"message":"889","line":23,"column":9,"nodeType":"792","messageId":"793","endLine":23,"endColumn":12},{"ruleId":"790","severity":1,"message":"890","line":30,"column":13,"nodeType":"792","messageId":"793","endLine":30,"endColumn":18},{"ruleId":"800","severity":1,"message":"801","line":59,"column":48,"nodeType":"802","messageId":"803","endLine":59,"endColumn":50},{"ruleId":"790","severity":1,"message":"891","line":2,"column":10,"nodeType":"792","messageId":"793","endLine":2,"endColumn":18},{"ruleId":"796","severity":1,"message":"804","line":9,"column":6,"nodeType":"798","endLine":9,"endColumn":8,"suggestions":"892"},{"ruleId":"790","severity":1,"message":"893","line":10,"column":8,"nodeType":"792","messageId":"793","endLine":10,"endColumn":18},{"ruleId":"790","severity":1,"message":"894","line":13,"column":8,"nodeType":"792","messageId":"793","endLine":13,"endColumn":15},{"ruleId":"790","severity":1,"message":"895","line":26,"column":8,"nodeType":"792","messageId":"793","endLine":26,"endColumn":21},{"ruleId":"790","severity":1,"message":"896","line":27,"column":8,"nodeType":"792","messageId":"793","endLine":27,"endColumn":20},{"ruleId":"790","severity":1,"message":"897","line":93,"column":10,"nodeType":"792","messageId":"793","endLine":93,"endColumn":15},{"ruleId":"790","severity":1,"message":"898","line":95,"column":10,"nodeType":"792","messageId":"793","endLine":95,"endColumn":15},{"ruleId":"790","severity":1,"message":"899","line":117,"column":9,"nodeType":"792","messageId":"793","endLine":117,"endColumn":13},{"ruleId":"796","severity":1,"message":"900","line":173,"column":6,"nodeType":"798","endLine":173,"endColumn":8,"suggestions":"901"},{"ruleId":"796","severity":1,"message":"902","line":239,"column":6,"nodeType":"798","endLine":239,"endColumn":8,"suggestions":"903"},{"ruleId":"796","severity":1,"message":"904","line":285,"column":6,"nodeType":"798","endLine":285,"endColumn":8,"suggestions":"905"},{"ruleId":"800","severity":1,"message":"801","line":327,"column":42,"nodeType":"802","messageId":"803","endLine":327,"endColumn":44},{"ruleId":"796","severity":1,"message":"906","line":354,"column":6,"nodeType":"798","endLine":354,"endColumn":8,"suggestions":"907"},{"ruleId":"790","severity":1,"message":"908","line":424,"column":12,"nodeType":"792","messageId":"793","endLine":424,"endColumn":18},{"ruleId":"909","severity":1,"message":"910","line":1,"column":1,"nodeType":"911","endLine":35,"endColumn":3},{"ruleId":"909","severity":1,"message":"912","line":1,"column":1,"nodeType":"911","endLine":27,"endColumn":3},{"ruleId":"913","severity":1,"message":"914","line":807,"column":5,"nodeType":"915","messageId":"803","endLine":807,"endColumn":8},{"ruleId":"790","severity":1,"message":"916","line":28,"column":9,"nodeType":"792","messageId":"793","endLine":28,"endColumn":19},{"ruleId":"917","severity":1,"message":"918","line":161,"column":11,"nodeType":"810","messageId":"919","endLine":161,"endColumn":23},{"ruleId":"790","severity":1,"message":"920","line":8,"column":10,"nodeType":"792","messageId":"793","endLine":8,"endColumn":16},{"ruleId":"790","severity":1,"message":"921","line":9,"column":8,"nodeType":"792","messageId":"793","endLine":9,"endColumn":23},{"ruleId":"917","severity":1,"message":"918","line":160,"column":11,"nodeType":"810","messageId":"919","endLine":160,"endColumn":23},{"ruleId":"790","severity":1,"message":"874","line":22,"column":9,"nodeType":"792","messageId":"793","endLine":22,"endColumn":16},{"ruleId":"790","severity":1,"message":"922","line":25,"column":9,"nodeType":"792","messageId":"793","endLine":25,"endColumn":14},{"ruleId":"800","severity":1,"message":"879","line":41,"column":36,"nodeType":"802","messageId":"803","endLine":41,"endColumn":38},{"ruleId":"923","severity":1,"message":"924","line":84,"column":23,"nodeType":"810","endLine":94,"endColumn":25},{"ruleId":"923","severity":1,"message":"924","line":140,"column":23,"nodeType":"810","endLine":150,"endColumn":25},{"ruleId":"923","severity":1,"message":"924","line":196,"column":23,"nodeType":"810","endLine":206,"endColumn":25},{"ruleId":"790","severity":1,"message":"925","line":1,"column":28,"nodeType":"792","messageId":"793","endLine":1,"endColumn":36},{"ruleId":"843","severity":1,"message":"844","line":118,"column":22,"nodeType":"841","messageId":"842","endLine":118,"endColumn":34},{"ruleId":"843","severity":1,"message":"844","line":121,"column":30,"nodeType":"841","messageId":"842","endLine":121,"endColumn":42},{"ruleId":"843","severity":1,"message":"844","line":123,"column":31,"nodeType":"841","messageId":"842","endLine":123,"endColumn":43},{"ruleId":"796","severity":1,"message":"926","line":155,"column":6,"nodeType":"798","endLine":155,"endColumn":26,"suggestions":"927"},{"ruleId":"796","severity":1,"message":"928","line":189,"column":6,"nodeType":"798","endLine":189,"endColumn":8,"suggestions":"929"},{"ruleId":"796","severity":1,"message":"930","line":199,"column":6,"nodeType":"798","endLine":199,"endColumn":16,"suggestions":"931"},{"ruleId":"790","severity":1,"message":"932","line":13,"column":8,"nodeType":"792","messageId":"793","endLine":13,"endColumn":16},{"ruleId":"796","severity":1,"message":"933","line":187,"column":6,"nodeType":"798","endLine":187,"endColumn":8,"suggestions":"934"},{"ruleId":"796","severity":1,"message":"935","line":226,"column":6,"nodeType":"798","endLine":226,"endColumn":8,"suggestions":"936"},{"ruleId":"796","severity":1,"message":"902","line":261,"column":6,"nodeType":"798","endLine":261,"endColumn":8,"suggestions":"937"},{"ruleId":"796","severity":1,"message":"938","line":275,"column":6,"nodeType":"798","endLine":275,"endColumn":19,"suggestions":"939"},{"ruleId":"917","severity":1,"message":"918","line":27,"column":7,"nodeType":"810","messageId":"919","endLine":27,"endColumn":19},{"ruleId":"790","severity":1,"message":"940","line":1,"column":38,"nodeType":"792","messageId":"793","endLine":1,"endColumn":48},{"ruleId":"790","severity":1,"message":"941","line":30,"column":3,"nodeType":"792","messageId":"793","endLine":30,"endColumn":12},{"ruleId":"790","severity":1,"message":"942","line":31,"column":3,"nodeType":"792","messageId":"793","endLine":31,"endColumn":20},{"ruleId":"790","severity":1,"message":"943","line":32,"column":3,"nodeType":"792","messageId":"793","endLine":32,"endColumn":19},{"ruleId":"790","severity":1,"message":"944","line":33,"column":3,"nodeType":"792","messageId":"793","endLine":33,"endColumn":9},{"ruleId":"790","severity":1,"message":"945","line":35,"column":10,"nodeType":"792","messageId":"793","endLine":35,"endColumn":25},{"ruleId":"790","severity":1,"message":"946","line":36,"column":10,"nodeType":"792","messageId":"793","endLine":36,"endColumn":20},{"ruleId":"790","severity":1,"message":"947","line":37,"column":10,"nodeType":"792","messageId":"793","endLine":37,"endColumn":24},{"ruleId":"790","severity":1,"message":"948","line":39,"column":10,"nodeType":"792","messageId":"793","endLine":39,"endColumn":14},{"ruleId":"790","severity":1,"message":"949","line":41,"column":10,"nodeType":"792","messageId":"793","endLine":41,"endColumn":22},{"ruleId":"796","severity":1,"message":"824","line":149,"column":6,"nodeType":"798","endLine":149,"endColumn":8,"suggestions":"950"},{"ruleId":"796","severity":1,"message":"824","line":172,"column":6,"nodeType":"798","endLine":172,"endColumn":19,"suggestions":"951"},{"ruleId":"839","severity":1,"message":"840","line":178,"column":26,"nodeType":"841","messageId":"842","endLine":178,"endColumn":37},{"ruleId":"800","severity":1,"message":"879","line":185,"column":54,"nodeType":"802","messageId":"803","endLine":185,"endColumn":56},{"ruleId":"800","severity":1,"message":"879","line":186,"column":54,"nodeType":"802","messageId":"803","endLine":186,"endColumn":56},{"ruleId":"843","severity":1,"message":"844","line":191,"column":26,"nodeType":"841","messageId":"842","endLine":191,"endColumn":38},{"ruleId":"952","severity":1,"message":"953","line":211,"column":15,"nodeType":"792","messageId":"954","endLine":211,"endColumn":23},{"ruleId":"843","severity":1,"message":"844","line":211,"column":26,"nodeType":"841","messageId":"842","endLine":211,"endColumn":38},{"ruleId":"952","severity":1,"message":"955","line":217,"column":15,"nodeType":"792","messageId":"954","endLine":217,"endColumn":23},{"ruleId":"796","severity":1,"message":"956","line":231,"column":6,"nodeType":"798","endLine":231,"endColumn":17,"suggestions":"957"},{"ruleId":"796","severity":1,"message":"958","line":282,"column":6,"nodeType":"798","endLine":282,"endColumn":13,"suggestions":"959"},{"ruleId":"796","severity":1,"message":"960","line":286,"column":6,"nodeType":"798","endLine":286,"endColumn":17,"suggestions":"961"},{"ruleId":"790","severity":1,"message":"962","line":290,"column":9,"nodeType":"792","messageId":"793","endLine":290,"endColumn":15},{"ruleId":"790","severity":1,"message":"963","line":291,"column":9,"nodeType":"792","messageId":"793","endLine":291,"endColumn":15},{"ruleId":"790","severity":1,"message":"964","line":294,"column":9,"nodeType":"792","messageId":"793","endLine":294,"endColumn":13},{"ruleId":"790","severity":1,"message":"965","line":295,"column":11,"nodeType":"792","messageId":"793","endLine":295,"endColumn":14},{"ruleId":"790","severity":1,"message":"966","line":302,"column":9,"nodeType":"792","messageId":"793","endLine":302,"endColumn":14},{"ruleId":"860","severity":1,"message":"967","line":312,"column":41,"nodeType":"862","messageId":"868","endLine":312,"endColumn":43},{"ruleId":"790","severity":1,"message":"965","line":396,"column":23,"nodeType":"792","messageId":"793","endLine":396,"endColumn":26},{"ruleId":"796","severity":1,"message":"926","line":83,"column":6,"nodeType":"798","endLine":83,"endColumn":13,"suggestions":"968"},{"ruleId":"917","severity":1,"message":"918","line":223,"column":9,"nodeType":"810","messageId":"919","endLine":223,"endColumn":21},{"ruleId":"913","severity":1,"message":"969","line":249,"column":13,"nodeType":"915","messageId":"803","endLine":249,"endColumn":23},{"ruleId":"913","severity":1,"message":"969","line":269,"column":13,"nodeType":"915","messageId":"803","endLine":269,"endColumn":23},{"ruleId":"796","severity":1,"message":"970","line":140,"column":6,"nodeType":"798","endLine":140,"endColumn":8,"suggestions":"971"},{"ruleId":"796","severity":1,"message":"935","line":179,"column":6,"nodeType":"798","endLine":179,"endColumn":8,"suggestions":"972"},{"ruleId":"796","severity":1,"message":"824","line":202,"column":6,"nodeType":"798","endLine":202,"endColumn":8,"suggestions":"973"},{"ruleId":"796","severity":1,"message":"824","line":225,"column":6,"nodeType":"798","endLine":225,"endColumn":13,"suggestions":"974"},{"ruleId":"860","severity":1,"message":"861","line":278,"column":45,"nodeType":"862","messageId":"863","endLine":278,"endColumn":47},{"ruleId":"843","severity":1,"message":"844","line":279,"column":27,"nodeType":"841","messageId":"842","endLine":279,"endColumn":39},{"ruleId":"796","severity":1,"message":"975","line":350,"column":6,"nodeType":"798","endLine":350,"endColumn":8,"suggestions":"976"},{"ruleId":"796","severity":1,"message":"977","line":360,"column":6,"nodeType":"798","endLine":360,"endColumn":19,"suggestions":"978"},{"ruleId":"860","severity":1,"message":"861","line":372,"column":52,"nodeType":"862","messageId":"863","endLine":372,"endColumn":54},{"ruleId":"796","severity":1,"message":"979","line":387,"column":6,"nodeType":"798","endLine":387,"endColumn":20,"suggestions":"980"},{"ruleId":"790","severity":1,"message":"981","line":1,"column":27,"nodeType":"792","messageId":"793","endLine":1,"endColumn":33},{"ruleId":"796","severity":1,"message":"982","line":61,"column":6,"nodeType":"798","endLine":61,"endColumn":11,"suggestions":"983"},{"ruleId":"796","severity":1,"message":"984","line":95,"column":6,"nodeType":"798","endLine":95,"endColumn":19,"suggestions":"985"},{"ruleId":"796","severity":1,"message":"984","line":114,"column":6,"nodeType":"798","endLine":114,"endColumn":8,"suggestions":"986"},{"ruleId":"987","severity":1,"message":"988","line":150,"column":11,"nodeType":"810","endLine":163,"endColumn":13},{"ruleId":"796","severity":1,"message":"989","line":152,"column":6,"nodeType":"798","endLine":152,"endColumn":12,"suggestions":"990"},{"ruleId":"839","severity":1,"message":"840","line":159,"column":32,"nodeType":"841","messageId":"842","endLine":159,"endColumn":43},{"ruleId":"843","severity":1,"message":"844","line":167,"column":28,"nodeType":"841","messageId":"842","endLine":167,"endColumn":40},{"ruleId":"843","severity":1,"message":"844","line":173,"column":28,"nodeType":"841","messageId":"842","endLine":173,"endColumn":40},{"ruleId":"796","severity":1,"message":"991","line":196,"column":6,"nodeType":"798","endLine":196,"endColumn":15,"suggestions":"992"},{"ruleId":"790","severity":1,"message":"993","line":4,"column":8,"nodeType":"792","messageId":"793","endLine":4,"endColumn":19},{"ruleId":"860","severity":1,"message":"861","line":91,"column":30,"nodeType":"862","messageId":"863","endLine":91,"endColumn":32},{"ruleId":"843","severity":1,"message":"844","line":92,"column":23,"nodeType":"841","messageId":"842","endLine":92,"endColumn":35},{"ruleId":"796","severity":1,"message":"979","line":101,"column":6,"nodeType":"798","endLine":101,"endColumn":13,"suggestions":"994"},{"ruleId":"923","severity":1,"message":"924","line":157,"column":21,"nodeType":"810","endLine":168,"endColumn":23},{"ruleId":"923","severity":1,"message":"924","line":258,"column":25,"nodeType":"810","endLine":263,"endColumn":27},{"ruleId":"790","severity":1,"message":"995","line":23,"column":23,"nodeType":"792","messageId":"793","endLine":23,"endColumn":34},{"ruleId":"923","severity":1,"message":"924","line":104,"column":21,"nodeType":"810","endLine":115,"endColumn":23},{"ruleId":"800","severity":1,"message":"801","line":117,"column":34,"nodeType":"802","messageId":"803","endLine":117,"endColumn":36},{"ruleId":"800","severity":1,"message":"801","line":122,"column":34,"nodeType":"802","messageId":"803","endLine":122,"endColumn":36},{"ruleId":"790","severity":1,"message":"996","line":47,"column":9,"nodeType":"792","messageId":"793","endLine":47,"endColumn":25},{"ruleId":"790","severity":1,"message":"995","line":28,"column":23,"nodeType":"792","messageId":"793","endLine":28,"endColumn":34},{"ruleId":"800","severity":1,"message":"879","line":157,"column":14,"nodeType":"802","messageId":"803","endLine":157,"endColumn":16},{"ruleId":"800","severity":1,"message":"879","line":159,"column":21,"nodeType":"802","messageId":"803","endLine":159,"endColumn":23},{"ruleId":"796","severity":1,"message":"997","line":164,"column":6,"nodeType":"798","endLine":164,"endColumn":23,"suggestions":"998"},{"ruleId":"796","severity":1,"message":"989","line":177,"column":6,"nodeType":"798","endLine":177,"endColumn":12,"suggestions":"999"},{"ruleId":"839","severity":1,"message":"840","line":184,"column":32,"nodeType":"841","messageId":"842","endLine":184,"endColumn":43},{"ruleId":"843","severity":1,"message":"844","line":192,"column":28,"nodeType":"841","messageId":"842","endLine":192,"endColumn":40},{"ruleId":"843","severity":1,"message":"844","line":198,"column":28,"nodeType":"841","messageId":"842","endLine":198,"endColumn":40},{"ruleId":"796","severity":1,"message":"991","line":221,"column":6,"nodeType":"798","endLine":221,"endColumn":15,"suggestions":"1000"},{"ruleId":"790","severity":1,"message":"1001","line":223,"column":9,"nodeType":"792","messageId":"793","endLine":223,"endColumn":30},{"ruleId":"1002","severity":1,"message":"1003","line":255,"column":7,"nodeType":"1004","messageId":"1005","endLine":265,"endColumn":8},{"ruleId":"790","severity":1,"message":"1006","line":289,"column":9,"nodeType":"792","messageId":"793","endLine":289,"endColumn":18},{"ruleId":"790","severity":1,"message":"1007","line":290,"column":9,"nodeType":"792","messageId":"793","endLine":290,"endColumn":14},{"ruleId":"796","severity":1,"message":"989","line":153,"column":6,"nodeType":"798","endLine":153,"endColumn":12,"suggestions":"1008"},{"ruleId":"839","severity":1,"message":"840","line":160,"column":32,"nodeType":"841","messageId":"842","endLine":160,"endColumn":43},{"ruleId":"843","severity":1,"message":"844","line":168,"column":28,"nodeType":"841","messageId":"842","endLine":168,"endColumn":40},{"ruleId":"843","severity":1,"message":"844","line":174,"column":28,"nodeType":"841","messageId":"842","endLine":174,"endColumn":40},{"ruleId":"796","severity":1,"message":"991","line":197,"column":6,"nodeType":"798","endLine":197,"endColumn":15,"suggestions":"1009"},{"ruleId":"860","severity":1,"message":"861","line":246,"column":45,"nodeType":"862","messageId":"863","endLine":246,"endColumn":47},{"ruleId":"843","severity":1,"message":"844","line":247,"column":27,"nodeType":"841","messageId":"842","endLine":247,"endColumn":39},{"ruleId":"923","severity":1,"message":"924","line":327,"column":31,"nodeType":"810","endLine":330,"endColumn":33},{"ruleId":"796","severity":1,"message":"989","line":152,"column":6,"nodeType":"798","endLine":152,"endColumn":12,"suggestions":"1010"},{"ruleId":"839","severity":1,"message":"840","line":158,"column":32,"nodeType":"841","messageId":"842","endLine":158,"endColumn":43},{"ruleId":"843","severity":1,"message":"844","line":166,"column":28,"nodeType":"841","messageId":"842","endLine":166,"endColumn":40},{"ruleId":"843","severity":1,"message":"844","line":172,"column":28,"nodeType":"841","messageId":"842","endLine":172,"endColumn":40},{"ruleId":"796","severity":1,"message":"991","line":195,"column":6,"nodeType":"798","endLine":195,"endColumn":15,"suggestions":"1011"},{"ruleId":"923","severity":1,"message":"924","line":233,"column":21,"nodeType":"810","endLine":244,"endColumn":23},{"ruleId":"790","severity":1,"message":"1012","line":112,"column":19,"nodeType":"792","messageId":"793","endLine":112,"endColumn":29},{"ruleId":"790","severity":1,"message":"1013","line":128,"column":10,"nodeType":"792","messageId":"793","endLine":128,"endColumn":22},{"ruleId":"790","severity":1,"message":"1014","line":128,"column":24,"nodeType":"792","messageId":"793","endLine":128,"endColumn":39},{"ruleId":"796","severity":1,"message":"835","line":145,"column":6,"nodeType":"798","endLine":145,"endColumn":48,"suggestions":"1015"},{"ruleId":"796","severity":1,"message":"824","line":228,"column":6,"nodeType":"798","endLine":228,"endColumn":8,"suggestions":"1016"},{"ruleId":"796","severity":1,"message":"824","line":251,"column":6,"nodeType":"798","endLine":251,"endColumn":13,"suggestions":"1017"},{"ruleId":"796","severity":1,"message":"1018","line":263,"column":6,"nodeType":"798","endLine":263,"endColumn":13,"suggestions":"1019"},{"ruleId":"796","severity":1,"message":"997","line":274,"column":6,"nodeType":"798","endLine":274,"endColumn":23,"suggestions":"1020"},{"ruleId":"796","severity":1,"message":"1021","line":291,"column":6,"nodeType":"798","endLine":291,"endColumn":11,"suggestions":"1022"},{"ruleId":"839","severity":1,"message":"840","line":369,"column":26,"nodeType":"841","messageId":"842","endLine":369,"endColumn":37},{"ruleId":"843","severity":1,"message":"844","line":371,"column":22,"nodeType":"841","messageId":"842","endLine":371,"endColumn":34},{"ruleId":"843","severity":1,"message":"844","line":377,"column":22,"nodeType":"841","messageId":"842","endLine":377,"endColumn":34},{"ruleId":"1002","severity":1,"message":"1003","line":417,"column":7,"nodeType":"1004","messageId":"1005","endLine":427,"endColumn":8},{"ruleId":"790","severity":1,"message":"1006","line":451,"column":9,"nodeType":"792","messageId":"793","endLine":451,"endColumn":18},{"ruleId":"790","severity":1,"message":"1007","line":452,"column":9,"nodeType":"792","messageId":"793","endLine":452,"endColumn":14},{"ruleId":"843","severity":1,"message":"844","line":43,"column":25,"nodeType":"841","messageId":"842","endLine":43,"endColumn":37},{"ruleId":"843","severity":1,"message":"844","line":46,"column":22,"nodeType":"841","messageId":"842","endLine":46,"endColumn":34},{"ruleId":"796","severity":1,"message":"1023","line":131,"column":6,"nodeType":"798","endLine":131,"endColumn":14,"suggestions":"1024"},{"ruleId":"796","severity":1,"message":"1025","line":145,"column":6,"nodeType":"798","endLine":145,"endColumn":13,"suggestions":"1026"},{"ruleId":"923","severity":1,"message":"924","line":151,"column":11,"nodeType":"810","endLine":160,"endColumn":13},{"ruleId":"796","severity":1,"message":"933","line":178,"column":6,"nodeType":"798","endLine":178,"endColumn":8,"suggestions":"1027"},{"ruleId":"796","severity":1,"message":"1028","line":204,"column":6,"nodeType":"798","endLine":204,"endColumn":8,"suggestions":"1029"},{"ruleId":"796","severity":1,"message":"1030","line":217,"column":6,"nodeType":"798","endLine":217,"endColumn":19,"suggestions":"1031"},{"ruleId":"796","severity":1,"message":"938","line":231,"column":6,"nodeType":"798","endLine":231,"endColumn":19,"suggestions":"1032"},{"ruleId":"796","severity":1,"message":"1033","line":270,"column":6,"nodeType":"798","endLine":270,"endColumn":8,"suggestions":"1034"},{"ruleId":"790","severity":1,"message":"1035","line":88,"column":10,"nodeType":"792","messageId":"793","endLine":88,"endColumn":28},{"ruleId":"790","severity":1,"message":"1036","line":113,"column":9,"nodeType":"792","messageId":"793","endLine":113,"endColumn":29},{"ruleId":"790","severity":1,"message":"1037","line":3,"column":10,"nodeType":"792","messageId":"793","endLine":3,"endColumn":21},{"ruleId":"790","severity":1,"message":"1038","line":4,"column":13,"nodeType":"792","messageId":"793","endLine":4,"endColumn":20},{"ruleId":"790","severity":1,"message":"1039","line":16,"column":9,"nodeType":"792","messageId":"793","endLine":16,"endColumn":13},{"ruleId":"796","severity":1,"message":"1040","line":52,"column":6,"nodeType":"798","endLine":52,"endColumn":11,"suggestions":"1041"},{"ruleId":"796","severity":1,"message":"984","line":86,"column":6,"nodeType":"798","endLine":86,"endColumn":19,"suggestions":"1042"},{"ruleId":"796","severity":1,"message":"984","line":105,"column":6,"nodeType":"798","endLine":105,"endColumn":8,"suggestions":"1043"},{"ruleId":"987","severity":1,"message":"988","line":118,"column":11,"nodeType":"810","endLine":122,"endColumn":13},"no-native-reassign",["1044"],"no-negated-in-lhs",["1045"],"no-unused-vars","'test' is defined but never used.","Identifier","unusedVar","'Bieudothongke' is defined but never used.","'logoutTimerIdRef' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadUser'. Either include it or remove the dependency array.","ArrayExpression",["1046"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["1047"],"React Hook useEffect has a missing dependency: 'autoLogout'. Either include it or remove the dependency array.",["1048"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'heighto'. Either include it or remove the dependency array.",["1049"],"React Hook useLayoutEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["1050"],"React Hook useLayoutEffect has missing dependencies: 'dispatch', 'pageSize.height', and 'pageSize.width'. Either include them or remove the dependency array.",["1051"],"'CardMedia' is defined but never used.","'ChangerUrl' is defined but never used.","React Hook useEffect has a missing dependency: 'urltb'. Either include it or remove the dependency array.",["1052"],["1053"],"React Hook useEffect has a missing dependency: 'urlt'. Either include it or remove the dependency array.",["1054"],"React Hook useEffect has a missing dependency: 'urlvt'. Either include it or remove the dependency array.",["1055"],["1056"],"React Hook useEffect has missing dependencies: 'authState.isAuthenticated', 'fixed_token', 'navigate', and 'objauth'. Either include them or remove the dependency array.",["1057"],"'Pannellum' is defined but never used.","'myImage1' is defined but never used.","'ShapeEditor' is defined but never used.","'ImageLayer' is defined but never used.","'DrawLayer' is defined but never used.","'urltdkt' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'handleInfo'. Either include it or remove the dependency array.",["1058"],["1059"],["1060"],"no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","no-new-object","The object literal notation {} is preferrable.","'arrayReplace' is defined but never used.","'RectShape' is assigned a value but never used.","'idIterator' is assigned a value but never used.","'items' is assigned a value but never used.","'setItems' is assigned a value but never used.","'vectorHeight' is assigned a value but never used.","'vectorWidth' is assigned a value but never used.","'setVectorDimensions' is assigned a value but never used.","'Helmet' is defined but never used.","'setSpacing' is assigned a value but never used.","'ListTuyen' is assigned a value but never used.","'setListTuyen' is assigned a value but never used.","'Data' is assigned a value but never used.","'playing' is assigned a value but never used.","'setCameraData' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'characters'. Either include it or remove the dependency array.",["1061"],"'handleOnDragEnd' is defined but never used.","Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","'Box' is defined but never used.","'Container' is defined but never used.","'TransformWrapper' is defined but never used.","'TransformComponent' is defined but never used.","'ListThietbi' is assigned a value but never used.","'idtuyen' is assigned a value but never used.","'handleChangetb' is assigned a value but never used.",["1062"],"React Hook useEffect has missing dependencies: 'dispatch' and 'urltttbgs'. Either include them or remove the dependency array.",["1063"],"Expected '===' and instead saw '=='.","React Hook useEffect has missing dependencies: 'anhthietbiloi?.data' and 'idthietbi'. Either include them or remove the dependency array.",["1064"],"'Button' is defined but never used.","'useEffect' is defined but never used.","'Chart' is defined but never used.","'data' is defined but never used.","'options' is defined but never used.","'chart' is assigned a value but never used.","'setChart' is assigned a value but never used.","'ctx' is assigned a value but never used.","'value' is assigned a value but never used.","'Navigate' is defined but never used.",["1065"],"'ButtonBase' is defined but never used.","'IMGSHOW' is defined but never used.","'itemDataError' is defined but never used.","'itemDataNone' is defined but never used.","'Data2' is assigned a value but never used.","'Data4' is assigned a value but never used.","'sort' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'GetImg', 'dispatch', 'fetchedData?.length', and 'getDataDB'. Either include them or remove the dependency array.",["1066"],"React Hook useEffect has missing dependencies: 'GetImg' and 'fetchedData'. Either include them or remove the dependency array.",["1067"],"React Hook useEffect has missing dependencies: 'GetImg2', 'dispatch', 'fetchedData2?.length', and 'getDataDB2'. Either include them or remove the dependency array.",["1068"],"React Hook useEffect has missing dependencies: 'GetImg2' and 'fetchedData2'. Either include them or remove the dependency array.",["1069"],"'uuidv4' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","Assign array to a variable before exporting as module default","no-dupe-keys","Duplicate key 'VT6'.","ObjectExpression","'renderData' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component Map_Item must be in PascalCase or SCREAMING_SNAKE_CASE","usePascalOrSnakeCase","'indigo' is defined but never used.","'AttachMoneyIcon' is defined but never used.","'idanh' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'RunImg'. Either include it or remove the dependency array.",["1070"],"React Hook useEffect has a missing dependency: 'onResize'. Either include it or remove the dependency array.",["1071"],"React Hook useEffect has missing dependencies: 'DetectVideo' and 'dispatch'. Either include them or remove the dependency array.",["1072"],"'BtnPrint' is defined but never used.","React Hook useEffect has missing dependencies: 'GetImg', 'dispatch', 'fetchedData', and 'getDataDB'. Either include them or remove the dependency array.",["1073"],"React Hook useEffect has missing dependencies: 'ListTuyen.length', 'dispatch', and 'getDatatuyen'. Either include them or remove the dependency array.",["1074"],["1075"],"React Hook useEffect has a missing dependency: 'GetImg'. Either include it or remove the dependency array.",["1076"],"'useContext' is defined but never used.","'FaCompass' is defined but never used.","'FaTemperatureHigh' is defined but never used.","'FaTemperatureLow' is defined but never used.","'FaWind' is defined but never used.","'TiWeatherCloudy' is defined but never used.","'WiHumidity' is defined but never used.","'WeatherContext' is defined but never used.","'Line' is defined but never used.","'ImageTwoTone' is defined but never used.",["1077"],["1078"],"no-redeclare","'jsonArg1' is already defined.","redeclared","'filtered' is already defined.","React Hook useEffect has a missing dependency: 'calc_center_and_draw'. Either include it or remove the dependency array.",["1079"],"React Hook useEffect has missing dependencies: 'ModeShowVideo' and 'Typewsdata'. Either include them or remove the dependency array.",["1080"],"React Hook useEffect has missing dependencies: 'ListVTT' and 'findobj'. Either include them or remove the dependency array.",["1081"],"'newLat' is assigned a value but never used.","'newLng' is assigned a value but never used.","'zoom' is assigned a value but never used.","'cot' is assigned a value but never used.","'zoom2' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.",["1082"],"Duplicate key 'background'.","React Hook useEffect has missing dependencies: 'dispatch', 'fetchedData', and 'getDataDB'. Either include them or remove the dependency array.",["1083"],["1084"],["1085"],["1086"],"React Hook useEffect has missing dependencies: 'GetListVideo', 'ModeShowVideo', and 'fetchedData'. Either include them or remove the dependency array.",["1087"],"React Hook useEffect has a missing dependency: 'GetListVideo'. Either include it or remove the dependency array.",["1088"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["1089"],"'useRef' is defined but never used.","React Hook useEffect has missing dependencies: 'props.input.length' and 'setSlideIndex'. Either include them or remove the dependency array.",["1090"],"React Hook useEffect has missing dependencies: 'props.mode', 'props.timeout', 'runAutomatic', and 'updateDimensions'. Either include them or remove the dependency array.",["1091"],["1092"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","React Hook useEffect has missing dependencies: 'Change_List_Cot' and 'post.ma_tuyen'. Either include them or remove the dependency array.",["1093"],"React Hook useEffect has missing dependencies: 'dispatch', 'open', 'post.bat_dau_doan', 'post.ket_thuc_doan', and 'post.ma_tuyen'. Either include them or remove the dependency array.",["1094"],"'WarningIcon' is defined but never used.",["1095"],"'useSelector' is defined but never used.","'resetTransformEl' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'connect', 'connectIMG', and 'disconnect'. Either include them or remove the dependency array.",["1096"],["1097"],["1098"],"'onChangeSelectOptions' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'erorrlist' is assigned a value but never used.","'count' is assigned a value but never used.",["1099"],["1100"],["1101"],["1102"],"'setListCot' is assigned a value but never used.","'SelectForder' is assigned a value but never used.","'setSelectForder' is assigned a value but never used.",["1103"],["1104"],["1105"],"React Hook useEffect has a missing dependency: 'waitListcot'. Either include it or remove the dependency array.",["1106"],["1107"],"React Hook useEffect has a missing dependency: 'waitDot'. Either include it or remove the dependency array.",["1108"],"React Hook useEffect has missing dependencies: 'Lists', 'Typewsdata', and 'dispatch'. Either include them or remove the dependency array.",["1109"],"React Hook useEffect has missing dependencies: 'RunImg' and 'Typewsdata'. Either include them or remove the dependency array.",["1110"],["1111"],"React Hook useEffect has missing dependencies: 'FindMonth', 'Month', and 'fetchedData'. Either include them or remove the dependency array.",["1112"],"React Hook useEffect has missing dependencies: 'FindMonth' and 'Month'. Either include them or remove the dependency array.",["1113"],["1114"],"React Hook useEffect has missing dependencies: 'ListTuyens.length', 'dispatch', and 'getDatatuyen'. Either include them or remove the dependency array.",["1115"],"'mobileMoreAnchorEl' is assigned a value but never used.","'handleMobileMenuOpen' is assigned a value but never used.","'useDispatch' is defined but never used.","'actions' is defined but never used.","'type' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.input.length'. Either include it or remove the dependency array.",["1116"],["1117"],["1118"],"no-global-assign","no-unsafe-negation",{"desc":"1119","fix":"1120"},{"desc":"1121","fix":"1122"},{"desc":"1123","fix":"1124"},{"desc":"1125","fix":"1126"},{"desc":"1127","fix":"1128"},{"desc":"1129","fix":"1130"},{"desc":"1131","fix":"1132"},{"desc":"1133","fix":"1134"},{"desc":"1135","fix":"1136"},{"desc":"1137","fix":"1138"},{"desc":"1139","fix":"1140"},{"desc":"1141","fix":"1142"},{"desc":"1143","fix":"1144"},{"desc":"1131","fix":"1145"},{"desc":"1135","fix":"1146"},{"desc":"1147","fix":"1148"},{"desc":"1135","fix":"1149"},{"desc":"1150","fix":"1151"},{"desc":"1152","fix":"1153"},{"desc":"1154","fix":"1155"},{"desc":"1156","fix":"1157"},{"desc":"1158","fix":"1159"},{"desc":"1160","fix":"1161"},{"desc":"1162","fix":"1163"},{"desc":"1164","fix":"1165"},{"desc":"1166","fix":"1167"},{"desc":"1168","fix":"1169"},{"desc":"1170","fix":"1171"},{"desc":"1172","fix":"1173"},{"desc":"1158","fix":"1174"},{"desc":"1158","fix":"1175"},{"desc":"1137","fix":"1176"},{"desc":"1177","fix":"1178"},{"desc":"1179","fix":"1180"},{"desc":"1181","fix":"1182"},{"desc":"1183","fix":"1184"},{"desc":"1185","fix":"1186"},{"desc":"1187","fix":"1188"},{"desc":"1172","fix":"1189"},{"desc":"1137","fix":"1190"},{"desc":"1139","fix":"1191"},{"desc":"1192","fix":"1193"},{"desc":"1194","fix":"1195"},{"desc":"1196","fix":"1197"},{"desc":"1198","fix":"1199"},{"desc":"1200","fix":"1201"},{"desc":"1202","fix":"1203"},{"desc":"1204","fix":"1205"},{"desc":"1206","fix":"1207"},{"desc":"1208","fix":"1209"},{"desc":"1210","fix":"1211"},{"desc":"1204","fix":"1212"},{"desc":"1206","fix":"1213"},{"desc":"1204","fix":"1214"},{"desc":"1206","fix":"1215"},{"desc":"1204","fix":"1216"},{"desc":"1206","fix":"1217"},{"desc":"1143","fix":"1218"},{"desc":"1137","fix":"1219"},{"desc":"1139","fix":"1220"},{"desc":"1221","fix":"1222"},{"desc":"1210","fix":"1223"},{"desc":"1224","fix":"1225"},{"desc":"1226","fix":"1227"},{"desc":"1228","fix":"1229"},{"desc":"1170","fix":"1230"},{"desc":"1231","fix":"1232"},{"desc":"1231","fix":"1233"},{"desc":"1158","fix":"1234"},{"desc":"1235","fix":"1236"},{"desc":"1237","fix":"1238"},{"desc":"1200","fix":"1239"},{"desc":"1202","fix":"1240"},"Update the dependencies array to be: [loadUser]",{"range":"1241","text":"1242"},"Update the dependencies array to be: [authState, navigate]",{"range":"1243","text":"1244"},"Update the dependencies array to be: [autoLogout]",{"range":"1245","text":"1246"},"Update the dependencies array to be: [heighto]",{"range":"1247","text":"1248"},"Update the dependencies array to be: [dispatch]",{"range":"1249","text":"1250"},"Update the dependencies array to be: [dispatch, pageSize.height, pageSize.width]",{"range":"1251","text":"1252"},"Update the dependencies array to be: [urltb]",{"range":"1253","text":"1254"},"Update the dependencies array to be: [page, Tuyen, Loai, VTT, urltb]",{"range":"1255","text":"1256"},"Update the dependencies array to be: [urlt]",{"range":"1257","text":"1258"},"Update the dependencies array to be: [urlvt]",{"range":"1259","text":"1260"},"Update the dependencies array to be: [Tuyen, urlvt]",{"range":"1261","text":"1262"},"Update the dependencies array to be: [authState.isAuthenticated, fixed_token, navigate, objauth]",{"range":"1263","text":"1264"},"Update the dependencies array to be: [DateDB, Dot, Tuyen, BatDau, KetThuc, New, handleInfo]",{"range":"1265","text":"1266"},{"range":"1267","text":"1254"},{"range":"1268","text":"1258"},"Update the dependencies array to be: [characters]",{"range":"1269","text":"1270"},{"range":"1271","text":"1258"},"Update the dependencies array to be: [Tuyen, dispatch, page, urltttbgs]",{"range":"1272","text":"1273"},"Update the dependencies array to be: [anhthietbiloi?.data, idanh, idthietbi]",{"range":"1274","text":"1275"},"Update the dependencies array to be: [navigate]",{"range":"1276","text":"1277"},"Update the dependencies array to be: [GetImg, dispatch, fetchedData?.length, getDataDB]",{"range":"1278","text":"1279"},"Update the dependencies array to be: [GetImg, fetchedData]",{"range":"1280","text":"1281"},"Update the dependencies array to be: [GetImg2, dispatch, fetchedData2?.length, getDataDB2]",{"range":"1282","text":"1283"},"Update the dependencies array to be: [GetImg2, fetchedData2]",{"range":"1284","text":"1285"},"Update the dependencies array to be: [RunImg, currentVideoNormal]",{"range":"1286","text":"1287"},"Update the dependencies array to be: [onResize]",{"range":"1288","text":"1289"},"Update the dependencies array to be: [DetectVideo, dispatch, pageSize]",{"range":"1290","text":"1291"},"Update the dependencies array to be: [GetImg, dispatch, fetchedData, getDataDB]",{"range":"1292","text":"1293"},"Update the dependencies array to be: [ListTuyen.length, dispatch, getDatatuyen]",{"range":"1294","text":"1295"},{"range":"1296","text":"1281"},{"range":"1297","text":"1281"},{"range":"1298","text":"1260"},"Update the dependencies array to be: [Redux_tuyen, urlvt]",{"range":"1299","text":"1300"},"Update the dependencies array to be: [LinePoint, calc_center_and_draw]",{"range":"1301","text":"1302"},"Update the dependencies array to be: [ModeShowVideo, Toado, Typewsdata]",{"range":"1303","text":"1304"},"Update the dependencies array to be: [ListVTT, Redux_cot, findobj]",{"range":"1305","text":"1306"},"Update the dependencies array to be: [RunImg, Toado]",{"range":"1307","text":"1308"},"Update the dependencies array to be: [dispatch, fetchedData, getDataDB]",{"range":"1309","text":"1310"},{"range":"1311","text":"1295"},{"range":"1312","text":"1260"},{"range":"1313","text":"1262"},"Update the dependencies array to be: [GetListVideo, ModeShowVideo, fetchedData]",{"range":"1314","text":"1315"},"Update the dependencies array to be: [GetListVideo, fetchedData]",{"range":"1316","text":"1317"},"Update the dependencies array to be: [CurrentVideo, dispatch]",{"range":"1318","text":"1319"},"Update the dependencies array to be: [idx, props.input.length, setSlideIndex]",{"range":"1320","text":"1321"},"Update the dependencies array to be: [props.input, props.mode, props.timeout, runAutomatic, updateDimensions]",{"range":"1322","text":"1323"},"Update the dependencies array to be: [props.mode, props.timeout, runAutomatic, updateDimensions]",{"range":"1324","text":"1325"},"Update the dependencies array to be: [Change_List_Cot, open, post.ma_tuyen]",{"range":"1326","text":"1327"},"Update the dependencies array to be: [ListCot, dispatch, open, post.bat_dau_doan, post.ket_thuc_doan, post.ma_tuyen]",{"range":"1328","text":"1329"},"Update the dependencies array to be: [Toado, dispatch]",{"range":"1330","text":"1331"},"Update the dependencies array to be: [open, SelectIMG, connect, connectIMG, disconnect]",{"range":"1332","text":"1333"},{"range":"1334","text":"1327"},{"range":"1335","text":"1329"},{"range":"1336","text":"1327"},{"range":"1337","text":"1329"},{"range":"1338","text":"1327"},{"range":"1339","text":"1329"},{"range":"1340","text":"1266"},{"range":"1341","text":"1260"},{"range":"1342","text":"1262"},"Update the dependencies array to be: [Tuyen, waitListcot]",{"range":"1343","text":"1344"},{"range":"1345","text":"1333"},"Update the dependencies array to be: [Dot, waitDot]",{"range":"1346","text":"1347"},"Update the dependencies array to be: [Lists, Listtd, Typewsdata, dispatch]",{"range":"1348","text":"1349"},"Update the dependencies array to be: [Lists, RunImg, Typewsdata]",{"range":"1350","text":"1351"},{"range":"1352","text":"1293"},"Update the dependencies array to be: [FindMonth, Month, fetchedData]",{"range":"1353","text":"1354"},{"range":"1355","text":"1354"},{"range":"1356","text":"1281"},"Update the dependencies array to be: [ListTuyens.length, dispatch, getDatatuyen]",{"range":"1357","text":"1358"},"Update the dependencies array to be: [idx, props.input.length]",{"range":"1359","text":"1360"},{"range":"1361","text":"1323"},{"range":"1362","text":"1325"},[1517,1519],"[loadUser]",[2057,2068],"[authState, navigate]",[3062,3064],"[autoLogout]",[6134,6136],"[heighto]",[7211,7213],"[dispatch]",[8050,8052],"[dispatch, pageSize.height, pageSize.width]",[2873,2875],"[urltb]",[3482,3506],"[page, Tuyen, Loai, VTT, urltb]",[4029,4031],"[urlt]",[4549,4551],"[urlvt]",[5069,5076],"[Tuyen, urlvt]",[1019,1021],"[authState.isAuthenticated, fixed_token, navigate, objauth]",[4507,4549],"[DateDB, Dot, Tuyen, BatDau, KetThuc, New, handleInfo]",[4983,4985],[5422,5424],[13630,13632],"[characters]",[2489,2491],[3453,3466],"[Tuyen, dispatch, page, urltttbgs]",[4017,4024],"[anhthietbiloi?.data, idanh, idthietbi]",[251,253],"[navigate]",[5232,5234],"[GetImg, dispatch, fetchedData?.length, getDataDB]",[6798,6800],"[GetImg, fetchedData]",[7911,7913],"[GetImg2, dispatch, fetchedData2?.length, getDataDB2]",[9625,9627],"[GetImg2, fetchedData2]",[4821,4841],"[RunImg, currentVideoNormal]",[5840,5842],"[onResize]",[6030,6040],"[DetectVideo, dispatch, pageSize]",[5554,5556],"[GetImg, dispatch, fetchedData, getDataDB]",[6408,6410],"[ListTuyen.length, dispatch, getDatatuyen]",[7203,7205],[7529,7542],[4475,4477],[4995,5008],"[Redux_tuyen, urlvt]",[7060,7071],"[LinePoint, calc_center_and_draw]",[8492,8499],"[ModeShowVideo, Toado, Typewsdata]",[8554,8565],"[ListVTT, Redux_cot, findobj]",[2630,2637],"[RunImg, Toado]",[4827,4829],"[dispatch, fetchedData, getDataDB]",[5680,5682],[6200,6202],[6720,6727],[9684,9686],"[GetListVideo, ModeShowVideo, fetchedData]",[9945,9958],"[GetListVideo, fetchedData]",[10594,10608],"[CurrentVideo, dispatch]",[1743,1748],"[idx, props.input.length, setSlideIndex]",[2673,2686],"[props.input, props.mode, props.timeout, runAutomatic, updateDimensions]",[3195,3197],"[props.mode, props.timeout, runAutomatic, updateDimensions]",[4375,4381],"[Change_List_Cot, open, post.ma_tuyen]",[5774,5783],"[ListCot, dispatch, open, post.bat_dau_doan, post.ket_thuc_doan, post.ma_tuyen]",[2994,3001],"[Toado, dispatch]",[4600,4617],"[open, SelectIMG, connect, connectIMG, disconnect]",[4896,4902],[6291,6300],[4363,4369],[5762,5771],[4387,4393],[5784,5793],[5063,5105],[6846,6848],[7366,7373],[7585,7592],"[Tuyen, waitListcot]",[7813,7830],[8298,8303],"[Dot, waitDot]",[3838,3846],"[Lists, Listtd, Typewsdata, dispatch]",[4101,4108],"[Lists, RunImg, Typewsdata]",[5035,5037],[5619,5621],"[FindMonth, Month, fetchedData]",[5898,5911],[6236,6249],[7101,7103],"[ListTuyens.length, dispatch, getDatatuyen]",[1556,1561],"[idx, props.input.length]",[2486,2499],[3008,3010]]